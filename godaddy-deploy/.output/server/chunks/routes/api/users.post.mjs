import{c as e,r as t,e as n}from"../../_/nitro.mjs";import{e as a}from"../../_/database.mjs";import"node:http";import"node:https";import"node:events";import"node:buffer";import"vue";import"node:fs";import"node:url";import"@iconify/utils";import"node:crypto";import"consola";import"ipx";import"node:path";import"mysql2/promise";import"bcryptjs";import"jsonwebtoken";const r=e((async e=>{try{const r=await t(e);if(!r.email||!r.password||!r.full_name)throw n({statusCode:400,statusMessage:"Email, password, and full name are required"});const s=await a("\n      SELECT id FROM users WHERE email = ?\n    ",[r.email]);if(s&&s.length>0)throw n({statusCode:400,statusMessage:"Email already exists"});const i=await a("\n      INSERT INTO users (\n        email,\n        password,\n        full_name,\n        phone,\n        role,\n        status,\n        email_verified,\n        phone_verified,\n        bio,\n        date_of_birth,\n        gender,\n        nationality,\n        address,\n        city,\n        country,\n        postal_code,\n        preferences,\n        created_at,\n        updated_at\n      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)\n    ",[r.email,r.password,r.full_name,r.phone||null,r.role||"user",r.status||"active",r.email_verified||0,r.phone_verified||0,r.bio||null,r.date_of_birth||null,r.gender||null,r.nationality||null,r.address||null,r.city||null,r.country||null,r.postal_code||null,JSON.stringify(r.preferences||{})]),o=await a("\n      SELECT \n        id,\n        email,\n        full_name,\n        phone,\n        role,\n        status,\n        email_verified,\n        phone_verified,\n        bio,\n        date_of_birth,\n        gender,\n        nationality,\n        address,\n        city,\n        country,\n        postal_code,\n        preferences,\n        created_at,\n        updated_at\n      FROM users \n      WHERE id = ?\n    ",[i.insertId]);if(!o||0===o.length)throw n({statusCode:500,statusMessage:"Failed to retrieve created user"});const d=o[0];return{success:!0,message:"User created successfully",data:{id:d.id,email:d.email,full_name:d.full_name,phone:d.phone,role:d.role,status:d.status,email_verified:d.email_verified,phone_verified:d.phone_verified,bio:d.bio,date_of_birth:d.date_of_birth,gender:d.gender,nationality:d.nationality,address:d.address,city:d.city,country:d.country,postal_code:d.postal_code,preferences:JSON.parse(d.preferences||"{}"),created_at:d.created_at,updated_at:d.updated_at}}}catch(e){if(console.error("Error creating user:",e),e.statusCode)throw e;throw n({statusCode:500,statusMessage:"Failed to create user"})}}));export{r as default};
//# sourceMappingURL=users.post.mjs.map
