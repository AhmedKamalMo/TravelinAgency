import{d as t,g as s,c as e}from"../../../_/nitro.mjs";import{executeQuery as o}from"../../../_/database.mjs";import"node:http";import"node:https";import"node:events";import"node:buffer";import"vue";import"@iconify/utils";import"node:crypto";import"consola";import"node:url";import"ipx";import"node:fs";import"node:path";import"mysql2/promise";import"bcryptjs";import"jsonwebtoken";const i=t((async t=>{try{const i=s(t,"id");if(!i)throw e({statusCode:400,statusMessage:"Page ID is required"});const a=await o("\n      SELECT id FROM cms_pages WHERE id = ?\n    ",[i]);if(!a||0===a.length)throw e({statusCode:404,statusMessage:"Page not found"});return await o("\n      DELETE FROM cms_sections WHERE page_id = ?\n    ",[i]),await o("\n      DELETE FROM cms_content_blocks \n      WHERE section_id IN (\n        SELECT id FROM cms_sections WHERE page_id = ?\n      )\n    ",[i]),await o("\n      DELETE FROM cms_pages WHERE id = ?\n    ",[i]),{success:!0,message:"Page deleted successfully"}}catch(t){if(console.error("Error deleting page:",t),t.statusCode)throw t;throw e({statusCode:500,statusMessage:"Failed to delete page"})}}));export{i as default};
//# sourceMappingURL=_id_.delete.mjs.map
