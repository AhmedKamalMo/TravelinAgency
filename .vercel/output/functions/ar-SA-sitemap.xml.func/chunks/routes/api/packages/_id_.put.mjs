import{d as t,g as e,r as a,c as i}from"../../../_/nitro.mjs";import{executeQuery as r}from"../../../_/database.mjs";import"node:http";import"node:https";import"node:events";import"node:buffer";import"vue";import"@iconify/utils";import"node:crypto";import"consola";import"node:url";import"ipx";import"node:fs";import"node:path";import"mysql2/promise";import"bcryptjs";import"jsonwebtoken";const n=t((async t=>{try{const n=e(t,"id"),o=await a(t);if(!n)throw i({statusCode:400,statusMessage:"Package ID is required"});console.log(`Package ${n} update requested:`,o);try{if(0===(await r("\n        UPDATE packages SET\n          title_ar = ?,\n          title_en = ?,\n          description_ar = ?,\n          description_en = ?,\n          price = ?,\n          duration_days = ?,\n          travel_period = ?,\n          max_persons = ?,\n          image_url = ?,\n          featured = ?,\n          active = ?,\n          updated_at = CURRENT_TIMESTAMP\n        WHERE numeric_id = ? OR id = ?\n      ",[o.title_ar||o.title,o.title_en||o.title,o.description_ar||o.description,o.description_en||o.description,o.price||0,o.duration_days||7,o.travel_period||o.location||"",o.max_persons||10,o.image_url||"",o.featured?1:0,"active"===o.status?1:0,n,n])).affectedRows)throw new Error("Package not found in database");const t=await r("\n        SELECT \n          id, \n          title_ar,\n          title_en,\n          description_ar,\n          description_en,\n          price,\n          duration_days as duration,\n          image_url as image,\n          travel_period as location,\n          max_persons,\n          featured,\n          active as status,\n          created_at,\n          updated_at\n        FROM packages \n        WHERE numeric_id = ? OR id = ?\n      ",[n,n]);if(!t||0===t.length)throw new Error("Failed to retrieve updated package");const e=t[0];return{success:!0,message:"Package updated successfully in database",package:{id:e.id,title:e.title_ar||e.title_en,title_ar:e.title_ar,title_en:e.title_en,description:e.description_ar||e.description_en,description_ar:e.description_ar,description_en:e.description_en,price:e.price,duration:`${e.duration} days`,duration_days:e.duration,image:e.image,image_url:e.image,destination:e.location,location:e.location,travel_period:e.location,max_persons:e.max_persons||10,category:"international",featured:e.featured,status:1===e.status?"active":"inactive",features:[],itinerary:[],included:[],excluded:[],created_at:e.created_at,updated_at:e.updated_at}}}catch(t){console.log("Database update failed:",t);try{const t=await import("fs"),e=(await import("path")).join(process.cwd(),"public","packages-with-local-images.json"),a=t.readFileSync(e,"utf8"),i=JSON.parse(a),r=i.find((t=>t.id===parseInt(n)));if(r){const a={...r,title:o.title_ar||o.title||r.title,description:o.description_ar||o.description||r.description,price:o.price||r.price,duration:o.duration||r.duration,destination:o.travel_period||o.location||r.destination,featured:void 0!==o.featured?o.featured:r.featured,status:o.status||r.status,updated_at:(new Date).toISOString()},s=i.findIndex((t=>t.id===parseInt(n)));return-1!==s&&(i[s]=a,t.writeFileSync(e,JSON.stringify(i,null,2))),{success:!0,message:"Package updated successfully in local data (database unavailable)",package:{id:a.id,title:a.title,title_ar:a.title,title_en:a.title,description:a.description,description_ar:a.description,description_en:a.description,price:a.price,duration:a.duration,duration_days:7,image:a.image,image_url:a.image,destination:a.destination,location:a.destination,travel_period:a.destination,max_persons:10,category:"international",featured:a.featured,status:a.status,features:[],itinerary:[],included:[],excluded:[],created_at:a.created_at,updated_at:a.updated_at}}}}catch(t){console.log("Local package update also failed:",t)}throw i({statusCode:500,statusMessage:"Failed to update package in both database and local storage"})}}catch(t){if(console.error("Error updating package:",t),t.statusCode)throw t;throw i({statusCode:500,statusMessage:"Failed to update package"})}}));export{n as default};
//# sourceMappingURL=_id_.put.mjs.map
