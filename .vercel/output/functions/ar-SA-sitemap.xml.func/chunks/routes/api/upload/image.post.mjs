import{d as t,h as e,c as s}from"../../../_/nitro.mjs";import{mkdir as a,writeFile as o}from"fs/promises";import{join as i}from"path";import{existsSync as r}from"fs";import"node:http";import"node:https";import"node:events";import"node:buffer";import"vue";import"@iconify/utils";import"node:crypto";import"consola";import"node:url";import"ipx";import"node:fs";import"node:path";const p=t((async t=>{try{const p=await e(t);if(!p||0===p.length)throw s({statusCode:400,statusMessage:"No file uploaded"});const n=p[0];if(!["image/jpeg","image/jpg","image/png","image/gif","image/webp"].includes(n.type))throw s({statusCode:400,statusMessage:"Invalid file type. Only JPEG, PNG, GIF, and WebP images are allowed."});const m=5242880;if(n.data.length>m)throw s({statusCode:400,statusMessage:"File too large. Maximum size is 5MB."});const l=i(process.cwd(),"uploads");r(l)||await a(l,{recursive:!0});const d=n.filename.split(".").pop(),u=`logo_${Date.now()}_${Math.random().toString(36).substring(7)}.${d}`,g=i(l,u);await o(g,n.data);try{const{executeQuery:t}=await import("../../../_/database.mjs");await t("INSERT INTO cms_site_settings (setting_key, setting_value, setting_type, category, is_public) VALUES ('site_logo', ?, 'image', 'general', 1) ON DUPLICATE KEY UPDATE setting_value = VALUES(setting_value)",[`/uploads/${u}`])}catch(t){console.error("Database update failed:",t)}return{success:!0,message:"Image uploaded successfully",url:`/uploads/${u}`,filename:u}}catch(t){throw console.error("Upload error:",t),s({statusCode:t.statusCode||500,statusMessage:t.statusMessage||"Upload failed: "+t.message})}}));export{p as default};
//# sourceMappingURL=image.post.mjs.map
