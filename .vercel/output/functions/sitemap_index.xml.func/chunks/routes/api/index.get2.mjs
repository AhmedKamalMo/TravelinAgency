import{d as t,a as e,c as a}from"../../_/nitro.mjs";import{executeQuery as n}from"../../_/database.mjs";import"node:http";import"node:https";import"node:events";import"node:buffer";import"vue";import"@iconify/utils";import"node:crypto";import"consola";import"node:url";import"ipx";import"node:fs";import"node:path";import"mysql2/promise";import"bcryptjs";import"jsonwebtoken";const i=t((async t=>{try{const a=e(t),{page:i="1",limit:r="50",type:o="",status:s="",featured:p="",search:d=""}=a,c=parseInt(i),m=parseInt(r),u=(c-1)*m;let _=[],l=[];if(o&&(_.push("category = ?"),l.push(o)),s&&(_.push("active = ?"),l.push("active"===s?1:0)),p&&(_.push("featured = ?"),l.push("true"===p?1:0)),d){_.push("(name_ar LIKE ? OR name_en LIKE ? OR description_ar LIKE ? OR description_en LIKE ?)");const t=`%${d}%`;l.push(t,t,t,t)}const h=_.length>0?`WHERE ${_.join(" AND ")}`:"",f=`SELECT COUNT(*) as total FROM destinations ${h}`,g=await n(f,l),E=g[0]?.total||0,y=`\n      SELECT \n        id,\n        name_ar,\n        name_en,\n        description_ar,\n        description_en,\n        image_url,\n        featured,\n        category,\n        active,\n        created_at,\n        updated_at\n      FROM destinations \n      ${h}\n      ORDER BY featured DESC, created_at DESC\n      LIMIT ? OFFSET ?\n    `,v=await n(y,[...l,m,u]);return{success:!0,data:v.map((t=>({id:t.id,name:t.name_ar||t.name_en,name_ar:t.name_ar,name_en:t.name_en,description:t.description_ar||t.description_en,description_ar:t.description_ar,description_en:t.description_en,image:t.image_url,image_url:t.image_url,featured:1===t.featured,category:t.category,active:1===t.active,status:1===t.active?"active":"inactive",created_at:t.created_at,updated_at:t.updated_at}))),pagination:{page:c,limit:m,total:E,totalPages:Math.ceil(E/m)}}}catch(t){throw console.error("Error fetching destinations:",t),a({statusCode:500,statusMessage:"Failed to fetch destinations"})}}));export{i as default};
//# sourceMappingURL=index.get2.mjs.map
