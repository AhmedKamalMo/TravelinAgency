import{d as t,g as e,c as a}from"../../../_/nitro.mjs";import{executeQuery as r}from"../../../_/database.mjs";import"node:http";import"node:https";import"node:events";import"node:buffer";import"vue";import"@iconify/utils";import"node:crypto";import"consola";import"node:url";import"ipx";import"node:fs";import"node:path";import"mysql2/promise";import"bcryptjs";import"jsonwebtoken";const i=t((async t=>{try{const i=e(t,"id");if(!i)throw a({statusCode:400,statusMessage:"Package ID is required"});const o=await r("\n      SELECT \n        id, \n        title_ar,\n        title_en,\n        description_ar,\n        description_en,\n        price,\n        duration_days as duration,\n        image_url as image,\n        travel_period as location,\n        max_persons,\n        category,\n        featured,\n        active as status,\n        features,\n        itinerary,\n        included,\n        excluded,\n        created_at,\n        updated_at\n      FROM packages \n      WHERE id = ?\n    ",[i]);if(!o||0===o.length)throw a({statusCode:404,statusMessage:"Package not found"});const n=o[0];return{package:{id:n.id,image_url:n.image,title_ar:n.title_ar,title_en:n.title_en,description_ar:n.description_ar,description_en:n.description_en,travel_period:n.location,duration_days:n.duration,price:n.price,max_persons:n.max_persons||10,category:n.category||"domestic",featured:n.featured,location:n.location,status:1===n.status?"active":"inactive",features:JSON.parse(n.features||"[]"),itinerary:JSON.parse(n.itinerary||"[]"),included:JSON.parse(n.included||"[]"),excluded:JSON.parse(n.excluded||"[]"),created_at:n.created_at,updated_at:n.updated_at}}}catch(t){if(console.error("Error fetching package:",t),t.statusCode)throw t;throw a({statusCode:500,statusMessage:"Failed to fetch package"})}}));export{i as default};
//# sourceMappingURL=_id_.get.mjs.map
