import{d as e}from"../../../_/nitro.mjs";import{readdir as t,stat as o}from"fs/promises";import{join as r}from"path";import"node:http";import"node:https";import"node:events";import"node:buffer";import"vue";import"@iconify/utils";import"node:crypto";import"consola";import"node:url";import"ipx";import"node:fs";import"node:path";const s=e((async e=>{try{const e=r(process.cwd(),"public","images","packages","imported"),s=r(process.cwd(),"public","images","packages");let i=[];try{i=(await t(e)).filter((e=>{const t=e.toLowerCase().split(".").pop();return["jpg","jpeg","png","webp","gif"].includes(t)}))}catch(e){console.error("Error reading imported directory:",e)}let p=[];try{p=(await t(s)).filter((e=>{const t=e.toLowerCase().split(".").pop();return["jpg","jpeg","png","webp","gif"].includes(t)}))}catch(e){console.error("Error reading old directory:",e)}const a=["paris-romance.jpg","tokyo-modern.jpg","london-royal.jpg"],c=[];for(const t of a){const i=r(e,t),p=r(s,t);let a=!1,m=!1;try{await o(i),a=!0}catch{a=!1}try{await o(p),m=!0}catch{m=!1}c.push({name:t,imported:{path:`/images/packages/imported/${t}`,exists:a},old:{path:`/images/packages/${t}`,exists:m}})}return{success:!0,message:"Image accessibility test completed",summary:{importedImages:i.length,oldImages:p.length,importedDirectory:e,oldDirectory:s},testResults:c,importedImages:i.slice(0,10),oldImages:p.slice(0,10)}}catch(e){return console.error("Error testing images:",e),{success:!1,message:"Failed to test images",error:e.message}}}));export{s as default};
//# sourceMappingURL=test.get.mjs.map
