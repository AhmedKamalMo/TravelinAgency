import{d as t,h as e,c as s}from"../../../_/nitro.mjs";import{mkdir as a,writeFile as o}from"fs/promises";import{join as i,extname as r}from"path";import{v as m}from"../../../_/v4.mjs";import"node:http";import"node:https";import"node:events";import"node:buffer";import"vue";import"@iconify/utils";import"node:crypto";import"consola";import"node:url";import"ipx";import"node:fs";import"node:path";import"crypto";const n=t((async t=>{var n;try{const d=await e(t);if(!d||0===d.length)throw s({statusCode:400,statusMessage:"No files uploaded"});const p=d[0];if(!p.data||!p.filename)throw s({statusCode:400,statusMessage:"Invalid file data"});if(!(null==(n=p.type)?void 0:n.startsWith("image/")))throw s({statusCode:400,statusMessage:"File must be an image"});const l=5242880;if(p.data.length>l)throw s({statusCode:400,statusMessage:"File size too large. Maximum 5MB allowed"});const u=i(process.cwd(),"public","images","destinations");await a(u,{recursive:!0});const c=r(p.filename),f=`dest_${m()}${c}`,g=i(u,f);await o(g,p.data);return{success:!0,message:"Image uploaded successfully",data:{originalName:p.filename,filename:f,url:`/images/destinations/${f}`,size:p.data.length,type:p.type||"image/jpeg"}}}catch(t){if(console.error("Error uploading destination image:",t),t.statusCode)throw t;throw s({statusCode:500,statusMessage:"Failed to upload image"})}}));export{n as default};
//# sourceMappingURL=upload-destination.post.mjs.map
