import{d as s,g as t,r as e,c as o}from"../../../_/nitro.mjs";import{e as a}from"../../../_/database.mjs";import"node:http";import"node:https";import"node:events";import"node:buffer";import"vue";import"@iconify/utils";import"node:crypto";import"consola";import"node:url";import"ipx";import"node:fs";import"node:path";import"mysql2/promise";import"bcryptjs";import"jsonwebtoken";const r=s((async s=>{try{const r=t(s,"id"),i=await e(s),{is_read:d,status:n}=i;if(!r)throw o({statusCode:400,statusMessage:"Message ID is required"});console.log("Updating message status:",{id:r,is_read:d,status:n});const p=await a("\n      UPDATE contact_messages \n      SET status = ?, updated_at = NOW()\n      WHERE id = ?\n    ",[n||"read",r]);if(console.log("Database update result:",p),!p||0===p.affectedRows)throw o({statusCode:404,statusMessage:"Message not found"});return{success:!0,message:"Message status updated successfully"}}catch(s){if(console.error("Error updating message status:",s),s.statusCode)throw s;throw o({statusCode:500,statusMessage:"Failed to update message status"})}}));export{r as default};
//# sourceMappingURL=_id_.put.mjs.map
