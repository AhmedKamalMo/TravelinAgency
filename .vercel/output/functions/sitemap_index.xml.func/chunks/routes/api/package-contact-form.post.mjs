import{d as e,r as a,c as t}from"../../_/nitro.mjs";import{executeQuery as s}from"../../_/database.mjs";import"node:http";import"node:https";import"node:events";import"node:buffer";import"vue";import"@iconify/utils";import"node:crypto";import"consola";import"node:url";import"ipx";import"node:fs";import"node:path";import"mysql2/promise";import"bcryptjs";import"jsonwebtoken";const n=e((async e=>{try{const n=await a(e);if(!n.name||!n.email||!n.message)throw t({statusCode:400,statusMessage:"Name, email, and message are required"});try{const e=await s("\n        INSERT INTO contact_messages (\n          name,\n          email,\n          phone,\n          subject,\n          message,\n          status,\n          created_at,\n          updated_at\n        ) VALUES (?, ?, ?, ?, ?, 'new', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)\n      ",[n.name,n.email,n.phone||"",n.packageName?`استفسار عن الباقة: ${n.packageName}`:"استفسار عن باقة سياحية",n.message]),a=await s("\n        SELECT \n          id, \n          name,\n          email,\n          phone,\n          subject,\n          message,\n          status,\n          created_at,\n          updated_at\n        FROM contact_messages \n        WHERE id = ?\n      ",[e.insertId]);if(!a||0===a.length)throw t({statusCode:500,statusMessage:"Failed to retrieve created message"});const o=a[0];return{success:!0,message:"Package contact message sent successfully",data:{id:o.id,name:o.name,email:o.email,phone:o.phone,subject:o.subject,message:o.message,status:o.status,created_at:o.created_at}}}catch(e){console.log("Database insert failed:",e);try{const e=await import("fs"),a=(await import("path")).join(process.cwd(),"public","package-contact-messages.json");let t=[];if(e.existsSync(a)){const s=e.readFileSync(a,"utf8");t=JSON.parse(s)}const s={id:Date.now(),name:n.name,email:n.email,phone:n.phone||"",subject:n.packageName?`استفسار عن الباقة: ${n.packageName}`:"استفسار عن باقة سياحية",message:n.message,packageId:n.packageId,packageName:n.packageName,status:"new",created_at:(new Date).toISOString(),updated_at:(new Date).toISOString()};return t.push(s),e.writeFileSync(a,JSON.stringify(t,null,2)),{success:!0,message:"Package contact message sent successfully (stored locally)",data:s}}catch(e){throw console.log("Local file storage failed:",e),t({statusCode:500,statusMessage:"Failed to store package contact message"})}}}catch(e){if(console.error("Error creating package contact message:",e),e.statusCode)throw e;throw t({statusCode:500,statusMessage:"Failed to send package contact message"})}}));export{n as default};
//# sourceMappingURL=package-contact-form.post.mjs.map
