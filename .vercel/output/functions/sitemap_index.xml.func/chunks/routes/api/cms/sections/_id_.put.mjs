import{d as t,g as s,r as o,c as i}from"../../../../_/nitro.mjs";import{e}from"../../../../_/database.mjs";import"node:http";import"node:https";import"node:events";import"node:buffer";import"vue";import"@iconify/utils";import"node:crypto";import"consola";import"node:url";import"ipx";import"node:fs";import"node:path";import"mysql2/promise";import"bcryptjs";import"jsonwebtoken";const r=t((async t=>{try{const r=s(t,"id"),n=await o(t);if(!r)throw i({statusCode:400,statusMessage:"Section ID is required"});const{section_type:p,title:a,subtitle:u,content:d,background_color:c,background_image:h,text_color:m,order_index:g,is_active:l,settings:_}=n;if(0===(await e("SELECT id FROM cms_sections WHERE id = ?",[r])).length)throw i({statusCode:404,statusMessage:"Section not found"});const f=[],v=[];if(void 0!==p&&(f.push("section_type = ?"),v.push(p)),void 0!==a&&(f.push("title = ?"),v.push(a)),void 0!==u&&(f.push("subtitle = ?"),v.push(u)),void 0!==d&&(f.push("content = ?"),v.push(d)),void 0!==c&&(f.push("background_color = ?"),v.push(c)),void 0!==h&&(f.push("background_image = ?"),v.push(h)),void 0!==m&&(f.push("text_color = ?"),v.push(m)),void 0!==g&&(f.push("order_index = ?"),v.push(g)),void 0!==l&&(f.push("is_active = ?"),v.push(l)),void 0!==_&&(f.push("settings = ?"),v.push(JSON.stringify(_))),0===f.length)throw i({statusCode:400,statusMessage:"No fields to update"});v.push(r);const E=`UPDATE cms_sections SET ${f.join(", ")} WHERE id = ?`;await e(E,v);const b=await e("SELECT * FROM cms_sections WHERE id = ?",[r]);return b[0].settings&&(b[0].settings=JSON.parse(b[0].settings)),{success:!0,data:{section:b[0]},message:"Section updated successfully"}}catch(t){if(console.error("Error updating section:",t),t.statusCode)throw t;throw i({statusCode:500,statusMessage:"Error updating section"})}}));export{r as default};
//# sourceMappingURL=_id_.put.mjs.map
