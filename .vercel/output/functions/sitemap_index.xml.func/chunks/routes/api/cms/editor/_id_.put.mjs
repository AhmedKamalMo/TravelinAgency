import{d as t,g as e,r as a,c as n}from"../../../../_/nitro.mjs";import{executeQuery as o}from"../../../../_/database.mjs";import"node:http";import"node:https";import"node:events";import"node:buffer";import"vue";import"@iconify/utils";import"node:crypto";import"consola";import"node:url";import"ipx";import"node:fs";import"node:path";import"mysql2/promise";import"bcryptjs";import"jsonwebtoken";const s=t((async t=>{try{const s=e(t,"id"),r=await a(t);if(!s)throw n({statusCode:400,statusMessage:"Page ID is required"});const{title_ar:p,title_en:i,content_ar:l,content_en:d,type:c,status:u,url:m,slug:g,components:_}=r,y=_?JSON.stringify(_):null;try{const t=await o("\n        SELECT id FROM content_pages WHERE id = ?\n      ",[s]);return t&&t.length>0?await o("\n          UPDATE content_pages \n          SET \n            title_ar = ?,\n            title_en = ?,\n            content_ar = ?,\n            content_en = ?,\n            type = ?,\n            status = ?,\n            url = ?,\n            slug = ?,\n            components = ?,\n            updated_at = NOW()\n          WHERE id = ?\n        ",[p,i,l,d,c||"page",u||"draft",m,g,y,s]):await o("\n          INSERT INTO content_pages (\n            id, title_ar, title_en, content_ar, content_en, \n            type, status, url, slug, components, created_at, updated_at\n          ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, NOW(), NOW())\n        ",[s,p,i,l,d,c||"page",u||"draft",m,g,y]),{success:!0,message:"Page updated successfully in database",pageId:s}}catch(t){return console.log("Database update not available, page update applied locally only"),{success:!0,message:"Page updated successfully (local only)",pageId:s,note:"Database not available - update applied locally only"}}}catch(t){if(console.error("Error updating page:",t),t.statusCode)throw t;throw n({statusCode:500,statusMessage:"Failed to update page"})}}));export{s as default};
//# sourceMappingURL=_id_.put.mjs.map
