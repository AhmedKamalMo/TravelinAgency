import{d as t,g as e,c as n}from"../../../_/nitro.mjs";import{e as a}from"../../../_/database.mjs";import"node:http";import"node:https";import"node:events";import"node:buffer";import"vue";import"@iconify/utils";import"node:crypto";import"consola";import"node:url";import"ipx";import"node:fs";import"node:path";import"mysql2/promise";import"bcryptjs";import"jsonwebtoken";const i=t((async t=>{try{const i=e(t,"id");if(!i)throw n({statusCode:400,statusMessage:"Destination ID is required"});const o=await a("\n      SELECT \n        id, \n        name_ar,\n        name_en,\n        description_ar,\n        description_en,\n        image_url,\n        category,\n        featured,\n        active,\n        region_ar,\n        region_en,\n        location_type_ar,\n        location_type_en,\n        destination_type_ar,\n        destination_type_en,\n        coordinates,\n        created_at,\n        updated_at\n      FROM destinations \n      WHERE id = ?\n    ",[i]);if(!o||0===o.length)throw n({statusCode:404,statusMessage:"Destination not found"});const r=o[0];return{success:!0,data:{id:r.id,name:r.name_ar||r.name_en,name_ar:r.name_ar,name_en:r.name_en,description:r.description_ar||r.description_en,description_ar:r.description_ar,description_en:r.description_en,image:r.image_url,image_url:r.image_url,category:r.category,featured:1===r.featured,active:1===r.active,status:1===r.active?"active":"inactive",region_ar:r.region_ar,region_en:r.region_en,location_type_ar:r.location_type_ar,location_type_en:r.location_type_en,destination_type_ar:r.destination_type_ar,destination_type_en:r.destination_type_en,coordinates:r.coordinates?JSON.parse(r.coordinates):null,created_at:r.created_at,updated_at:r.updated_at}}}catch(t){if(console.error("Error fetching destination:",t),t.statusCode)throw t;throw n({statusCode:500,statusMessage:"Failed to fetch destination"})}}));export{i as default};
//# sourceMappingURL=_id_.mjs.map
