import{d as t,a as o,c as e}from"../../../_/nitro.mjs";import{executeQuery as s}from"../../../_/database.mjs";import"node:http";import"node:https";import"node:events";import"node:buffer";import"vue";import"@iconify/utils";import"node:crypto";import"consola";import"node:url";import"ipx";import"node:fs";import"node:path";import"mysql2/promise";import"bcryptjs";import"jsonwebtoken";const r=t((async t=>{try{const e=o(t),{category:r,public_only:i=!1}=e;let n="SELECT * FROM cms_site_settings WHERE 1=1";const a=[];r&&(n+=" AND category = ?",a.push(r)),"true"===i&&(n+=" AND is_public = 1"),n+=" ORDER BY category, setting_key";const c=await s(n,a),p=c.reduce(((t,o)=>(t[o.category]||(t[o.category]=[]),t[o.category].push(o),t)),{}),m=c.reduce(((t,o)=>(t[o.setting_key]=o.setting_value,t)),{});return{success:!0,data:{settings:p,flat:c,flatObject:m}}}catch(t){throw console.error("Error fetching site settings:",t),e({statusCode:500,statusMessage:"Error fetching site settings"})}}));export{r as default};
//# sourceMappingURL=site-settings.get.mjs.map
