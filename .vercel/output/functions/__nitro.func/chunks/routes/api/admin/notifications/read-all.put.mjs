import{d as t,c as a}from"../../../../_/nitro.mjs";import{executeQuery as i}from"../../../../_/database.mjs";import"node:http";import"node:https";import"node:events";import"node:buffer";import"vue";import"@iconify/utils";import"node:crypto";import"consola";import"node:url";import"ipx";import"node:fs";import"node:path";import"mysql2/promise";import"bcryptjs";import"jsonwebtoken";const o=t((async t=>{try{return console.log("üìñ Marking all notifications as read..."),await i("\n      UPDATE contact_messages \n      SET is_read = 1, updated_at = NOW()\n      WHERE is_read = 0\n    "),await i("\n      UPDATE package_inquiries \n      SET is_read = 1, updated_at = NOW()\n      WHERE is_read = 0\n    "),await i("\n      UPDATE destination_inquiries \n      SET is_read = 1, updated_at = NOW()\n      WHERE is_read = 0\n    "),await i("\n      UPDATE bookings \n      SET is_read = 1, updated_at = NOW()\n      WHERE is_read = 0\n    "),{success:!0,message:"All notifications marked as read"}}catch(t){throw console.error("‚ùå Error marking all notifications as read:",t),a({statusCode:500,statusMessage:"Failed to mark all notifications as read"})}}));export{o as default};
//# sourceMappingURL=read-all.put.mjs.map
