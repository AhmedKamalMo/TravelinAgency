import{d as t,r as e,c as o}from"../../../_/nitro.mjs";import{executeQuery as r}from"../../../_/database.mjs";import"node:http";import"node:https";import"node:events";import"node:buffer";import"vue";import"@iconify/utils";import"node:crypto";import"consola";import"node:url";import"ipx";import"node:fs";import"node:path";import"mysql2/promise";import"bcryptjs";import"jsonwebtoken";const s=t((async t=>{const s=await e(t);try{const t=(s.title_ar||s.title||"new-page").toLowerCase().replace(/[^a-z0-9\u0600-\u06FF\s]/g,"").replace(/\s+/g,"-").substring(0,50),e=(await r("\n      INSERT INTO cms_pages (\n        slug,\n        title, \n        meta_title, \n        meta_description, \n        status, \n        template, \n        created_by\n      ) VALUES (?, ?, ?, ?, ?, ?, ?)\n    ",[t,s.title_ar||s.title||"",s.title_en||s.meta_title||"",s.meta_description_ar||s.meta_description||"",s.status||"draft",s.template||"default",1])).insertId;if(s.components&&Array.isArray(s.components))for(let t=0;t<s.components.length;t++){const o=s.components[t];await r("\n          INSERT INTO cms_sections (\n            page_id, section_type, title, subtitle, content,\n            background_color, background_image, text_color, order_index, is_active, settings\n          ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\n        ",[e,o.type||"generic",o.props?.title||"",o.props?.subtitle||"",o.props?.content||"",o.props?.backgroundColor||"",o.props?.backgroundImage||"",o.props?.textColor||"",t,!0,JSON.stringify(o.props||{})])}return{success:!0,message:"Page created successfully",id:e}}catch(t){throw console.error("Error creating page:",t),o({statusCode:500,statusMessage:"Failed to create page"})}}));export{s as default};
//# sourceMappingURL=editor.post.mjs.map
