import{a as e}from"./nitro.mjs";import n from"file://F:/TravelinAgency/node_modules/mysql2/promise.js";import o from"file://F:/TravelinAgency/node_modules/bcryptjs/index.js";import r from"file://F:/TravelinAgency/node_modules/jsonwebtoken/index.js";import"file://F:/TravelinAgency/node_modules/h3/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/destr/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/hookable/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/ofetch/dist/node.mjs";import"file://F:/TravelinAgency/node_modules/node-mock-http/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/klona/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/defu/dist/defu.mjs";import"file://F:/TravelinAgency/node_modules/scule/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/radix3/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/vue/index.mjs";import"node:fs";import"node:url";import"file://F:/TravelinAgency/node_modules/pathe/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/@iconify/utils/lib/index.mjs";import"file://F:/TravelinAgency/node_modules/ohash/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/consola/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/ipx/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/unstorage/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/unstorage/drivers/fs.mjs";import"file:///F:/TravelinAgency/node_modules/nuxt/dist/core/runtime/nitro/utils/cache-driver.js";import"file://F:/TravelinAgency/node_modules/unstorage/drivers/fs-lite.mjs";let i=null;function createDatabasePool(){if(!i){const e={host:process.env.DB_HOST||"localhost",port:Number(process.env.DB_PORT)||3306,user:process.env.DB_USER||"root",password:process.env.DB_PASSWORD||"",database:process.env.DB_NAME||"travel"};console.log("ðŸ”§ MySQL Config:",{host:e.host,port:e.port,user:e.user,password:e.password?"[SET]":"[EMPTY]",database:e.database}),i=n.createPool({...e,charset:"utf8mb4",collation:"utf8mb4_unicode_ci",timezone:"+00:00",connectionLimit:5,queueLimit:0,waitForConnections:!0,ssl:!1,keepAliveInitialDelay:0,enableKeepAlive:!0})}return i}async function executeQuery(e,n=[]){try{const o=createDatabasePool(),[r]=await o.execute(e,n);return r}catch(o){if(console.error("Database query error:",{message:o.message,code:o.code,errno:o.errno,sql:e.substring(0,100)+"...",params:n}),"ECONNREFUSED"===o.code)throw new Error("Database connection refused. Please check your database configuration.");if("ER_ACCESS_DENIED_ERROR"===o.code)throw new Error("Database access denied. Please check your credentials.");if("ER_BAD_DB_ERROR"===o.code)throw new Error("Database does not exist. Please check your database name.");if("ER_HOST_NOT_PRIVILEGED"===o.code)throw new Error("Database host not allowed. Please configure remote access in GoDaddy cPanel.");throw o}}async function findOne(e,n=[]){const o=await executeQuery(e,n);return o.length>0?o[0]:null}async function verifyPassword(e,n){return await o.compare(e,n)}function generateJWT(n,o="24h"){const i=e();return r.sign(n,i.jwtSecret,{expiresIn:o})}function verifyJWT(n){const o=e();try{return r.verify(n,o.jwtSecret)}catch(e){throw new Error("Invalid token")}}async function authenticateUser(e,n){try{const o=await findOne("SELECT * FROM users WHERE email = ?",[e]);if(!o)return null;if(!await verifyPassword(n,o.password))return null;const r=await findOne("SELECT * FROM admin_profiles WHERE user_id = ?",[o.id]);return{user:{...o,role:(null==r?void 0:r.role)||"admin",permissions:(null==r?void 0:r.permissions)?JSON.parse(r.permissions):{}}}}catch(e){return console.error("Authentication error:",e),null}}async function getUserById(e){const n=await findOne("\n    SELECT u.id, u.email, u.full_name, u.phone, u.status, u.created_at, u.updated_at,\n           ap.role, ap.permissions\n    FROM users u\n    LEFT JOIN admin_profiles ap ON u.id = ap.user_id\n    WHERE u.id = ?\n  ",[e]);if(n){if(n.permissions&&"string"==typeof n.permissions)try{n.permissions=JSON.parse(n.permissions)}catch(e){console.error("Error parsing permissions JSON:",e),n.permissions={}}else n.permissions||(n.permissions={});n.role||(n.role="admin")}return n}export{authenticateUser,createDatabasePool,executeQuery,findOne,generateJWT,getUserById,verifyJWT,verifyPassword};
//# sourceMappingURL=database.mjs.map
