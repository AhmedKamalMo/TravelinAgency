import{a as e}from"./nitro.mjs";import r from"file://F:/TravelinAgency/node_modules/mysql2/promise.js";import n from"file://F:/TravelinAgency/node_modules/bcryptjs/index.js";import s from"file://F:/TravelinAgency/node_modules/jsonwebtoken/index.js";let o=null;async function executeQuery(e,n=[]){const s=function(){if(!o){const e={host:process.env.DB_HOST||"localhost",port:Number(process.env.DB_PORT)||3306,user:process.env.DB_USER||"root",password:process.env.DB_PASSWORD||"",database:process.env.DB_NAME||"wonderland_travel"};console.log("ðŸ”§ MySQL Config:",{host:e.host,port:e.port,user:e.user,password:e.password?"[SET]":"[EMPTY]",database:e.database}),o=r.createPool({...e,charset:"utf8mb4",timezone:"+00:00",connectionLimit:10,queueLimit:0,waitForConnections:!0})}return o}();try{const[r]=await s.execute(e,n);return r}catch(e){throw console.error("Database query error:",e),e}}async function findOne(e,r=[]){const n=await executeQuery(e,r);return n.length>0?n[0]:null}function generateJWT(r,n="24h"){const o=e();return s.sign(r,o.jwtSecret,{expiresIn:n})}function verifyJWT(r){const n=e();try{return s.verify(r,n.jwtSecret)}catch(e){throw new Error("Invalid token")}}async function authenticateUser(e,r){try{const s=await findOne("SELECT * FROM users WHERE email = ?",[e]);if(!s)return null;const o=await async function(e,r){return await n.compare(e,r)}(r,s.password);if(!o)return null;const t=await findOne("SELECT * FROM admin_profiles WHERE user_id = ?",[s.id]);return{user:{...s,role:(null==t?void 0:t.role)||"admin",permissions:(null==t?void 0:t.permissions)?JSON.parse(t.permissions):{}}}}catch(e){return console.error("Authentication error:",e),null}}async function getUserById(e){const r=await findOne("\n    SELECT u.id, u.email, u.full_name, u.phone, u.status, u.created_at, u.updated_at,\n           ap.role, ap.permissions\n    FROM users u\n    LEFT JOIN admin_profiles ap ON u.id = ap.user_id\n    WHERE u.id = ?\n  ",[e]);if(r){if(r.permissions&&"string"==typeof r.permissions)try{r.permissions=JSON.parse(r.permissions)}catch(e){console.error("Error parsing permissions JSON:",e),r.permissions={}}else r.permissions||(r.permissions={});r.role||(r.role="admin")}return r}export{authenticateUser as a,getUserById as b,executeQuery as e,generateJWT as g,verifyJWT as v};
//# sourceMappingURL=database.mjs.map
