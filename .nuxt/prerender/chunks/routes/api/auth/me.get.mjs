import{defineEventHandler as e,getCookie as i,createError as s}from"file://F:/TravelinAgency/node_modules/h3/dist/index.mjs";import{v as o,b as n}from"../../../_/database.mjs";import"../../../_/nitro.mjs";import"file://F:/TravelinAgency/node_modules/destr/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/hookable/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/ofetch/dist/node.mjs";import"file://F:/TravelinAgency/node_modules/node-mock-http/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/klona/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/defu/dist/defu.mjs";import"file://F:/TravelinAgency/node_modules/scule/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/radix3/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/vue/index.mjs";import"node:fs";import"node:url";import"file://F:/TravelinAgency/node_modules/pathe/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/@iconify/utils/lib/index.mjs";import"file://F:/TravelinAgency/node_modules/ohash/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/consola/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/ipx/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/unstorage/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/unstorage/drivers/fs.mjs";import"file:///F:/TravelinAgency/node_modules/nuxt/dist/core/runtime/nitro/utils/cache-driver.js";import"file://F:/TravelinAgency/node_modules/unstorage/drivers/fs-lite.mjs";import"file://F:/TravelinAgency/node_modules/mysql2/promise.js";import"file://F:/TravelinAgency/node_modules/bcryptjs/index.js";import"file://F:/TravelinAgency/node_modules/jsonwebtoken/index.js";const t=e((async e=>{try{const t=i(e,"auth-token");if(!t)throw s({statusCode:401,statusMessage:"No authentication token found"});let d;try{d=o(t)}catch(e){throw s({statusCode:401,statusMessage:"Invalid or expired token"})}const r=await n(d.userId.toString());if(!r)throw s({statusCode:401,statusMessage:"User not found or inactive"});return{success:!0,data:{user:{id:r.id,email:r.email,full_name:r.full_name,phone:r.phone,role:r.role,permissions:r.permissions,status:r.status}}}}catch(e){if(console.error("Auth me API error:",e),e.statusCode)throw e;throw s({statusCode:500,statusMessage:"Internal server error"})}}));export{t as default};
//# sourceMappingURL=me.get.mjs.map
