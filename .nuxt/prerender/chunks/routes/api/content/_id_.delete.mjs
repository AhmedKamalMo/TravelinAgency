import{defineEventHandler as e,getRouterParam as i,createError as o}from"file://F:/TravelinAgency/node_modules/h3/dist/index.mjs";import{executeQuery as s}from"../../../_/database.mjs";import"../../../_/nitro.mjs";import"file://F:/TravelinAgency/node_modules/destr/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/hookable/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/ofetch/dist/node.mjs";import"file://F:/TravelinAgency/node_modules/node-mock-http/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/klona/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/defu/dist/defu.mjs";import"file://F:/TravelinAgency/node_modules/scule/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/radix3/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/vue/index.mjs";import"node:fs";import"node:url";import"file://F:/TravelinAgency/node_modules/pathe/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/@iconify/utils/lib/index.mjs";import"file://F:/TravelinAgency/node_modules/ohash/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/consola/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/ipx/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/unstorage/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/unstorage/drivers/fs.mjs";import"file:///F:/TravelinAgency/node_modules/nuxt/dist/core/runtime/nitro/utils/cache-driver.js";import"file://F:/TravelinAgency/node_modules/unstorage/drivers/fs-lite.mjs";import"file://F:/TravelinAgency/node_modules/mysql2/promise.js";import"file://F:/TravelinAgency/node_modules/bcryptjs/index.js";import"file://F:/TravelinAgency/node_modules/jsonwebtoken/index.js";const n=e((async e=>{try{const n=i(e,"id");if(!n)throw o({statusCode:400,statusMessage:"Page ID is required"});try{const e=await s("\n        SELECT id FROM content_pages WHERE id = ?\n      ",[n]);if(!e||0===e.length)throw o({statusCode:404,statusMessage:"Page not found"});await s("\n        DELETE FROM content_pages WHERE id = ?\n      ",[n])}catch(e){return console.log("Database delete not available, page deletion applied locally only"),{success:!0,message:"Page deleted successfully (local only)",pageId:n,note:"Database not available - deletion applied locally only"}}return{success:!0,message:"Page deleted successfully"}}catch(e){if(console.error("Error deleting page:",e),e.statusCode)throw e;throw o({statusCode:500,statusMessage:"Failed to delete page"})}}));export{n as default};
//# sourceMappingURL=_id_.delete.mjs.map
