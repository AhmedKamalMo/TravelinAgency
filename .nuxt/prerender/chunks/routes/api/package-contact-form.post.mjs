import{defineEventHandler as e,readBody as s,createError as a}from"file://F:/TravelinAgency/node_modules/h3/dist/index.mjs";import{executeQuery as t}from"../../_/database.mjs";import"../../_/nitro.mjs";import"file://F:/TravelinAgency/node_modules/destr/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/hookable/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/ofetch/dist/node.mjs";import"file://F:/TravelinAgency/node_modules/node-mock-http/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/klona/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/defu/dist/defu.mjs";import"file://F:/TravelinAgency/node_modules/scule/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/radix3/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/vue/index.mjs";import"node:fs";import"node:url";import"file://F:/TravelinAgency/node_modules/pathe/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/@iconify/utils/lib/index.mjs";import"file://F:/TravelinAgency/node_modules/ohash/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/consola/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/ipx/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/unstorage/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/unstorage/drivers/fs.mjs";import"file:///F:/TravelinAgency/node_modules/nuxt/dist/core/runtime/nitro/utils/cache-driver.js";import"file://F:/TravelinAgency/node_modules/unstorage/drivers/fs-lite.mjs";import"file://F:/TravelinAgency/node_modules/mysql2/promise.js";import"file://F:/TravelinAgency/node_modules/bcryptjs/index.js";import"file://F:/TravelinAgency/node_modules/jsonwebtoken/index.js";const n=e((async e=>{try{const n=await s(e);if(!n.name||!n.email||!n.message)throw a({statusCode:400,statusMessage:"Name, email, and message are required"});try{const e=await t("\n        INSERT INTO contact_messages (\n          name,\n          email,\n          phone,\n          subject,\n          message,\n          status,\n          created_at,\n          updated_at\n        ) VALUES (?, ?, ?, ?, ?, 'new', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)\n      ",[n.name,n.email,n.phone||"",n.packageName?`استفسار عن الباقة: ${n.packageName}`:"استفسار عن باقة سياحية",n.message]),s=await t("\n        SELECT \n          id, \n          name,\n          email,\n          phone,\n          subject,\n          message,\n          status,\n          created_at,\n          updated_at\n        FROM contact_messages \n        WHERE id = ?\n      ",[e.insertId]);if(!s||0===s.length)throw a({statusCode:500,statusMessage:"Failed to retrieve created message"});const i=s[0];return{success:!0,message:"Package contact message sent successfully",data:{id:i.id,name:i.name,email:i.email,phone:i.phone,subject:i.subject,message:i.message,status:i.status,created_at:i.created_at}}}catch(e){console.log("Database insert failed:",e);try{const e=await import("node:fs"),s=(await import("node:path")).join(process.cwd(),"public","package-contact-messages.json");let a=[];if(e.existsSync(s)){const t=e.readFileSync(s,"utf8");a=JSON.parse(t)}const t={id:Date.now(),name:n.name,email:n.email,phone:n.phone||"",subject:n.packageName?`استفسار عن الباقة: ${n.packageName}`:"استفسار عن باقة سياحية",message:n.message,packageId:n.packageId,packageName:n.packageName,status:"new",created_at:(new Date).toISOString(),updated_at:(new Date).toISOString()};return a.push(t),e.writeFileSync(s,JSON.stringify(a,null,2)),{success:!0,message:"Package contact message sent successfully (stored locally)",data:t}}catch(e){throw console.log("Local file storage failed:",e),a({statusCode:500,statusMessage:"Failed to store package contact message"})}}}catch(e){if(console.error("Error creating package contact message:",e),e.statusCode)throw e;throw a({statusCode:500,statusMessage:"Failed to send package contact message"})}}));export{n as default};
//# sourceMappingURL=package-contact-form.post.mjs.map
