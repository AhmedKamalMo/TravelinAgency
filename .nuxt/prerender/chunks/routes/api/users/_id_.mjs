import{defineEventHandler as e,getRouterParam as i,createError as n}from"file://F:/TravelinAgency/node_modules/h3/dist/index.mjs";import{executeQuery as o}from"../../../_/database.mjs";import"../../../_/nitro.mjs";import"file://F:/TravelinAgency/node_modules/destr/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/hookable/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/ofetch/dist/node.mjs";import"file://F:/TravelinAgency/node_modules/node-mock-http/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/klona/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/defu/dist/defu.mjs";import"file://F:/TravelinAgency/node_modules/scule/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/radix3/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/vue/index.mjs";import"node:fs";import"node:url";import"file://F:/TravelinAgency/node_modules/pathe/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/@iconify/utils/lib/index.mjs";import"file://F:/TravelinAgency/node_modules/ohash/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/consola/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/ipx/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/unstorage/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/unstorage/drivers/fs.mjs";import"file:///F:/TravelinAgency/node_modules/nuxt/dist/core/runtime/nitro/utils/cache-driver.js";import"file://F:/TravelinAgency/node_modules/unstorage/drivers/fs-lite.mjs";import"file://F:/TravelinAgency/node_modules/mysql2/promise.js";import"file://F:/TravelinAgency/node_modules/bcryptjs/index.js";import"file://F:/TravelinAgency/node_modules/jsonwebtoken/index.js";const s=e((async e=>{try{const s=i(e,"id");if(!s)throw n({statusCode:400,statusMessage:"User ID is required"});const t=await o("\n      SELECT \n        id,\n        email,\n        full_name,\n        phone,\n        role,\n        status,\n        email_verified,\n        phone_verified,\n        bio,\n        date_of_birth,\n        gender,\n        nationality,\n        address,\n        city,\n        country,\n        postal_code,\n        preferences,\n        created_at,\n        updated_at,\n        last_login,\n        login_count\n      FROM users \n      WHERE id = ?\n    ",[s]);if(!t||0===t.length)throw n({statusCode:404,statusMessage:"User not found"});const d=t[0];return{success:!0,data:{id:d.id,email:d.email,full_name:d.full_name,phone:d.phone,role:d.role,status:d.status,email_verified:d.email_verified,phone_verified:d.phone_verified,bio:d.bio,date_of_birth:d.date_of_birth,gender:d.gender,nationality:d.nationality,address:d.address,city:d.city,country:d.country,postal_code:d.postal_code,preferences:JSON.parse(d.preferences||"{}"),created_at:d.created_at,updated_at:d.updated_at,last_login:d.last_login,login_count:d.login_count}}}catch(e){if(console.error("Error fetching user:",e),e.statusCode)throw e;throw n({statusCode:500,statusMessage:"Failed to fetch user"})}}));export{s as default};
//# sourceMappingURL=_id_.mjs.map
