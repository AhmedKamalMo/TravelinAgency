import{defineEventHandler as e,getQuery as i,createError as s}from"file://F:/TravelinAgency/node_modules/h3/dist/index.mjs";import{executeQuery as n}from"../../../_/database.mjs";import"../../../_/nitro.mjs";import"file://F:/TravelinAgency/node_modules/destr/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/hookable/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/ofetch/dist/node.mjs";import"file://F:/TravelinAgency/node_modules/node-mock-http/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/klona/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/defu/dist/defu.mjs";import"file://F:/TravelinAgency/node_modules/scule/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/radix3/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/vue/index.mjs";import"node:fs";import"node:url";import"file://F:/TravelinAgency/node_modules/pathe/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/@iconify/utils/lib/index.mjs";import"file://F:/TravelinAgency/node_modules/ohash/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/consola/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/ipx/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/unstorage/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/unstorage/drivers/fs.mjs";import"file:///F:/TravelinAgency/node_modules/nuxt/dist/core/runtime/nitro/utils/cache-driver.js";import"file://F:/TravelinAgency/node_modules/unstorage/drivers/fs-lite.mjs";import"file://F:/TravelinAgency/node_modules/mysql2/promise.js";import"file://F:/TravelinAgency/node_modules/bcryptjs/index.js";import"file://F:/TravelinAgency/node_modules/jsonwebtoken/index.js";const t=e((async e=>{var t;try{const s=i(e),{status:o,template:d,limit:l=50,offset:r=0}=s;let a="\n      SELECT \n        p.*,\n        u1.email as created_by_email,\n        u2.email as updated_by_email\n      FROM cms_pages p\n      LEFT JOIN users u1 ON p.created_by = u1.id\n      LEFT JOIN users u2 ON p.updated_by = u2.id\n      WHERE 1=1\n    ";const m=[];o&&(a+=" AND p.status = ?",m.push(o)),d&&(a+=" AND p.template = ?",m.push(d)),a+=" ORDER BY p.updated_at DESC LIMIT ? OFFSET ?",m.push(parseInt(l),parseInt(r));const p=await n(a,m);let u="SELECT COUNT(*) as total FROM cms_pages WHERE 1=1";const c=[];o&&(u+=" AND status = ?",c.push(o)),d&&(u+=" AND template = ?",c.push(d));const f=(null==(t=(await n(u,c))[0])?void 0:t.total)||0;return{success:!0,data:{pages:p,pagination:{total:f,limit:parseInt(l),offset:parseInt(r),pages:Math.ceil(f/parseInt(l))}}}}catch(e){throw console.error("Error fetching pages:",e),s({statusCode:500,statusMessage:"Error fetching pages"})}}));export{t as default};
//# sourceMappingURL=pages.get.mjs.map
