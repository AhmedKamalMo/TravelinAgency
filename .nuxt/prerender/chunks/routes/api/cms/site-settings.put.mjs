import{defineEventHandler as e,readBody as i,createError as s}from"file://F:/TravelinAgency/node_modules/h3/dist/index.mjs";import{e as t}from"../../../_/database.mjs";import"../../../_/nitro.mjs";import"file://F:/TravelinAgency/node_modules/destr/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/hookable/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/ofetch/dist/node.mjs";import"file://F:/TravelinAgency/node_modules/node-mock-http/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/klona/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/defu/dist/defu.mjs";import"file://F:/TravelinAgency/node_modules/scule/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/radix3/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/vue/index.mjs";import"node:fs";import"node:url";import"file://F:/TravelinAgency/node_modules/pathe/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/@iconify/utils/lib/index.mjs";import"file://F:/TravelinAgency/node_modules/ohash/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/consola/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/ipx/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/unstorage/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/unstorage/drivers/fs.mjs";import"file:///F:/TravelinAgency/node_modules/nuxt/dist/core/runtime/nitro/utils/cache-driver.js";import"file://F:/TravelinAgency/node_modules/unstorage/drivers/fs-lite.mjs";import"file://F:/TravelinAgency/node_modules/mysql2/promise.js";import"file://F:/TravelinAgency/node_modules/bcryptjs/index.js";import"file://F:/TravelinAgency/node_modules/jsonwebtoken/index.js";const n=e((async e=>{try{const n=await i(e),{settings:o,updated_by:d=1}=n;if(!o||!Array.isArray(o))throw s({statusCode:400,statusMessage:"Settings array is required"});const r=[];for(const e of o){const{setting_key:i,setting_value:s,setting_type:n,category:o,description:l,is_public:a}=e;if(!i)continue;if((await t("SELECT id FROM cms_site_settings WHERE setting_key = ?",[i])).length>0){const e="\n          UPDATE cms_site_settings \n          SET setting_value = ?, setting_type = ?, category = ?, description = ?, is_public = ?, updated_by = ?\n          WHERE setting_key = ?\n        ";await t(e,[s,n||"text",o||"general",l||null,a||!1,d,i])}else{const e="\n          INSERT INTO cms_site_settings \n          (setting_key, setting_value, setting_type, category, description, is_public, updated_by)\n          VALUES (?, ?, ?, ?, ?, ?, ?)\n        ";await t(e,[i,s,n||"text",o||"general",l||null,a||!1,d])}r.push({setting_key:i,updated:!0})}return{success:!0,data:{updated_settings:r},message:"Site settings updated successfully"}}catch(e){if(console.error("Error updating site settings:",e),e.statusCode)throw e;throw s({statusCode:500,statusMessage:"Error updating site settings"})}}));export{n as default};
//# sourceMappingURL=site-settings.put.mjs.map
