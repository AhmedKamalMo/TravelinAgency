import{defineEventHandler as e,getRouterParam as s,readBody as i,createError as o}from"file://F:/TravelinAgency/node_modules/h3/dist/index.mjs";import{e as t}from"../../../../_/database.mjs";import"../../../../_/nitro.mjs";import"file://F:/TravelinAgency/node_modules/destr/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/hookable/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/ofetch/dist/node.mjs";import"file://F:/TravelinAgency/node_modules/node-mock-http/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/klona/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/defu/dist/defu.mjs";import"file://F:/TravelinAgency/node_modules/scule/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/radix3/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/vue/index.mjs";import"node:fs";import"node:url";import"file://F:/TravelinAgency/node_modules/pathe/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/@iconify/utils/lib/index.mjs";import"file://F:/TravelinAgency/node_modules/ohash/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/consola/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/ipx/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/unstorage/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/unstorage/drivers/fs.mjs";import"file:///F:/TravelinAgency/node_modules/nuxt/dist/core/runtime/nitro/utils/cache-driver.js";import"file://F:/TravelinAgency/node_modules/unstorage/drivers/fs-lite.mjs";import"file://F:/TravelinAgency/node_modules/mysql2/promise.js";import"file://F:/TravelinAgency/node_modules/bcryptjs/index.js";import"file://F:/TravelinAgency/node_modules/jsonwebtoken/index.js";const n=e((async e=>{try{const n=s(e,"id"),d=await i(e);if(!n)throw o({statusCode:400,statusMessage:"Section ID is required"});const{section_type:r,title:l,subtitle:u,content:m,background_color:a,background_image:c,text_color:p,order_index:g,is_active:f,settings:_}=d;if(0===(await t("SELECT id FROM cms_sections WHERE id = ?",[n])).length)throw o({statusCode:404,statusMessage:"Section not found"});const v=[],h=[];if(void 0!==r&&(v.push("section_type = ?"),h.push(r)),void 0!==l&&(v.push("title = ?"),h.push(l)),void 0!==u&&(v.push("subtitle = ?"),h.push(u)),void 0!==m&&(v.push("content = ?"),h.push(m)),void 0!==a&&(v.push("background_color = ?"),h.push(a)),void 0!==c&&(v.push("background_image = ?"),h.push(c)),void 0!==p&&(v.push("text_color = ?"),h.push(p)),void 0!==g&&(v.push("order_index = ?"),h.push(g)),void 0!==f&&(v.push("is_active = ?"),h.push(f)),void 0!==_&&(v.push("settings = ?"),h.push(JSON.stringify(_))),0===v.length)throw o({statusCode:400,statusMessage:"No fields to update"});h.push(n);const y=`UPDATE cms_sections SET ${v.join(", ")} WHERE id = ?`;await t(y,h);const j=await t("SELECT * FROM cms_sections WHERE id = ?",[n]);return j[0].settings&&(j[0].settings=JSON.parse(j[0].settings)),{success:!0,data:{section:j[0]},message:"Section updated successfully"}}catch(e){if(console.error("Error updating section:",e),e.statusCode)throw e;throw o({statusCode:500,statusMessage:"Error updating section"})}}));export{n as default};
//# sourceMappingURL=_id_.put.mjs.map
