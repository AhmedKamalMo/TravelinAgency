import{defineEventHandler as e,readMultipartFormData as t,createError as s}from"file://F:/TravelinAgency/node_modules/h3/dist/index.mjs";import{mkdir as a,writeFile as o}from"node:fs/promises";import{join as i,extname as r}from"node:path";import{v as d}from"../../../_/v4.mjs";import"node:crypto";const n=e((async e=>{var n;try{const l=await t(e);if(!l||0===l.length)throw s({statusCode:400,statusMessage:"No files uploaded"});const m=l[0];if(!m.data||!m.filename)throw s({statusCode:400,statusMessage:"Invalid file data"});if(!(null==(n=m.type)?void 0:n.startsWith("image/")))throw s({statusCode:400,statusMessage:"File must be an image"});const u=5242880;if(m.data.length>u)throw s({statusCode:400,statusMessage:"File size too large. Maximum 5MB allowed"});const g=i(process.cwd(),"public","images","destinations");await a(g,{recursive:!0});const c=r(m.filename),f=`dest_${d()}${c}`,p=i(g,f);await o(p,m.data);return{success:!0,message:"Image uploaded successfully",data:{originalName:m.filename,filename:f,url:`/images/destinations/${f}`,size:m.data.length,type:m.type||"image/jpeg"}}}catch(e){if(console.error("Error uploading destination image:",e),e.statusCode)throw e;throw s({statusCode:500,statusMessage:"Failed to upload image"})}}));export{n as default};
//# sourceMappingURL=upload-destination.post.mjs.map
