import{defineEventHandler as e,readMultipartFormData as s,createError as t}from"file://F:/TravelinAgency/node_modules/h3/dist/index.mjs";import{mkdir as a,writeFile as o}from"node:fs/promises";import{join as i}from"node:path";import{existsSync as r}from"node:fs";const l=e((async e=>{try{const l=await s(e);if(!l||0===l.length)throw t({statusCode:400,statusMessage:"No file uploaded"});const n=l[0];if(!["image/jpeg","image/jpg","image/png","image/gif","image/webp"].includes(n.type))throw t({statusCode:400,statusMessage:"Invalid file type. Only JPEG, PNG, GIF, and WebP images are allowed."});const g=5242880;if(n.data.length>g)throw t({statusCode:400,statusMessage:"File too large. Maximum size is 5MB."});const d=i(process.cwd(),"uploads");r(d)||await a(d,{recursive:!0});const u=n.filename.split(".").pop(),m=`logo_${Date.now()}_${Math.random().toString(36).substring(7)}.${u}`,p=i(d,m);await o(p,n.data);try{const{executeQuery:e}=await import("../../../_/database.mjs");await e("INSERT INTO cms_site_settings (setting_key, setting_value, setting_type, category, is_public) VALUES ('site_logo', ?, 'image', 'general', 1) ON DUPLICATE KEY UPDATE setting_value = VALUES(setting_value)",[`/uploads/${m}`])}catch(e){console.error("Database update failed:",e)}return{success:!0,message:"Image uploaded successfully",url:`/uploads/${m}`,filename:m}}catch(e){throw console.error("Upload error:",e),t({statusCode:e.statusCode||500,statusMessage:e.statusMessage||"Upload failed: "+e.message})}}));export{l as default};
//# sourceMappingURL=image.post.mjs.map
