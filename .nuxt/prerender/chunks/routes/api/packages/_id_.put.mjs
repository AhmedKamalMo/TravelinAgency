import{defineEventHandler as e,getRouterParam as i,readBody as t,createError as n}from"file://F:/TravelinAgency/node_modules/h3/dist/index.mjs";import{e as a}from"../../../_/database.mjs";import"../../../_/nitro.mjs";import"file://F:/TravelinAgency/node_modules/destr/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/hookable/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/ofetch/dist/node.mjs";import"file://F:/TravelinAgency/node_modules/node-mock-http/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/klona/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/defu/dist/defu.mjs";import"file://F:/TravelinAgency/node_modules/scule/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/radix3/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/vue/index.mjs";import"node:fs";import"node:url";import"file://F:/TravelinAgency/node_modules/pathe/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/@iconify/utils/lib/index.mjs";import"file://F:/TravelinAgency/node_modules/ohash/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/consola/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/ipx/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/unstorage/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/unstorage/drivers/fs.mjs";import"file:///F:/TravelinAgency/node_modules/nuxt/dist/core/runtime/nitro/utils/cache-driver.js";import"file://F:/TravelinAgency/node_modules/unstorage/drivers/fs-lite.mjs";import"file://F:/TravelinAgency/node_modules/mysql2/promise.js";import"file://F:/TravelinAgency/node_modules/bcryptjs/index.js";import"file://F:/TravelinAgency/node_modules/jsonwebtoken/index.js";const s=e((async e=>{try{const s=i(e,"id"),r=await t(e);if(!s)throw n({statusCode:400,statusMessage:"Package ID is required"});if(!(r.title_ar&&r.title_en&&r.description_ar&&r.description_en))throw n({statusCode:400,statusMessage:"Title and description in both languages are required"});if(0===(await a("\n      UPDATE packages SET\n        title_ar = ?,\n        title_en = ?,\n        description_ar = ?,\n        description_en = ?,\n        price = ?,\n        duration_days = ?,\n        travel_period = ?,\n        max_persons = ?,\n        image_url = ?,\n        featured = ?,\n        active = ?,\n        features = ?,\n        itinerary = ?,\n        included = ?,\n        excluded = ?,\n        updated_at = CURRENT_TIMESTAMP\n      WHERE id = ?\n    ",[r.title_ar,r.title_en,r.description_ar,r.description_en,r.price||0,r.duration_days||1,r.travel_period||"",r.max_persons||10,r.image_url||"",r.featured?1:0,"active"===r.status?1:0,JSON.stringify(r.features||[]),JSON.stringify(r.itinerary||[]),JSON.stringify(r.included||[]),JSON.stringify(r.excluded||[]),s])).affectedRows)throw n({statusCode:404,statusMessage:"Package not found"});const d=await a("\n      SELECT \n        id, \n        title_ar,\n        title_en,\n        description_ar,\n        description_en,\n        price,\n        duration_days as duration,\n        image_url as image,\n        travel_period as location,\n        max_persons,\n        category,\n        featured,\n        active as status,\n        features,\n        itinerary,\n        included,\n        excluded,\n        created_at,\n        updated_at\n      FROM packages \n      WHERE id = ?\n    ",[s]);if(!d||0===d.length)throw n({statusCode:500,statusMessage:"Failed to retrieve updated package"});const o=d[0];return{success:!0,message:"Package updated successfully",package:{id:o.id,image_url:o.image,image:o.image,title_ar:o.title_ar,title_en:o.title_en,title:o.title_ar||o.title_en,description_ar:o.description_ar,description_en:o.description_en,description:o.description_ar||o.description_en,travel_period:o.location||`${o.duration} أيام`,duration_days:o.duration,price:o.price,max_persons:o.max_persons||10,featured:o.featured,location:o.location,category:o.category||"international",status:1===o.status?"active":"inactive",features:JSON.parse(o.features||"[]"),itinerary:JSON.parse(o.itinerary||"[]"),included:JSON.parse(o.included||"[]"),excluded:JSON.parse(o.excluded||"[]"),created_at:o.created_at,updated_at:o.updated_at}}}catch(e){if(console.error("Error updating package:",e),e.statusCode)throw e;throw n({statusCode:500,statusMessage:"Failed to update package"})}}));export{s as default};
//# sourceMappingURL=_id_.put.mjs.map
