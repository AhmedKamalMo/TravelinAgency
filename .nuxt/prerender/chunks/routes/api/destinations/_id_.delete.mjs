import{defineEventHandler as e,getRouterParam as i,createError as s}from"file://F:/TravelinAgency/node_modules/h3/dist/index.mjs";import{e as n}from"../../../_/database.mjs";import"../../../_/nitro.mjs";import"file://F:/TravelinAgency/node_modules/destr/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/hookable/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/ofetch/dist/node.mjs";import"file://F:/TravelinAgency/node_modules/node-mock-http/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/klona/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/defu/dist/defu.mjs";import"file://F:/TravelinAgency/node_modules/scule/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/radix3/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/vue/index.mjs";import"node:fs";import"node:url";import"file://F:/TravelinAgency/node_modules/pathe/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/@iconify/utils/lib/index.mjs";import"file://F:/TravelinAgency/node_modules/ohash/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/consola/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/ipx/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/unstorage/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/unstorage/drivers/fs.mjs";import"file:///F:/TravelinAgency/node_modules/nuxt/dist/core/runtime/nitro/utils/cache-driver.js";import"file://F:/TravelinAgency/node_modules/unstorage/drivers/fs-lite.mjs";import"file://F:/TravelinAgency/node_modules/mysql2/promise.js";import"file://F:/TravelinAgency/node_modules/bcryptjs/index.js";import"file://F:/TravelinAgency/node_modules/jsonwebtoken/index.js";const o=e((async e=>{try{const o=i(e,"id");if(!o)throw s({statusCode:400,statusMessage:"Destination ID is required"});const t=await n("\n      SELECT id FROM destinations WHERE id = ?\n    ",[o]);if(!t||0===t.length)throw s({statusCode:404,statusMessage:"Destination not found"});if(0===(await n("\n      DELETE FROM destinations WHERE id = ?\n    ",[o])).affectedRows)throw s({statusCode:404,statusMessage:"Destination not found"});return{success:!0,message:"Destination deleted successfully"}}catch(e){if(console.error("Error deleting destination:",e),e.statusCode)throw e;throw s({statusCode:500,statusMessage:"Failed to delete destination"})}}));export{o as default};
//# sourceMappingURL=_id_.delete.mjs.map
