import{defineEventHandler as e,getRouterParam as n,readBody as i,createError as t}from"file://F:/TravelinAgency/node_modules/h3/dist/index.mjs";import{e as o}from"../../../_/database.mjs";import"../../../_/nitro.mjs";import"file://F:/TravelinAgency/node_modules/destr/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/hookable/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/ofetch/dist/node.mjs";import"file://F:/TravelinAgency/node_modules/node-mock-http/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/klona/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/defu/dist/defu.mjs";import"file://F:/TravelinAgency/node_modules/scule/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/radix3/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/vue/index.mjs";import"node:fs";import"node:url";import"file://F:/TravelinAgency/node_modules/pathe/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/@iconify/utils/lib/index.mjs";import"file://F:/TravelinAgency/node_modules/ohash/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/consola/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/ipx/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/unstorage/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/unstorage/drivers/fs.mjs";import"file:///F:/TravelinAgency/node_modules/nuxt/dist/core/runtime/nitro/utils/cache-driver.js";import"file://F:/TravelinAgency/node_modules/unstorage/drivers/fs-lite.mjs";import"file://F:/TravelinAgency/node_modules/mysql2/promise.js";import"file://F:/TravelinAgency/node_modules/bcryptjs/index.js";import"file://F:/TravelinAgency/node_modules/jsonwebtoken/index.js";const a=e((async e=>{try{const a=n(e,"id"),s=await i(e);if(!a)throw t({statusCode:400,statusMessage:"Destination ID is required"});if(!(s.name_ar&&s.name_en&&s.description_ar&&s.description_en))throw t({statusCode:400,statusMessage:"Name and description in both languages are required"});if(0===(await o("\n      UPDATE destinations SET\n        name_ar = ?,\n        name_en = ?,\n        description_ar = ?,\n        description_en = ?,\n        image_url = ?,\n        category = ?,\n        featured = ?,\n        active = ?,\n        updated_at = CURRENT_TIMESTAMP\n      WHERE id = ?\n    ",[s.name_ar,s.name_en,s.description_ar,s.description_en,s.image_url||null,s.category||"international",s.featured?1:0,s.active?1:0,a])).affectedRows)throw t({statusCode:404,statusMessage:"Destination not found"});const d=await o("\n      SELECT \n        id, \n        name_ar,\n        name_en,\n        description_ar,\n        description_en,\n        image_url,\n        category,\n        featured,\n        active,\n        region_ar,\n        region_en,\n        location_type_ar,\n        location_type_en,\n        destination_type_ar,\n        destination_type_en,\n        coordinates,\n        created_at,\n        updated_at\n      FROM destinations \n      WHERE id = ?\n    ",[a]);if(!d||0===d.length)throw t({statusCode:500,statusMessage:"Failed to retrieve updated destination"});const r=d[0];return{success:!0,message:"Destination updated successfully",data:{id:r.id,name:r.name_ar||r.name_en,name_ar:r.name_ar,name_en:r.name_en,description:r.description_ar||r.description_en,description_ar:r.description_ar,description_en:r.description_en,image:r.image_url,image_url:r.image_url,category:r.category,featured:1===r.featured,active:1===r.active,status:1===r.active?"active":"inactive",region_ar:r.region_ar,region_en:r.region_en,location_type_ar:r.location_type_ar,location_type_en:r.location_type_en,destination_type_ar:r.destination_type_ar,destination_type_en:r.destination_type_en,coordinates:r.coordinates?JSON.parse(r.coordinates):null,created_at:r.created_at,updated_at:r.updated_at}}}catch(e){if(console.error("Error updating destination:",e),e.statusCode)throw e;throw t({statusCode:500,statusMessage:"Failed to update destination"})}}));export{a as default};
//# sourceMappingURL=_id_.put.mjs.map
