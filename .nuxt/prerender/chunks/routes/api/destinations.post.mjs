import{defineEventHandler as e,readBody as n,createError as i}from"file://F:/TravelinAgency/node_modules/h3/dist/index.mjs";import{executeQuery as t}from"../../_/database.mjs";import"../../_/nitro.mjs";import"file://F:/TravelinAgency/node_modules/destr/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/hookable/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/ofetch/dist/node.mjs";import"file://F:/TravelinAgency/node_modules/node-mock-http/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/klona/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/defu/dist/defu.mjs";import"file://F:/TravelinAgency/node_modules/scule/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/radix3/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/vue/index.mjs";import"node:fs";import"node:url";import"file://F:/TravelinAgency/node_modules/pathe/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/@iconify/utils/lib/index.mjs";import"file://F:/TravelinAgency/node_modules/ohash/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/consola/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/ipx/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/unstorage/dist/index.mjs";import"file://F:/TravelinAgency/node_modules/unstorage/drivers/fs.mjs";import"file:///F:/TravelinAgency/node_modules/nuxt/dist/core/runtime/nitro/utils/cache-driver.js";import"file://F:/TravelinAgency/node_modules/unstorage/drivers/fs-lite.mjs";import"file://F:/TravelinAgency/node_modules/mysql2/promise.js";import"file://F:/TravelinAgency/node_modules/bcryptjs/index.js";import"file://F:/TravelinAgency/node_modules/jsonwebtoken/index.js";const s=e((async e=>{try{const s=await n(e);if(!(s.name_ar&&s.name_en&&s.description_ar&&s.description_en&&s.country&&s.city))throw i({statusCode:400,statusMessage:"Name, description, country, and city are required"});const r=await t("\n      INSERT INTO destinations (\n        name,\n        name_ar,\n        name_en,\n        description,\n        description_ar,\n        description_en,\n        country,\n        city,\n        region,\n        type,\n        status,\n        image,\n        images,\n        features,\n        best_time_to_visit,\n        average_temperature,\n        local_language,\n        local_currency,\n        is_featured,\n        seo_title,\n        seo_description,\n        seo_keywords,\n        created_by,\n        created_at,\n        updated_at\n      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)\n    ",[s.name_ar,s.name_ar,s.name_en,s.description_ar,s.description_ar,s.description_en,s.country,s.city,s.region||null,s.type||"city",s.status||"active",s.image_url||null,JSON.stringify([]),JSON.stringify(s.features||[]),s.best_time_to_visit||null,s.average_temperature||null,s.local_language||null,s.local_currency||null,s.is_featured||0,s.seo_title||null,s.seo_description||null,s.seo_keywords||null,"1"]),o=await t("\n      SELECT \n        id, \n        name,\n        name_ar,\n        name_en,\n        description,\n        description_ar,\n        description_en,\n        country,\n        city,\n        region,\n        type,\n        status,\n        image,\n        images,\n        features,\n        best_time_to_visit,\n        average_temperature,\n        local_language,\n        local_currency,\n        is_featured,\n        seo_title,\n        seo_description,\n        seo_keywords,\n        created_at,\n        updated_at\n      FROM destinations \n      WHERE id = ?\n    ",[r.insertId]);if(!o||0===o.length)throw i({statusCode:500,statusMessage:"Failed to retrieve created destination"});const a=o[0];return{success:!0,message:"Destination created successfully",data:{id:a.id,name:a.name,name_ar:a.name_ar,name_en:a.name_en,description:a.description,description_ar:a.description_ar,description_en:a.description_en,country:a.country,city:a.city,region:a.region,type:a.type,status:a.status,image:a.image,image_url:a.image,images:JSON.parse(a.images||"[]"),features:JSON.parse(a.features||"[]"),best_time_to_visit:a.best_time_to_visit,average_temperature:a.average_temperature,local_language:a.local_language,local_currency:a.local_currency,is_featured:a.is_featured,seo_title:a.seo_title,seo_description:a.seo_description,seo_keywords:a.seo_keywords,created_at:a.created_at,updated_at:a.updated_at}}}catch(e){if(console.error("Error creating destination:",e),e.statusCode)throw e;throw i({statusCode:500,statusMessage:"Failed to create destination"})}}));export{s as default};
//# sourceMappingURL=destinations.post.mjs.map
