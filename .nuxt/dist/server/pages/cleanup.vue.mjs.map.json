{"file":"cleanup.vue.mjs","mappings":"wYAmDM,MAAAA,EAAaC,EAAI,EAAK,EACtBC,EAAkBD,EAAI,EAAK,EAC3BE,EAAQF,EAAI,CAChB,cAAe,GACf,cAAe,GACf,gBAAiB,GACjB,YAAa,EAAA,CACd","names":["isCleaning","ref","cleanupComplete","steps"],"sources":["../../../../pages/cleanup.vue"],"sourcesContent":["<template>\r\n  <div class=\"min-h-screen bg-gray-100 flex items-center justify-center\">\r\n    <div class=\"max-w-md mx-auto bg-white rounded-lg shadow-lg p-8 text-center\">\r\n      <div class=\"mb-6\">\r\n        <Icon name=\"material-symbols:cleaning-services\" class=\"h-16 w-16 text-blue-600 mx-auto mb-4\" />\r\n        <h1 class=\"text-2xl font-bold text-gray-900 mb-2\">Service Worker Cleanup</h1>\r\n        <p class=\"text-gray-600\">This page will remove all cached service workers and clear browser cache.</p>\r\n      </div>\r\n      \r\n      <div v-if=\"!cleanupComplete\" class=\"space-y-4\">\r\n        <button\r\n          @click=\"startCleanup\"\r\n          :disabled=\"isCleaning\"\r\n          class=\"w-full bg-blue-600 text-white py-3 px-6 rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\r\n        >\r\n          {{ isCleaning ? 'Cleaning...' : 'Start Cleanup' }}\r\n        </button>\r\n        \r\n        <div v-if=\"isCleaning\" class=\"text-sm text-gray-600\">\r\n          <p>Cleaning up service workers and cache...</p>\r\n          <div class=\"mt-2 space-y-1\">\r\n            <p v-if=\"steps.unregistering\">✓ Unregistering service workers</p>\r\n            <p v-if=\"steps.clearingCache\">✓ Clearing browser cache</p>\r\n            <p v-if=\"steps.clearingStorage\">✓ Clearing local storage</p>\r\n            <p v-if=\"steps.redirecting\">✓ Preparing redirect</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div v-else class=\"space-y-4\">\r\n        <div class=\"text-green-600\">\r\n          <Icon name=\"material-symbols:check-circle\" class=\"h-12 w-12 mx-auto mb-2\" />\r\n          <p class=\"font-semibold\">Cleanup Complete!</p>\r\n        </div>\r\n        <p class=\"text-sm text-gray-600\">All service workers have been removed and cache cleared.</p>\r\n        <button\r\n          @click=\"redirectToHome\"\r\n          class=\"w-full bg-green-600 text-white py-3 px-6 rounded-lg hover:bg-green-700 transition-colors\"\r\n        >\r\n          Go to Home Page\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\ndefinePageMeta({\r\n  layout: false\r\n})\r\n\r\nconst isCleaning = ref(false)\r\nconst cleanupComplete = ref(false)\r\nconst steps = ref({\r\n  unregistering: false,\r\n  clearingCache: false,\r\n  clearingStorage: false,\r\n  redirecting: false\r\n})\r\n\r\nconst startCleanup = async () => {\r\n  isCleaning.value = true\r\n  \r\n  try {\r\n    // Step 1: Unregister service workers\r\n    steps.value.unregistering = true\r\n    if ('serviceWorker' in navigator) {\r\n      const registrations = await navigator.serviceWorker.getRegistrations()\r\n      for (const registration of registrations) {\r\n        await registration.unregister()\r\n        console.log('Service Worker unregistered:', registration)\r\n      }\r\n    }\r\n    await new Promise(resolve => setTimeout(resolve, 1000))\r\n    \r\n    // Step 2: Clear caches\r\n    steps.value.clearingCache = true\r\n    if ('caches' in window) {\r\n      const cacheNames = await caches.keys()\r\n      await Promise.all(\r\n        cacheNames.map(cacheName => {\r\n          console.log('Deleting cache:', cacheName)\r\n          return caches.delete(cacheName)\r\n        })\r\n      )\r\n    }\r\n    await new Promise(resolve => setTimeout(resolve, 1000))\r\n    \r\n    // Step 3: Clear storage\r\n    steps.value.clearingStorage = true\r\n    if ('localStorage' in window) {\r\n      localStorage.clear()\r\n    }\r\n    if ('sessionStorage' in window) {\r\n      sessionStorage.clear()\r\n    }\r\n    await new Promise(resolve => setTimeout(resolve, 1000))\r\n    \r\n    // Step 4: Prepare redirect\r\n    steps.value.redirecting = true\r\n    await new Promise(resolve => setTimeout(resolve, 1000))\r\n    \r\n    cleanupComplete.value = true\r\n    \r\n  } catch (error) {\r\n    console.error('Cleanup error:', error)\r\n  }\r\n}\r\n\r\nconst redirectToHome = () => {\r\n  window.location.href = '/'\r\n}\r\n</script>\r\n"],"version":3}