{"file":"useMessageCounter.mjs","mappings":"wCAAO,MAAMA,EAAoB,IAAM,CAC/B,MAAAC,EAAcC,EAAI,CAAC,EACnBC,EAAaD,EAAI,CAAC,EAElBE,EAAqB,SAAY,CACjC,GAAA,CACI,MAAAC,EAAW,MAAM,OAAO,uBAAuB,EACjD,GAAAA,GAAYA,EAAS,SAAU,CACjC,MAAMC,EAAWD,EAAS,SAC1BF,EAAW,MAAQG,EAAS,OAChBL,EAAA,MAAQK,EAAS,OAAQC,GAAaA,EAAI,SAAW,KAAK,EAAE,MAAA,QAEnEC,EAAO,CACN,QAAA,MAAM,iCAAkCA,CAAK,CAAA,CAEzD,EAEMC,EAAe,CAACC,EAAkBC,IAAsB,CAC5DR,EAAW,MAAQO,EACnBT,EAAY,MAAQU,CACtB,EAEMC,EAAa,IAAM,CACvBX,EAAY,MAAQ,CACtB,EAEMY,EAAiB,IAAM,CAChBV,EAAA,QACCF,EAAA,OACd,EAEO,MAAA,CACL,YAAaa,EAASb,CAAW,EACjC,WAAYa,EAASX,CAAU,EAC/B,mBAAAC,EACA,aAAAK,EACA,WAAAG,EACA,eAAAC,CACF,CACF","names":["useMessageCounter","unreadCount","ref","totalCount","fetchMessageCounts","response","messages","msg","error","updateCounts","newTotal","newUnread","markAsRead","incrementCount","readonly"],"sources":["../../../../composables/useMessageCounter.ts"],"sourcesContent":["export const useMessageCounter = () => {\r\n  const unreadCount = ref(0)\r\n  const totalCount = ref(0)\r\n\r\n  const fetchMessageCounts = async () => {\r\n    try {\r\n      const response = await $fetch('/api/contact-messages')\r\n      if (response && response.messages) {\r\n        const messages = response.messages\r\n        totalCount.value = messages.length\r\n        unreadCount.value = messages.filter((msg: any) => msg.status === 'new').length\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching message counts:', error)\r\n    }\r\n  }\r\n\r\n  const updateCounts = (newTotal: number, newUnread: number) => {\r\n    totalCount.value = newTotal\r\n    unreadCount.value = newUnread\r\n  }\r\n\r\n  const markAsRead = () => {\r\n    unreadCount.value = 0\r\n  }\r\n\r\n  const incrementCount = () => {\r\n    totalCount.value++\r\n    unreadCount.value++\r\n  }\r\n\r\n  return {\r\n    unreadCount: readonly(unreadCount),\r\n    totalCount: readonly(totalCount),\r\n    fetchMessageCounts,\r\n    updateCounts,\r\n    markAsRead,\r\n    incrementCount\r\n  }\r\n}\r\n"],"version":3}