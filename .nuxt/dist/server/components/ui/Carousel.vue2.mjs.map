{"version":3,"file":"Carousel.vue2.mjs","sources":["../../../../../components/ui/Carousel.vue"],"sourcesContent":["<template>\n  <div \n    class=\"relative group\"\n    @mouseenter=\"pauseAutoScroll\"\n    @mouseleave=\"resumeAutoScroll\"\n  >\n    <!-- Cards Container -->\n    <div class=\"relative w-full\">\n      <div ref=\"scrollContainer\"\n        class=\"flex overflow-x-auto scrollbar-hide scroll-smooth pb-4\"\n        :dir=\"$i18n.locale === 'ar-SA' ? 'rtl' : 'ltr'\"\n      >\n        <div class=\"flex gap-4 sm:gap-6 md:gap-8 px-4 md:px-6\">\n          <div v-for=\"(item, index) in items\"\n            :key=\"typeof item === 'object' && 'id' in item ? item.id : index\"\n            class=\"flex-none w-[85vw] sm:w-[400px] md:w-[500px] h-[500px] sm:h-[550px] md:h-[600px] snap-start\"\n            :ref=\"el => cardRefs[index] = el as HTMLElement\"\n          >\n            <slot :item=\"item\" :index=\"index\" />\n          </div>\n        </div>\n      </div>\n\n      <!-- Navigation Buttons -->\n      <button \n        @click=\"scrollToPrev\"\n        :class=\"[\n          'absolute top-1/2 -translate-y-1/2 bg-white/80 hover:bg-white/90 p-1.5 sm:p-2 rounded-full shadow-lg z-10 transition-opacity',\n          $i18n.locale === 'ar-SA' ? 'right-2 sm:right-4' : 'left-2 sm:left-4',\n          'opacity-0 group-hover:opacity-100'\n        ]\"\n      >\n        <Icon name=\"material-symbols:chevron-left-rounded\" class=\"w-4 h-4 sm:w-6 sm:h-6\" :class=\"{ 'rotate-180': $i18n.locale === 'ar-SA' }\" />\n      </button>\n      <button \n        @click=\"scrollToNext\"\n        :class=\"[\n          'absolute top-1/2 -translate-y-1/2 bg-white/80 hover:bg-white/90 p-1.5 sm:p-2 rounded-full shadow-lg z-10 transition-opacity',\n          $i18n.locale === 'ar-SA' ? 'left-2 sm:left-4' : 'right-2 sm:right-4',\n          'opacity-0 group-hover:opacity-100'\n        ]\"\n      >\n        <Icon name=\"material-symbols:chevron-right-rounded\" class=\"w-4 h-4 sm:w-6 sm:h-6\" :class=\"{ 'rotate-180': $i18n.locale === 'ar-SA' }\" />\n      </button>\n    </div>\n\n    <!-- Pagination Dots -->\n    <div class=\"flex justify-center gap-1.5 sm:gap-2 mt-6 sm:mt-8\">\n      <button\n        v-for=\"(_, index) in items\"\n        :key=\"index\"\n        @click=\"scrollToIndex(index)\"\n        class=\"w-1.5 sm:w-2 h-1.5 sm:h-2 rounded-full transition-all duration-300\"\n        :class=\"[\n          currentIndex === index \n            ? 'bg-primary-600 w-4 sm:w-6' \n            : 'bg-gray-300 hover:bg-primary-400'\n        ]\"\n      />\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { useI18n } from 'vue-i18n'\nimport { ref, watch, onMounted, onUnmounted } from 'vue'\nimport { useDebounceFn } from '@vueuse/core'\n\nconst props = defineProps<{\n  items: any[]\n}>()\n\nconst emit = defineEmits<{\n  (e: 'change', index: number): void\n}>()\n\nconst { locale } = useI18n()\nconst scrollContainer = ref<HTMLElement | null>(null)\nconst currentIndex = ref(0)\nconst cardRefs = ref<HTMLElement[]>([])\nconst isScrolling = ref(false)\nconst autoScrollInterval = ref<NodeJS.Timeout | null>(null)\nconst isAutoScrollPaused = ref(false)\n\n// Constants\nconst AUTO_SCROLL_INTERVAL = 2000 // 2 seconds\nconst SCROLL_ANIMATION_DURATION = 500 // 500ms\n\n// Auto scroll functionality\nconst startAutoScroll = () => {\n  if (autoScrollInterval.value) return\n  \n  autoScrollInterval.value = setInterval(() => {\n    if (!isAutoScrollPaused.value) {\n      scrollToNext()\n    }\n  }, AUTO_SCROLL_INTERVAL)\n}\n\nconst stopAutoScroll = () => {\n  if (autoScrollInterval.value) {\n    clearInterval(autoScrollInterval.value)\n    autoScrollInterval.value = null\n  }\n}\n\nconst pauseAutoScroll = () => {\n  isAutoScrollPaused.value = true\n}\n\nconst resumeAutoScroll = () => {\n  isAutoScrollPaused.value = false\n}\n\n// Constants for different screen sizes\nconst getCardWidth = (): number => {\n  if (process.client) {\n    const width = window.innerWidth\n    if (width < 640) return Math.round(width * 0.85) // Mobile: 85vw\n    if (width < 768) return 400 // Tablet: 400px\n    return 500 // Desktop: 500px\n  }\n  return 500 // Default for SSR\n}\n\nconst CARD_GAP = 32\n\nconst scrollToIndex = (index: number, smooth = true) => {\n  if (!scrollContainer.value) return\n  \n  const targetCard = cardRefs.value[index]\n  if (!targetCard) return\n\n  isScrolling.value = true\n  const isRTL = locale.value === 'ar-SA'\n  const cardWidth = getCardWidth()\n  const containerWidth = scrollContainer.value.clientWidth\n  \n  // Calculate position that centers the card in the viewport\n  const cardOffset = index * (cardWidth + CARD_GAP)\n  // Add half of the container width minus half of the card width to center it\n  const scrollPosition = cardOffset - (containerWidth - cardWidth) / 2\n  \n  // Ensure we don't scroll past the beginning\n  const adjustedPosition = Math.max(0, scrollPosition)\n\n  scrollContainer.value.scrollTo({\n    left: isRTL ? -adjustedPosition : adjustedPosition,\n    behavior: smooth ? 'smooth' : 'instant'\n  })\n\n  currentIndex.value = index\n  emit('change', index)\n\n  setTimeout(() => {\n    isScrolling.value = false\n  }, smooth ? SCROLL_ANIMATION_DURATION : 0)\n}\n\nconst scrollToNext = () => {\n  const nextIndex = currentIndex.value === props.items.length - 1 \n    ? 0 // Go to first if at last\n    : currentIndex.value + 1\n  scrollToIndex(nextIndex)\n}\n\nconst scrollToPrev = () => {\n  const prevIndex = currentIndex.value === 0\n    ? props.items.length - 1 // Go to last if at first\n    : currentIndex.value - 1\n  scrollToIndex(prevIndex)\n}\n\nconst updateIndex = () => {\n  if (!scrollContainer.value || isScrolling.value) return\n\n  const isRTL = locale.value === 'ar-SA'\n  const cardWidth = getCardWidth()\n  const scrollPosition = isRTL \n    ? -scrollContainer.value.scrollLeft \n    : scrollContainer.value.scrollLeft\n  \n  const newIndex = Math.round(scrollPosition / (cardWidth + CARD_GAP))\n  if (newIndex !== currentIndex.value && newIndex >= 0 && newIndex < props.items.length) {\n    currentIndex.value = newIndex\n    emit('change', newIndex)\n  }\n}\n\n// Watch scroll position to update current index\nonMounted(() => {\n  if (!scrollContainer.value) return\n\n  const debouncedUpdate = useDebounceFn(updateIndex, 100)\n  scrollContainer.value.addEventListener('scroll', debouncedUpdate)\n\n  // Initial index update\n  updateIndex()\n\n  // Start auto-scroll\n  startAutoScroll()\n\n  // Cleanup\n  onUnmounted(() => {\n    if (scrollContainer.value) {\n      scrollContainer.value.removeEventListener('scroll', debouncedUpdate)\n    }\n    stopAutoScroll()\n  })\n})\n\n// Watch locale changes to update scroll position\nwatch(() => locale.value, () => {\n  scrollToIndex(currentIndex.value, false)\n})\n\n// Watch items length changes\nwatch(() => props.items.length, (newLength, oldLength) => {\n  if (currentIndex.value >= newLength) {\n    // If current index is out of bounds, reset to first slide\n    scrollToIndex(0, false)\n  }\n})\n</script>\n\n<style scoped>\n.scrollbar-hide {\n  -ms-overflow-style: none;\n  scrollbar-width: none;\n}\n.scrollbar-hide::-webkit-scrollbar {\n  display: none;\n}\n</style>\n"],"names":["SCROLL_ANIMATION_DURATION","CARD_GAP","props","__props","emit","__emit","locale","useI18n","scrollContainer","ref","currentIndex","cardRefs","isScrolling","getCardWidth","scrollToIndex","index","smooth","isRTL","cardWidth","containerWidth","scrollPosition","adjustedPosition","watch","newLength","oldLength"],"mappings":"2bAsFA,MAAMA,EAA4B,IAuC5BC,EAAW,mGAzDjB,MAAMC,EAAQC,EAIRC,EAAOC,EAIP,CAAE,OAAAC,CAAO,EAAIC,EAAQ,EACrBC,EAAkBC,EAAwB,IAAI,EAC9CC,EAAeD,EAAI,CAAC,EACpBE,EAAWF,EAAmB,EAAE,EAChCG,EAAcH,EAAI,EAAK,EACFA,EAA2B,IAAI,EAC/BA,EAAI,EAAK,EAiCpC,MAAMI,EAAe,IAOZ,IAKHC,EAAgB,CAACC,EAAeC,EAAS,KAAS,CAItD,GAHI,CAACR,EAAgB,OAGjB,CADeG,EAAS,MAAMI,CAAK,EACtB,OAEjBH,EAAY,MAAQ,GACd,MAAAK,EAAQX,EAAO,QAAU,QACzBY,EAAYL,EAAa,EACzBM,EAAiBX,EAAgB,MAAM,YAKvCY,EAFaL,GAASG,EAAYjB,IAEHkB,EAAiBD,GAAa,EAG7DG,EAAmB,KAAK,IAAI,EAAGD,CAAc,EAEnDZ,EAAgB,MAAM,SAAS,CAC7B,KAAMS,EAAQ,CAACI,EAAmBA,EAClC,SAAUL,EAAS,SAAW,SAAA,CAC/B,EAEDN,EAAa,MAAQK,EACrBX,EAAK,SAAUW,CAAK,EAEpB,WAAW,IAAM,CACfH,EAAY,MAAQ,EAAA,EACnBI,EAAShB,EAA4B,CAAC,CAC3C,EAuDM,OAAAsB,EAAA,IAAMhB,EAAO,MAAO,IAAM,CAChBQ,EAAAJ,EAAa,MAAO,EAAK,CAAA,CACxC,EAGDY,EAAM,IAAMpB,EAAM,MAAM,OAAQ,CAACqB,EAAWC,IAAc,CACpDd,EAAa,OAASa,GAExBT,EAAc,EAAG,EAAK,CACxB,CACD"}