{"file":"SlideText.vue2.mjs","mappings":"2TA0BA,MAAMA,EAAQC,EAKRC,EAAeC,EAAI,CAAC,EACPA,EAAmB,IAAI,EAEpC,MAAAC,EAAgBC,EAAS,IACxBL,EAAM,QAAQ,OACZA,EAAM,QAAQE,EAAa,KAAK,EADL,EAEnC","names":["props","__props","currentIndex","ref","currentPhrase","computed"],"sources":["../../../../../components/ui/SlideText.vue"],"sourcesContent":["<template>\n  <div class=\"inline-flex flex-col overflow-hidden\">\n    <transition\n      name=\"slide-fade\"\n      mode=\"out-in\"\n    >\n      <div \n        :key=\"currentPhrase\"\n        class=\"text-3xl sm:text-5xl md:text-6xl lg:text-6xl text-center leading-normal sm:leading-normal md:leading-normal lg:leading-normal whitespace-pre-line\"\n        :style=\"{ color: textColor, fontWeight: fontWeight }\"\n      >\n        {{ currentPhrase }}\n      </div>\n    </transition>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, onMounted, onBeforeUnmount, computed, defineProps, withDefaults } from 'vue';\n\ninterface Props {\n  phrases: string[];\n  textColor?: string;\n  fontWeight?: string;\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  textColor: 'currentColor',\n  fontWeight: 'inherit'\n});\n\nconst currentIndex = ref(0);\nconst intervalId = ref<number | null>(null);\n\nconst currentPhrase = computed(() => {\n  if (!props.phrases.length) return '';\n  return props.phrases[currentIndex.value];\n});\n\nconst nextPhrase = () => {\n  currentIndex.value = (currentIndex.value + 1) % props.phrases.length;\n};\n\nonMounted(() => {\n  intervalId.value = window.setInterval(nextPhrase, 3000);\n});\n\nonBeforeUnmount(() => {\n  if (intervalId.value) {\n    clearInterval(intervalId.value);\n  }\n});\n</script>\n\n<style scoped>\n.slide-fade-enter-active,\n.slide-fade-leave-active {\n  transition: all 0.5s ease;\n}\n\n.slide-fade-enter-from {\n  transform: translateY(20px);\n  opacity: 0;\n}\n\n.slide-fade-leave-to {\n  transform: translateY(-20px);\n  opacity: 0;\n}\n</style>\n"],"version":3}