import{ref as u,provide as c,mergeProps as f,unref as v,useSSRContext as x}from"vue";import{ssrRenderAttrs as _,ssrRenderList as y,ssrRenderComponent as C}from"vue/server-renderer";import g from"./Notification.vue.mjs";const l={__name:"NotificationContainer",__ssrInlineRender:!0,setup(d,{expose:r}){const s=u([]),a=t=>{const e=Date.now()+Math.random();s.value.push({id:e,type:t.type||"info",title:t.title,message:t.message||"",duration:t.duration||5e3})},o=t=>{const e=s.value.findIndex(i=>i.id===t);e>-1&&s.value.splice(e,1)};return r({addNotification:a,removeNotification:o}),c("notifications",{addNotification:a,removeNotification:o}),(t,e,i,p)=>{e(`<div${_(f({"aria-live":"assertive",class:"pointer-events-none fixed inset-0 flex items-end px-4 py-6 sm:items-start sm:p-6 z-50"},p))}><div class="flex w-full flex-col items-center space-y-4 sm:items-end"><!--[-->`),y(v(s),n=>{e(C(g,{key:n.id,type:n.type,title:n.title,message:n.message,duration:n.duration,onClose:R=>o(n.id)},null,i))}),e("<!--]--></div></div>")}}},m=l.setup;l.setup=(d,r)=>{const s=x();return(s.modules||(s.modules=new Set)).add("components/ui/NotificationContainer.vue"),m?m(d,r):void 0};export{l as default};
//# sourceMappingURL=NotificationContainer.vue.mjs.map
