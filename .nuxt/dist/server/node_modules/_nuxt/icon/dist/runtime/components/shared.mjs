import{computed as u}from"vue";import{getIcon as s,loadIcon as f}from"@iconify/vue";import{useAppConfig as d}from"../../../../../nuxt/dist/app/config.mjs";async function m(o,n){if(!o)return null;const l=s(o);if(l)return l;let t;const e=f(o).catch(()=>(console.warn(`[Icon] failed to load icon \`${o}\``),null));return n>0?await Promise.race([e,new Promise(r=>{t=setTimeout(()=>{console.warn(`[Icon] loading icon \`${o}\` timed out after ${n}ms`),r()},n)})]).finally(()=>clearTimeout(t)):await e,s(o)}function I(o){const n=d().icon,l=(n.collections||[]).sort((t,e)=>e.length-t.length);return u(()=>{var i;const t=o(),e=t.startsWith(n.cssSelectorPrefix)?t.slice(n.cssSelectorPrefix.length):t,r=((i=n.aliases)==null?void 0:i[e])||e;if(!r.includes(":")){const c=l.find(a=>r.startsWith(a+"-"));return c?c+":"+r.slice(c.length+1):r}return r})}function w(o,n){if(o!==!1)return o===!0||o===null?n:o}export{m as loadIcon,w as resolveCustomizeFn,I as useResolvedName};
//# sourceMappingURL=shared.mjs.map
