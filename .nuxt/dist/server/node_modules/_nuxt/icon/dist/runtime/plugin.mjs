import{_api as p,addAPIProvider as u,setCustomIconsLoader as f}from"@iconify/vue";import{defineNuxtPlugin as l,useRuntimeConfig as d}from"../../../../nuxt/dist/app/nuxt.mjs";import{useAppConfig as m}from"../../../../nuxt/dist/app/config.mjs";const A=l({name:"@nuxt/icon",setup(){var e,c;const r=d(),o=m().icon;p.setFetch($fetch.native);const t=[];if(o.provider==="server"){const i=((c=(e=r.app)==null?void 0:e.baseURL)==null?void 0:c.replace(/\/$/,""))??"";t.push(i+(o.localApiEndpoint||"/api/_nuxt_icon")),(o.fallbackToApi===!0||o.fallbackToApi==="client-only")&&t.push(o.iconifyApiEndpoint)}else t.push(o.iconifyApiEndpoint);async function a(i,s){try{const n=await $fetch(t[0]+"/"+s+".json",{query:{icons:i.join(",")}});if(!n||n.prefix!==s||!n.icons)throw new Error("Invalid data"+JSON.stringify(n));return n}catch(n){return console.error("Failed to load custom icons",n),null}}u("",{resources:t});for(const i of o.customCollections||[])i&&f(a,i)}});export{A as default};
//# sourceMappingURL=plugin.mjs.map
