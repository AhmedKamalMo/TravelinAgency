import"@iconify/vue";import{defineComponent as S,computed as l,onServerPrefetch as C,h as y}from"vue";import{getIconCSS as d}from"@iconify/utils/lib/css/icon";import{loadIcon as v,resolveCustomizeFn as x}from"./shared.mjs";import{useAppConfig as h}from"../../../../../nuxt/dist/app/config.mjs";import{useNuxtApp as $,useRuntimeConfig as _}from"../../../../../nuxt/dist/app/nuxt.mjs";import{useHead as g}from"../../../../../nuxt/dist/head/runtime/composables/v3.mjs";const m="NUXT_ICONS_SERVER_CSS";function w(e){return e.replace(/([^\w-])/g,"\\$1")}const P=S({name:"NuxtIconCss",props:{name:{type:String,required:!0},customize:{type:[Function,Boolean,null],default:null,required:!1}},setup(e){const u=$(),t=h().icon,i=l(()=>e.name?t.cssSelectorPrefix+e.name:""),f=l(()=>"."+w(i.value));function p(c,o=!0){let n=f.value;t.cssWherePseudo&&(n=`:where(${n})`);const s=d(c,{iconSelector:n,format:"compressed",customise:x(e.customize,t.customize)});return t.cssLayer&&o?`@layer ${t.cssLayer} { ${s} }`:s}return C(async()=>{var c;{const o=_().icon||{};if(!((c=o==null?void 0:o.serverKnownCssClasses)!=null&&c.includes(i.value))){const n=await v(e.name,t.fetchTimeout).catch(()=>null);if(!n)return null;let s=u.vueApp._context.provides[m];if(s||(s=u.vueApp._context.provides[m]=new Map,u.runWithContext(()=>{g({style:[()=>{const r="";let a=Array.from(s.values()).sort().join(r);return t.cssLayer&&(a=`@layer ${t.cssLayer} {${r}${a}${r}}`),{innerHTML:a}}]},{tagPriority:"low"})})),e.name&&!s.has(e.name)){const r=p(n,!1);s.set(e.name,r)}return null}}}),()=>y("span",{class:["iconify",i.value]})}});export{P as NuxtIconCss};
//# sourceMappingURL=css.mjs.map
