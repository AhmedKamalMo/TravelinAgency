{"version":3,"file":"shared.mjs","sources":["../../../../../../../../../node_modules/@nuxt/icon/dist/runtime/components/shared.js"],"sourcesContent":["import { computed } from \"vue\";\nimport { getIcon as _getIcon, addIcon as _addIcon, loadIcon as _loadIcon } from \"@iconify/vue\";\nimport { useAppConfig } from \"#imports\";\nimport { init as initClientBundle } from \"#build/nuxt-icon-client-bundle\";\nexport { initClientBundle };\nexport async function loadIcon(name, timeout) {\n  if (!name)\n    return null;\n  initClientBundle(_addIcon);\n  const _icon = _getIcon(name);\n  if (_icon)\n    return _icon;\n  let timeoutWarn;\n  const load = _loadIcon(name).catch(() => {\n    console.warn(`[Icon] failed to load icon \\`${name}\\``);\n    return null;\n  });\n  if (timeout > 0)\n    await Promise.race([\n      load,\n      new Promise((resolve) => {\n        timeoutWarn = setTimeout(() => {\n          console.warn(`[Icon] loading icon \\`${name}\\` timed out after ${timeout}ms`);\n          resolve();\n        }, timeout);\n      })\n    ]).finally(() => clearTimeout(timeoutWarn));\n  else\n    await load;\n  return _getIcon(name);\n}\nexport function useResolvedName(getName) {\n  const options = useAppConfig().icon;\n  const collections = (options.collections || []).sort((a, b) => b.length - a.length);\n  return computed(() => {\n    const name = getName();\n    const bare = name.startsWith(options.cssSelectorPrefix) ? name.slice(options.cssSelectorPrefix.length) : name;\n    const resolved = options.aliases?.[bare] || bare;\n    if (!resolved.includes(\":\")) {\n      const collection = collections.find((c) => resolved.startsWith(c + \"-\"));\n      return collection ? collection + \":\" + resolved.slice(collection.length + 1) : resolved;\n    }\n    return resolved;\n  });\n}\nexport function resolveCustomizeFn(customize, globalCustomize) {\n  if (customize === false) return void 0;\n  if (customize === true || customize === null) return globalCustomize;\n  return customize;\n}\n"],"names":["loadIcon","name","timeout","_icon","_getIcon","timeoutWarn","load","_loadIcon","resolve","useResolvedName","getName","options","useAppConfig","collections","a","b","computed","bare","resolved","_a","collection","c","resolveCustomizeFn","customize","globalCustomize"],"mappings":"2JAKO,eAAeA,EAASC,EAAMC,EAAS,CAC5C,GAAI,CAACD,EACH,OAAO,KAET,MAAME,EAAQC,EAASH,CAAI,EAC3B,GAAIE,EACF,OAAOA,EACT,IAAIE,EACJ,MAAMC,EAAOC,EAAUN,CAAI,EAAE,MAAM,KACjC,QAAQ,KAAK,gCAAgCA,CAAI,IAAI,EAC9C,KACR,EACD,OAAIC,EAAU,EACZ,MAAM,QAAQ,KAAK,CACjBI,EACA,IAAI,QAASE,GAAY,CACvBH,EAAc,WAAW,IAAM,CAC7B,QAAQ,KAAK,yBAAyBJ,CAAI,sBAAsBC,CAAO,IAAI,EAC3EM,EAAS,CACV,EAAEN,CAAO,CACX,CAAA,CACF,CAAA,EAAE,QAAQ,IAAM,aAAaG,CAAW,CAAC,EAE1C,MAAMC,EACDF,EAASH,CAAI,CACtB,CACO,SAASQ,EAAgBC,EAAS,CACvC,MAAMC,EAAUC,EAAY,EAAG,KACzBC,GAAeF,EAAQ,aAAe,CAAE,GAAE,KAAK,CAACG,EAAGC,IAAMA,EAAE,OAASD,EAAE,MAAM,EAClF,OAAOE,EAAS,IAAM,OACpB,MAAMf,EAAOS,EAAS,EAChBO,EAAOhB,EAAK,WAAWU,EAAQ,iBAAiB,EAAIV,EAAK,MAAMU,EAAQ,kBAAkB,MAAM,EAAIV,EACnGiB,IAAWC,EAAAR,EAAQ,UAAR,YAAAQ,EAAkBF,KAASA,EAC5C,GAAI,CAACC,EAAS,SAAS,GAAG,EAAG,CAC3B,MAAME,EAAaP,EAAY,KAAMQ,GAAMH,EAAS,WAAWG,EAAI,GAAG,CAAC,EACvE,OAAOD,EAAaA,EAAa,IAAMF,EAAS,MAAME,EAAW,OAAS,CAAC,EAAIF,CACrF,CACI,OAAOA,CACX,CAAG,CACH,CACO,SAASI,EAAmBC,EAAWC,EAAiB,CAC7D,GAAID,IAAc,GAClB,OAAIA,IAAc,IAAQA,IAAc,KAAaC,EAC9CD,CACT","x_google_ignoreList":[0]}