{"file":"_base.mjs","mappings":"4HAGY,MAACA,EAAiB,CAE5B,IAAK,CAAE,KAAM,OAAQ,SAAU,EAAO,EAEtC,OAAQ,CAAE,KAAM,OAAQ,SAAU,EAAO,EACzC,QAAS,CAAE,KAAM,CAAC,OAAQ,MAAM,EAAG,SAAU,EAAO,EACpD,WAAY,CAAE,KAAM,OAAQ,SAAU,EAAO,EAC7C,IAAK,CAAE,KAAM,OAAQ,SAAU,EAAO,EACtC,UAAW,CAAE,KAAM,OAAQ,SAAU,EAAO,EAE5C,OAAQ,CAAE,KAAM,OAAQ,SAAU,EAAO,EACzC,SAAU,CAAE,KAAM,OAAQ,SAAU,EAAO,EAC3C,MAAO,CAAE,KAAM,CAAC,OAAQ,MAAM,EAAG,SAAU,EAAO,EAClD,UAAW,CAAE,KAAM,OAAQ,SAAU,EAAO,EAC5C,QAAS,CACP,KAAM,CAAC,QAAS,MAAM,EACtB,SAAU,EACX,EAED,MAAO,CAAE,KAAM,CAAC,OAAQ,MAAM,EAAG,SAAU,EAAO,EAClD,OAAQ,CAAE,KAAM,CAAC,OAAQ,MAAM,EAAG,SAAU,EAAO,EACnD,IAAK,CAAE,KAAM,OAAQ,SAAU,EAAO,EACtC,eAAgB,CAAE,KAAM,OAAQ,SAAU,EAAO,EACjD,OAAQ,CAAE,KAAM,OAAQ,SAAU,EAAO,EACzC,SAAU,CAAE,KAAM,OAAQ,SAAU,EAAO,EAC3C,MAAO,CAAE,KAAM,QAAS,SAAU,EAAO,EACzC,QAAS,CACP,KAAM,OACN,SAAU,GACV,UAAYC,GAAQ,CAAC,OAAQ,OAAO,EAAE,SAASA,CAAG,CACnD,EACD,YAAa,CACX,KAAM,CAAC,QAAS,MAAM,EACtB,SAAU,GACV,UAAYA,GAAQ,CAAC,YAAa,kBAAmB,GAAI,GAAM,EAAK,EAAE,SAASA,CAAG,CACnF,EACD,SAAU,CACR,KAAM,OACN,SAAU,GACV,UAAYA,GAAQ,CAAC,QAAS,OAAQ,MAAM,EAAE,SAASA,CAAG,CAC3D,EAED,MAAO,CAAE,KAAM,CAAC,MAAM,EAAG,SAAU,EAAK,CAC1C,EACaC,EAAgBC,GAAU,CACrC,MAAMC,EAAUC,EAAS,KAChB,CACL,SAAUF,EAAM,SAChB,OAAQA,EAAM,MACf,EACF,EACKG,EAAQD,EAAS,KACd,CACL,MAAOE,EAAUJ,EAAM,KAAK,EAC5B,OAAQI,EAAUJ,EAAM,MAAM,EAC9B,IAAKA,EAAM,IACX,eAAgBA,EAAM,eACtB,OAAQA,EAAM,OACd,SAAUA,EAAM,SAChB,MAAOA,EAAM,MACb,YAAaA,EAAM,cAAgB,GAAO,YAAcA,EAAM,aAAe,OAC7E,QAASA,EAAM,QACf,SAAUA,EAAM,SAChB,MAAOA,EAAM,KACd,EACF,EACKK,EAAOC,EAAU,EACjBC,EAAYL,EAAS,KAClB,CACL,GAAGF,EAAM,UACT,MAAOI,EAAUJ,EAAM,KAAK,EAC5B,OAAQI,EAAUJ,EAAM,MAAM,EAC9B,OAAQA,EAAM,OACd,QAASA,EAAM,SAAWK,EAAK,QAAQ,QACvC,WAAYL,EAAM,WAClB,IAAKA,EAAM,GACZ,EACF,EACD,MAAO,CACL,QAAAC,EACA,MAAAE,EACA,UAAAI,CACD,CACH,EAMaC,EAAW,CACtB,GAAGX,EACH,YAAa,CAAE,KAAM,CAAC,QAAS,OAAQ,OAAQ,KAAK,EAAG,SAAU,EAAO,EACxE,iBAAkB,CAAE,KAAM,OAAQ,SAAU,EAAO,EACnD,OAAQ,CAAE,KAAM,QAAS,SAAU,EAAK,CAC1C","names":["baseImageProps","val","useBaseImage","props","options","computed","attrs","parseSize","$img","useImage","modifiers","imgProps"],"sources":["../../../../../../../../../node_modules/@nuxt/image/dist/runtime/components/_base.js"],"sourcesContent":["import { computed } from \"vue\";\nimport { parseSize } from \"../utils/index.js\";\nimport { useImage } from \"#imports\";\nexport const baseImageProps = {\n  // input source\n  src: { type: String, required: false },\n  // modifiers\n  format: { type: String, required: false },\n  quality: { type: [Number, String], required: false },\n  background: { type: String, required: false },\n  fit: { type: String, required: false },\n  modifiers: { type: Object, required: false },\n  // options\n  preset: { type: String, required: false },\n  provider: { type: String, required: false },\n  sizes: { type: [Object, String], required: false },\n  densities: { type: String, required: false },\n  preload: {\n    type: [Boolean, Object],\n    required: false\n  },\n  // <img> attributes\n  width: { type: [String, Number], required: false },\n  height: { type: [String, Number], required: false },\n  alt: { type: String, required: false },\n  referrerpolicy: { type: String, required: false },\n  usemap: { type: String, required: false },\n  longdesc: { type: String, required: false },\n  ismap: { type: Boolean, required: false },\n  loading: {\n    type: String,\n    required: false,\n    validator: (val) => [\"lazy\", \"eager\"].includes(val)\n  },\n  crossorigin: {\n    type: [Boolean, String],\n    required: false,\n    validator: (val) => [\"anonymous\", \"use-credentials\", \"\", true, false].includes(val)\n  },\n  decoding: {\n    type: String,\n    required: false,\n    validator: (val) => [\"async\", \"auto\", \"sync\"].includes(val)\n  },\n  // csp\n  nonce: { type: [String], required: false }\n};\nexport const useBaseImage = (props) => {\n  const options = computed(() => {\n    return {\n      provider: props.provider,\n      preset: props.preset\n    };\n  });\n  const attrs = computed(() => {\n    return {\n      width: parseSize(props.width),\n      height: parseSize(props.height),\n      alt: props.alt,\n      referrerpolicy: props.referrerpolicy,\n      usemap: props.usemap,\n      longdesc: props.longdesc,\n      ismap: props.ismap,\n      crossorigin: props.crossorigin === true ? \"anonymous\" : props.crossorigin || void 0,\n      loading: props.loading,\n      decoding: props.decoding,\n      nonce: props.nonce\n    };\n  });\n  const $img = useImage();\n  const modifiers = computed(() => {\n    return {\n      ...props.modifiers,\n      width: parseSize(props.width),\n      height: parseSize(props.height),\n      format: props.format,\n      quality: props.quality || $img.options.quality,\n      background: props.background,\n      fit: props.fit\n    };\n  });\n  return {\n    options,\n    attrs,\n    modifiers\n  };\n};\nexport const pictureProps = {\n  ...baseImageProps,\n  legacyFormat: { type: String, default: null },\n  imgAttrs: { type: Object, default: null }\n};\nexport const imgProps = {\n  ...baseImageProps,\n  placeholder: { type: [Boolean, String, Number, Array], required: false },\n  placeholderClass: { type: String, required: false },\n  custom: { type: Boolean, required: false }\n};\n"],"version":3}