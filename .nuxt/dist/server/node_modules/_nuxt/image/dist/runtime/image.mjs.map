{"version":3,"file":"image.mjs","sources":["../../../../../../../../node_modules/@nuxt/image/dist/runtime/image.js"],"sourcesContent":["import { defu } from \"defu\";\nimport { hasProtocol, parseURL, joinURL, withLeadingSlash } from \"ufo\";\nimport { imageMeta } from \"./utils/meta.js\";\nimport { checkDensities, parseDensities, parseSize, parseSizes } from \"./utils/index.js\";\nimport { prerenderStaticImages } from \"./utils/prerender.js\";\nexport function createImage(globalOptions) {\n  const ctx = {\n    options: globalOptions\n  };\n  const getImage = (input, options = {}) => {\n    const image = resolveImage(ctx, input, options);\n    if (import.meta.server && import.meta.prerender) {\n      prerenderStaticImages(image.url);\n    }\n    return image;\n  };\n  const $img = (input, modifiers = {}, options = {}) => {\n    return getImage(input, {\n      ...options,\n      modifiers: defu(modifiers, options.modifiers || {})\n    }).url;\n  };\n  for (const presetName in globalOptions.presets) {\n    $img[presetName] = (source, modifiers, options) => $img(source, modifiers, { ...globalOptions.presets[presetName], ...options });\n  }\n  $img.options = globalOptions;\n  $img.getImage = getImage;\n  $img.getMeta = (input, options) => getMeta(ctx, input, options);\n  $img.getSizes = (input, options) => getSizes(ctx, input, options);\n  ctx.$img = $img;\n  return $img;\n}\nasync function getMeta(ctx, input, options) {\n  const image = resolveImage(ctx, input, { ...options });\n  if (typeof image.getMeta === \"function\") {\n    return await image.getMeta();\n  } else {\n    return await imageMeta(ctx, image.url);\n  }\n}\nfunction resolveImage(ctx, input, options) {\n  if (input && typeof input !== \"string\") {\n    throw new TypeError(`input must be a string (received ${typeof input}: ${JSON.stringify(input)})`);\n  }\n  if (!input || input.startsWith(\"data:\")) {\n    return {\n      url: input\n    };\n  }\n  const { provider, defaults } = getProvider(ctx, options.provider || ctx.options.provider);\n  const preset = getPreset(ctx, options.preset);\n  input = hasProtocol(input) ? input : withLeadingSlash(input);\n  if (!provider.supportsAlias) {\n    for (const base in ctx.options.alias) {\n      if (input.startsWith(base)) {\n        const alias = ctx.options.alias[base];\n        if (alias) {\n          input = joinURL(alias, input.slice(base.length));\n        }\n      }\n    }\n  }\n  if (provider.validateDomains && hasProtocol(input)) {\n    const inputHost = parseURL(input).host;\n    if (!ctx.options.domains.find((d) => d === inputHost)) {\n      return {\n        url: input\n      };\n    }\n  }\n  const _options = defu(options, preset, defaults);\n  _options.modifiers = { ..._options.modifiers };\n  const expectedFormat = _options.modifiers.format;\n  if (_options.modifiers?.width) {\n    _options.modifiers.width = parseSize(_options.modifiers.width);\n  }\n  if (_options.modifiers?.height) {\n    _options.modifiers.height = parseSize(_options.modifiers.height);\n  }\n  const image = provider.getImage(input, _options, ctx);\n  image.format = image.format || expectedFormat || \"\";\n  return image;\n}\nfunction getProvider(ctx, name) {\n  const provider = ctx.options.providers[name];\n  if (!provider) {\n    throw new Error(\"Unknown provider: \" + name);\n  }\n  return provider;\n}\nfunction getPreset(ctx, name) {\n  if (!name) {\n    return {};\n  }\n  if (!ctx.options.presets[name]) {\n    throw new Error(\"Unknown preset: \" + name);\n  }\n  return ctx.options.presets[name];\n}\nfunction getSizes(ctx, input, opts) {\n  const width = parseSize(opts.modifiers?.width);\n  const height = parseSize(opts.modifiers?.height);\n  const sizes = parseSizes(opts.sizes);\n  const densities = opts.densities?.trim() ? parseDensities(opts.densities.trim()) : ctx.options.densities;\n  checkDensities(densities);\n  const hwRatio = width && height ? height / width : 0;\n  const sizeVariants = [];\n  const srcsetVariants = [];\n  if (Object.keys(sizes).length >= 1) {\n    for (const key in sizes) {\n      const variant = getSizesVariant(key, String(sizes[key]), height, hwRatio, ctx);\n      if (variant === void 0) {\n        continue;\n      }\n      sizeVariants.push({\n        size: variant.size,\n        screenMaxWidth: variant.screenMaxWidth,\n        media: `(max-width: ${variant.screenMaxWidth}px)`\n      });\n      for (const density of densities) {\n        srcsetVariants.push({\n          width: variant._cWidth * density,\n          src: getVariantSrc(ctx, input, opts, variant, density)\n        });\n      }\n    }\n    finaliseSizeVariants(sizeVariants);\n  } else {\n    for (const density of densities) {\n      const key = Object.keys(sizes)[0];\n      let variant = key ? getSizesVariant(key, String(sizes[key]), height, hwRatio, ctx) : void 0;\n      if (variant === void 0) {\n        variant = {\n          size: \"\",\n          screenMaxWidth: 0,\n          _cWidth: opts.modifiers?.width,\n          _cHeight: opts.modifiers?.height\n        };\n      }\n      srcsetVariants.push({\n        width: density,\n        src: getVariantSrc(ctx, input, opts, variant, density)\n      });\n    }\n  }\n  finaliseSrcsetVariants(srcsetVariants);\n  const defaultVariant = srcsetVariants[srcsetVariants.length - 1];\n  const sizesVal = sizeVariants.length ? sizeVariants.map((v) => `${v.media ? v.media + \" \" : \"\"}${v.size}`).join(\", \") : void 0;\n  const suffix = sizesVal ? \"w\" : \"x\";\n  const srcsetVal = srcsetVariants.map((v) => `${v.src} ${v.width}${suffix}`).join(\", \");\n  return {\n    sizes: sizesVal,\n    srcset: srcsetVal,\n    src: defaultVariant?.src\n  };\n}\nfunction getSizesVariant(key, size, height, hwRatio, ctx) {\n  const screenMaxWidth = ctx.options.screens && ctx.options.screens[key] || Number.parseInt(key);\n  const isFluid = size.endsWith(\"vw\");\n  if (!isFluid && /^\\d+$/.test(size)) {\n    size = size + \"px\";\n  }\n  if (!isFluid && !size.endsWith(\"px\")) {\n    return void 0;\n  }\n  let _cWidth = Number.parseInt(size);\n  if (!screenMaxWidth || !_cWidth) {\n    return void 0;\n  }\n  if (isFluid) {\n    _cWidth = Math.round(_cWidth / 100 * screenMaxWidth);\n  }\n  const _cHeight = hwRatio ? Math.round(_cWidth * hwRatio) : height;\n  return {\n    size,\n    screenMaxWidth,\n    _cWidth,\n    _cHeight\n  };\n}\nfunction getVariantSrc(ctx, input, opts, variant, density) {\n  return ctx.$img(\n    input,\n    {\n      ...opts.modifiers,\n      width: variant._cWidth ? variant._cWidth * density : void 0,\n      height: variant._cHeight ? variant._cHeight * density : void 0\n    },\n    opts\n  );\n}\nfunction finaliseSizeVariants(sizeVariants) {\n  sizeVariants.sort((v1, v2) => v1.screenMaxWidth - v2.screenMaxWidth);\n  let previousMedia = null;\n  for (let i = sizeVariants.length - 1; i >= 0; i--) {\n    const sizeVariant = sizeVariants[i];\n    if (sizeVariant.media === previousMedia) {\n      sizeVariants.splice(i, 1);\n    }\n    previousMedia = sizeVariant.media;\n  }\n  for (let i = 0; i < sizeVariants.length; i++) {\n    sizeVariants[i].media = sizeVariants[i + 1]?.media || \"\";\n  }\n}\nfunction finaliseSrcsetVariants(srcsetVariants) {\n  srcsetVariants.sort((v1, v2) => v1.width - v2.width);\n  let previousWidth = null;\n  for (let i = srcsetVariants.length - 1; i >= 0; i--) {\n    const sizeVariant = srcsetVariants[i];\n    if (sizeVariant.width === previousWidth) {\n      srcsetVariants.splice(i, 1);\n    }\n    previousWidth = sizeVariant.width;\n  }\n}\n"],"names":["createImage","globalOptions","ctx","getImage","input","options","image","resolveImage","prerenderStaticImages","$img","modifiers","defu","presetName","source","getMeta","getSizes","imageMeta","provider","defaults","getProvider","preset","getPreset","hasProtocol","withLeadingSlash","base","alias","joinURL","inputHost","parseURL","d","_options","expectedFormat","_a","parseSize","_b","name","opts","width","height","sizes","parseSizes","densities","_c","parseDensities","checkDensities","hwRatio","sizeVariants","srcsetVariants","key","variant","getSizesVariant","density","getVariantSrc","finaliseSizeVariants","_d","_e","finaliseSrcsetVariants","defaultVariant","sizesVal","v","suffix","srcsetVal","size","screenMaxWidth","isFluid","_cWidth","_cHeight","v1","v2","previousMedia","i","sizeVariant","previousWidth"],"mappings":"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","x_google_ignoreList":[0]}