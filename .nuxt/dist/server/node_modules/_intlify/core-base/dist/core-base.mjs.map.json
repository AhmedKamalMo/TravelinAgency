{"file":"core-base.mjs","mappings":"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","names":["initFeatureFlags","getGlobalThis","isMessageAST","val","isObject","resolveType","hasOwn","PROPS_BODY","resolveBody","node","resolveProps","PROPS_CASES","resolveCases","PROPS_STATIC","resolveStatic","PROPS_ITEMS","resolveItems","PROPS_TYPE","PROPS_VALUE","resolveValue$1","type","resolved","createUnhandleNodeError","PROPS_MODIFIER","resolveLinkedModifier","PROPS_KEY","resolveLinkedKey","props","defaultValue","i","prop","AST_NODE_PROPS_KEYS","pathStateMachine","literalValueRE","isLiteral","exp","stripQuotes","str","a","b","getPathCharType","ch","formatSubPath","path","trimmed","parse","keys","index","mode","subPathDepth","c","key","newChar","transition","action","typeMap","actions","maybeUnescapeQuote","nextChar","cache","resolveWithKeyValue","obj","resolveValue","hit","len","last","isFunction","DEFAULT_MODIFIER","DEFAULT_MESSAGE","ctx","DEFAULT_MESSAGE_DATA_TYPE","DEFAULT_NORMALIZE","values","join","DEFAULT_INTERPOLATE","toDisplayString","pluralDefault","choice","choicesLength","getPluralIndex","options","isNumber","normalizeNamed","pluralIndex","createMessageContext","locale","pluralRule","isString","orgPluralRule","plural","messages","_list","list","_named","create","named","message","msg","_modifier","name","normalize","isPlainObject","interpolate","args","arg1","arg2","modifier","ret","isArray","assign","devtools","setDevToolsHook","hook","initI18nDevTools","i18n","version","meta","translateDevTools","createDevToolsHook","payloads","code$1","CompileWarnCodes","inc$1","incrementer","CoreWarnCodes","warnMessages","getWarnMessage","code","format$1","CompileErrorCodes","inc","CoreErrorCodes","createCoreError","createCompileError","errorMessages","getLocale","context","resolveLocale","_resolveLocale","resolve","isPromise","fallbackWithSimple","fallback","start","fallbackWithLocaleChain","startLocale","DEFAULT_LOCALE","chain","block","appendBlockToChain","defaults","blocks","follow","isBoolean","appendLocaleToChain","tokens","target","appendItemToChain","VERSION","NOT_REOSLVED","MISSING_RESOLVE_VALUE","capitalize","getDefaultLinkedModifiers","_compiler","registerMessageCompiler","compiler","_resolver","registerMessageResolver","resolver","_fallbacker","registerLocaleFallbacker","fallbacker","_additionalMeta","setAdditionalMeta","getAdditionalMeta","_fallbackContext","setFallbackContext","getFallbackContext","_cid","createCoreContext","onWarn","warn","_locale","fallbackLocale","createResources","datetimeFormats","numberFormats","modifiers","pluralRules","missing","missingWarn","isRegExp","fallbackWarn","fallbackFormat","unresolving","postTranslation","processor","warnHtmlMessage","escapeParameter","messageCompiler","warnOnce","messageResolver","localeFallbacker","fallbackContext","internalOptions","__datetimeFormatters","__numberFormatters","__meta","isTranslateFallbackWarn","isTranslateMissingWarn","handleMissing","emitter","updateFallbackLocale","isAlmostSameLocale","compareLocale","isImplicitFallback","targetLocale","locales","format","ast","formatParts","body","cases","formatMessageParts","static_","acm","formatMessagePart","linked","WARN_MESSAGE","checkHtmlMessage","source","detectHtmlTag","defaultOnCacheKey","compileCache","onCompileWarn","_warn","baseCompile","detectError","onError","defaultOnError","err","baseCompile$1","compile","cacheKey","cached","NOOP_MESSAGE_FUNCTION","isMessageFunction","translate","parseTranslateArgs","resolvedMessage","defaultMsgOrKey","enableDefaultMsg","escapeParams","formatScope","resolveMessageFormat","cacheBaseKey","occurred","compileMessageFormat","ctxOptions","getMessageContextOptions","msgContext","messaged","evaluateMessage","item","escapeHtml","from","to","inBrowser","missingRet","getCompileContext","msgCtx","arg3","isEmptyObject","_source","getSourceForCodeFrame","codeFrame","generateCodeFrame","generateFormatCacheKey","intlDefined","Availabilities","datetime","value","overrides","parseDateTimeArgs","part","datetimeFormat","id","formatter","DATETIME_FORMAT_OPTIONS_KEYS","arg4","matches","dateTime","isDate","clearDateTimeFormat","number","parseNumberArgs","numberFormat","NUMBER_FORMAT_OPTIONS_KEYS","clearNumberFormat"],"sources":["../../../../../../../node_modules/@intlify/core-base/dist/core-base.mjs"],"sourcesContent":["/*!\n  * core-base v9.14.4\n  * (c) 2025 kazuya kawaguchi\n  * Released under the MIT License.\n  */\nimport { getGlobalThis, isObject, hasOwn, isFunction, isString, create, isNumber, isPlainObject, assign, join, toDisplayString, isArray, incrementer, format as format$1, isPromise, isBoolean, warn, isRegExp, warnOnce, escapeHtml, inBrowser, mark, measure, isEmptyObject, generateCodeFrame, generateFormatCacheKey, isDate } from '@intlify/shared';\nimport { CompileWarnCodes, CompileErrorCodes, createCompileError, detectHtmlTag, defaultOnError, baseCompile as baseCompile$1 } from '@intlify/message-compiler';\nexport { CompileErrorCodes, createCompileError } from '@intlify/message-compiler';\n\n/**\n * This is only called in esm-bundler builds.\n * istanbul-ignore-next\n */\nfunction initFeatureFlags() {\n    if (typeof __INTLIFY_PROD_DEVTOOLS__ !== 'boolean') {\n        getGlobalThis().__INTLIFY_PROD_DEVTOOLS__ = false;\n    }\n    if (typeof __INTLIFY_JIT_COMPILATION__ !== 'boolean') {\n        getGlobalThis().__INTLIFY_JIT_COMPILATION__ = false;\n    }\n    if (typeof __INTLIFY_DROP_MESSAGE_COMPILER__ !== 'boolean') {\n        getGlobalThis().__INTLIFY_DROP_MESSAGE_COMPILER__ = false;\n    }\n}\n\nfunction isMessageAST(val) {\n    return (isObject(val) &&\n        resolveType(val) === 0 &&\n        (hasOwn(val, 'b') || hasOwn(val, 'body')));\n}\nconst PROPS_BODY = ['b', 'body'];\nfunction resolveBody(node) {\n    return resolveProps(node, PROPS_BODY);\n}\nconst PROPS_CASES = ['c', 'cases'];\nfunction resolveCases(node) {\n    return resolveProps(node, PROPS_CASES, []);\n}\nconst PROPS_STATIC = ['s', 'static'];\nfunction resolveStatic(node) {\n    return resolveProps(node, PROPS_STATIC);\n}\nconst PROPS_ITEMS = ['i', 'items'];\nfunction resolveItems(node) {\n    return resolveProps(node, PROPS_ITEMS, []);\n}\nconst PROPS_TYPE = ['t', 'type'];\nfunction resolveType(node) {\n    return resolveProps(node, PROPS_TYPE);\n}\nconst PROPS_VALUE = ['v', 'value'];\nfunction resolveValue$1(node, type) {\n    const resolved = resolveProps(node, PROPS_VALUE);\n    if (resolved != null) {\n        return resolved;\n    }\n    else {\n        throw createUnhandleNodeError(type);\n    }\n}\nconst PROPS_MODIFIER = ['m', 'modifier'];\nfunction resolveLinkedModifier(node) {\n    return resolveProps(node, PROPS_MODIFIER);\n}\nconst PROPS_KEY = ['k', 'key'];\nfunction resolveLinkedKey(node) {\n    const resolved = resolveProps(node, PROPS_KEY);\n    if (resolved) {\n        return resolved;\n    }\n    else {\n        throw createUnhandleNodeError(6 /* NodeTypes.Linked */);\n    }\n}\nfunction resolveProps(node, props, defaultValue) {\n    for (let i = 0; i < props.length; i++) {\n        const prop = props[i];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if (hasOwn(node, prop) && node[prop] != null) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            return node[prop];\n        }\n    }\n    return defaultValue;\n}\nconst AST_NODE_PROPS_KEYS = [\n    ...PROPS_BODY,\n    ...PROPS_CASES,\n    ...PROPS_STATIC,\n    ...PROPS_ITEMS,\n    ...PROPS_KEY,\n    ...PROPS_MODIFIER,\n    ...PROPS_VALUE,\n    ...PROPS_TYPE\n];\nfunction createUnhandleNodeError(type) {\n    return new Error(`unhandled node type: ${type}`);\n}\n\nconst pathStateMachine =  [];\npathStateMachine[0 /* States.BEFORE_PATH */] = {\n    [\"w\" /* PathCharTypes.WORKSPACE */]: [0 /* States.BEFORE_PATH */],\n    [\"i\" /* PathCharTypes.IDENT */]: [3 /* States.IN_IDENT */, 0 /* Actions.APPEND */],\n    [\"[\" /* PathCharTypes.LEFT_BRACKET */]: [4 /* States.IN_SUB_PATH */],\n    [\"o\" /* PathCharTypes.END_OF_FAIL */]: [7 /* States.AFTER_PATH */]\n};\npathStateMachine[1 /* States.IN_PATH */] = {\n    [\"w\" /* PathCharTypes.WORKSPACE */]: [1 /* States.IN_PATH */],\n    [\".\" /* PathCharTypes.DOT */]: [2 /* States.BEFORE_IDENT */],\n    [\"[\" /* PathCharTypes.LEFT_BRACKET */]: [4 /* States.IN_SUB_PATH */],\n    [\"o\" /* PathCharTypes.END_OF_FAIL */]: [7 /* States.AFTER_PATH */]\n};\npathStateMachine[2 /* States.BEFORE_IDENT */] = {\n    [\"w\" /* PathCharTypes.WORKSPACE */]: [2 /* States.BEFORE_IDENT */],\n    [\"i\" /* PathCharTypes.IDENT */]: [3 /* States.IN_IDENT */, 0 /* Actions.APPEND */],\n    [\"0\" /* PathCharTypes.ZERO */]: [3 /* States.IN_IDENT */, 0 /* Actions.APPEND */]\n};\npathStateMachine[3 /* States.IN_IDENT */] = {\n    [\"i\" /* PathCharTypes.IDENT */]: [3 /* States.IN_IDENT */, 0 /* Actions.APPEND */],\n    [\"0\" /* PathCharTypes.ZERO */]: [3 /* States.IN_IDENT */, 0 /* Actions.APPEND */],\n    [\"w\" /* PathCharTypes.WORKSPACE */]: [1 /* States.IN_PATH */, 1 /* Actions.PUSH */],\n    [\".\" /* PathCharTypes.DOT */]: [2 /* States.BEFORE_IDENT */, 1 /* Actions.PUSH */],\n    [\"[\" /* PathCharTypes.LEFT_BRACKET */]: [4 /* States.IN_SUB_PATH */, 1 /* Actions.PUSH */],\n    [\"o\" /* PathCharTypes.END_OF_FAIL */]: [7 /* States.AFTER_PATH */, 1 /* Actions.PUSH */]\n};\npathStateMachine[4 /* States.IN_SUB_PATH */] = {\n    [\"'\" /* PathCharTypes.SINGLE_QUOTE */]: [5 /* States.IN_SINGLE_QUOTE */, 0 /* Actions.APPEND */],\n    [\"\\\"\" /* PathCharTypes.DOUBLE_QUOTE */]: [6 /* States.IN_DOUBLE_QUOTE */, 0 /* Actions.APPEND */],\n    [\"[\" /* PathCharTypes.LEFT_BRACKET */]: [\n        4 /* States.IN_SUB_PATH */,\n        2 /* Actions.INC_SUB_PATH_DEPTH */\n    ],\n    [\"]\" /* PathCharTypes.RIGHT_BRACKET */]: [1 /* States.IN_PATH */, 3 /* Actions.PUSH_SUB_PATH */],\n    [\"o\" /* PathCharTypes.END_OF_FAIL */]: 8 /* States.ERROR */,\n    [\"l\" /* PathCharTypes.ELSE */]: [4 /* States.IN_SUB_PATH */, 0 /* Actions.APPEND */]\n};\npathStateMachine[5 /* States.IN_SINGLE_QUOTE */] = {\n    [\"'\" /* PathCharTypes.SINGLE_QUOTE */]: [4 /* States.IN_SUB_PATH */, 0 /* Actions.APPEND */],\n    [\"o\" /* PathCharTypes.END_OF_FAIL */]: 8 /* States.ERROR */,\n    [\"l\" /* PathCharTypes.ELSE */]: [5 /* States.IN_SINGLE_QUOTE */, 0 /* Actions.APPEND */]\n};\npathStateMachine[6 /* States.IN_DOUBLE_QUOTE */] = {\n    [\"\\\"\" /* PathCharTypes.DOUBLE_QUOTE */]: [4 /* States.IN_SUB_PATH */, 0 /* Actions.APPEND */],\n    [\"o\" /* PathCharTypes.END_OF_FAIL */]: 8 /* States.ERROR */,\n    [\"l\" /* PathCharTypes.ELSE */]: [6 /* States.IN_DOUBLE_QUOTE */, 0 /* Actions.APPEND */]\n};\n/**\n * Check if an expression is a literal value.\n */\nconst literalValueRE = /^\\s?(?:true|false|-?[\\d.]+|'[^']*'|\"[^\"]*\")\\s?$/;\nfunction isLiteral(exp) {\n    return literalValueRE.test(exp);\n}\n/**\n * Strip quotes from a string\n */\nfunction stripQuotes(str) {\n    const a = str.charCodeAt(0);\n    const b = str.charCodeAt(str.length - 1);\n    return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n}\n/**\n * Determine the type of a character in a keypath.\n */\nfunction getPathCharType(ch) {\n    if (ch === undefined || ch === null) {\n        return \"o\" /* PathCharTypes.END_OF_FAIL */;\n    }\n    const code = ch.charCodeAt(0);\n    switch (code) {\n        case 0x5b: // [\n        case 0x5d: // ]\n        case 0x2e: // .\n        case 0x22: // \"\n        case 0x27: // '\n            return ch;\n        case 0x5f: // _\n        case 0x24: // $\n        case 0x2d: // -\n            return \"i\" /* PathCharTypes.IDENT */;\n        case 0x09: // Tab (HT)\n        case 0x0a: // Newline (LF)\n        case 0x0d: // Return (CR)\n        case 0xa0: // No-break space (NBSP)\n        case 0xfeff: // Byte Order Mark (BOM)\n        case 0x2028: // Line Separator (LS)\n        case 0x2029: // Paragraph Separator (PS)\n            return \"w\" /* PathCharTypes.WORKSPACE */;\n    }\n    return \"i\" /* PathCharTypes.IDENT */;\n}\n/**\n * Format a subPath, return its plain form if it is\n * a literal string or number. Otherwise prepend the\n * dynamic indicator (*).\n */\nfunction formatSubPath(path) {\n    const trimmed = path.trim();\n    // invalid leading 0\n    if (path.charAt(0) === '0' && isNaN(parseInt(path))) {\n        return false;\n    }\n    return isLiteral(trimmed)\n        ? stripQuotes(trimmed)\n        : \"*\" /* PathCharTypes.ASTARISK */ + trimmed;\n}\n/**\n * Parse a string path into an array of segments\n */\nfunction parse(path) {\n    const keys = [];\n    let index = -1;\n    let mode = 0 /* States.BEFORE_PATH */;\n    let subPathDepth = 0;\n    let c;\n    let key; // eslint-disable-line\n    let newChar;\n    let type;\n    let transition;\n    let action;\n    let typeMap;\n    const actions = [];\n    actions[0 /* Actions.APPEND */] = () => {\n        if (key === undefined) {\n            key = newChar;\n        }\n        else {\n            key += newChar;\n        }\n    };\n    actions[1 /* Actions.PUSH */] = () => {\n        if (key !== undefined) {\n            keys.push(key);\n            key = undefined;\n        }\n    };\n    actions[2 /* Actions.INC_SUB_PATH_DEPTH */] = () => {\n        actions[0 /* Actions.APPEND */]();\n        subPathDepth++;\n    };\n    actions[3 /* Actions.PUSH_SUB_PATH */] = () => {\n        if (subPathDepth > 0) {\n            subPathDepth--;\n            mode = 4 /* States.IN_SUB_PATH */;\n            actions[0 /* Actions.APPEND */]();\n        }\n        else {\n            subPathDepth = 0;\n            if (key === undefined) {\n                return false;\n            }\n            key = formatSubPath(key);\n            if (key === false) {\n                return false;\n            }\n            else {\n                actions[1 /* Actions.PUSH */]();\n            }\n        }\n    };\n    function maybeUnescapeQuote() {\n        const nextChar = path[index + 1];\n        if ((mode === 5 /* States.IN_SINGLE_QUOTE */ &&\n            nextChar === \"'\" /* PathCharTypes.SINGLE_QUOTE */) ||\n            (mode === 6 /* States.IN_DOUBLE_QUOTE */ &&\n                nextChar === \"\\\"\" /* PathCharTypes.DOUBLE_QUOTE */)) {\n            index++;\n            newChar = '\\\\' + nextChar;\n            actions[0 /* Actions.APPEND */]();\n            return true;\n        }\n    }\n    while (mode !== null) {\n        index++;\n        c = path[index];\n        if (c === '\\\\' && maybeUnescapeQuote()) {\n            continue;\n        }\n        type = getPathCharType(c);\n        typeMap = pathStateMachine[mode];\n        transition = typeMap[type] || typeMap[\"l\" /* PathCharTypes.ELSE */] || 8 /* States.ERROR */;\n        // check parse error\n        if (transition === 8 /* States.ERROR */) {\n            return;\n        }\n        mode = transition[0];\n        if (transition[1] !== undefined) {\n            action = actions[transition[1]];\n            if (action) {\n                newChar = c;\n                if (action() === false) {\n                    return;\n                }\n            }\n        }\n        // check parse finish\n        if (mode === 7 /* States.AFTER_PATH */) {\n            return keys;\n        }\n    }\n}\n// path token cache\nconst cache = new Map();\n/**\n * key-value message resolver\n *\n * @remarks\n * Resolves messages with the key-value structure. Note that messages with a hierarchical structure such as objects cannot be resolved\n *\n * @param obj - A target object to be resolved with path\n * @param path - A {@link Path | path} to resolve the value of message\n *\n * @returns A resolved {@link PathValue | path value}\n *\n * @VueI18nGeneral\n */\nfunction resolveWithKeyValue(obj, path) {\n    return isObject(obj) ? obj[path] : null;\n}\n/**\n * message resolver\n *\n * @remarks\n * Resolves messages. messages with a hierarchical structure such as objects can be resolved. This resolver is used in VueI18n as default.\n *\n * @param obj - A target object to be resolved with path\n * @param path - A {@link Path | path} to resolve the value of message\n *\n * @returns A resolved {@link PathValue | path value}\n *\n * @VueI18nGeneral\n */\nfunction resolveValue(obj, path) {\n    // check object\n    if (!isObject(obj)) {\n        return null;\n    }\n    // parse path\n    let hit = cache.get(path);\n    if (!hit) {\n        hit = parse(path);\n        if (hit) {\n            cache.set(path, hit);\n        }\n    }\n    // check hit\n    if (!hit) {\n        return null;\n    }\n    // resolve path value\n    const len = hit.length;\n    let last = obj;\n    let i = 0;\n    while (i < len) {\n        const key = hit[i];\n        /**\n         * NOTE:\n         * if `key` is intlify message format AST node key and `last` is intlify message format AST, skip it.\n         * because the AST node is not a key-value structure.\n         */\n        if (AST_NODE_PROPS_KEYS.includes(key) && isMessageAST(last)) {\n            return null;\n        }\n        const val = last[key];\n        if (val === undefined) {\n            return null;\n        }\n        if (isFunction(last)) {\n            return null;\n        }\n        last = val;\n        i++;\n    }\n    return last;\n}\n\nconst DEFAULT_MODIFIER = (str) => str;\nconst DEFAULT_MESSAGE = (ctx) => ''; // eslint-disable-line\nconst DEFAULT_MESSAGE_DATA_TYPE = 'text';\nconst DEFAULT_NORMALIZE = (values) => values.length === 0 ? '' : join(values);\nconst DEFAULT_INTERPOLATE = toDisplayString;\nfunction pluralDefault(choice, choicesLength) {\n    choice = Math.abs(choice);\n    if (choicesLength === 2) {\n        // prettier-ignore\n        return choice\n            ? choice > 1\n                ? 1\n                : 0\n            : 1;\n    }\n    return choice ? Math.min(choice, 2) : 0;\n}\nfunction getPluralIndex(options) {\n    // prettier-ignore\n    const index = isNumber(options.pluralIndex)\n        ? options.pluralIndex\n        : -1;\n    // prettier-ignore\n    return options.named && (isNumber(options.named.count) || isNumber(options.named.n))\n        ? isNumber(options.named.count)\n            ? options.named.count\n            : isNumber(options.named.n)\n                ? options.named.n\n                : index\n        : index;\n}\nfunction normalizeNamed(pluralIndex, props) {\n    if (!props.count) {\n        props.count = pluralIndex;\n    }\n    if (!props.n) {\n        props.n = pluralIndex;\n    }\n}\nfunction createMessageContext(options = {}) {\n    const locale = options.locale;\n    const pluralIndex = getPluralIndex(options);\n    const pluralRule = isObject(options.pluralRules) &&\n        isString(locale) &&\n        isFunction(options.pluralRules[locale])\n        ? options.pluralRules[locale]\n        : pluralDefault;\n    const orgPluralRule = isObject(options.pluralRules) &&\n        isString(locale) &&\n        isFunction(options.pluralRules[locale])\n        ? pluralDefault\n        : undefined;\n    const plural = (messages) => {\n        return messages[pluralRule(pluralIndex, messages.length, orgPluralRule)];\n    };\n    const _list = options.list || [];\n    const list = (index) => _list[index];\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const _named = options.named || create();\n    isNumber(options.pluralIndex) && normalizeNamed(pluralIndex, _named);\n    const named = (key) => _named[key];\n    function message(key) {\n        // prettier-ignore\n        const msg = isFunction(options.messages)\n            ? options.messages(key)\n            : isObject(options.messages)\n                ? options.messages[key]\n                : false;\n        return !msg\n            ? options.parent\n                ? options.parent.message(key) // resolve from parent messages\n                : DEFAULT_MESSAGE\n            : msg;\n    }\n    const _modifier = (name) => options.modifiers\n        ? options.modifiers[name]\n        : DEFAULT_MODIFIER;\n    const normalize = isPlainObject(options.processor) && isFunction(options.processor.normalize)\n        ? options.processor.normalize\n        : DEFAULT_NORMALIZE;\n    const interpolate = isPlainObject(options.processor) &&\n        isFunction(options.processor.interpolate)\n        ? options.processor.interpolate\n        : DEFAULT_INTERPOLATE;\n    const type = isPlainObject(options.processor) && isString(options.processor.type)\n        ? options.processor.type\n        : DEFAULT_MESSAGE_DATA_TYPE;\n    const linked = (key, ...args) => {\n        const [arg1, arg2] = args;\n        let type = 'text';\n        let modifier = '';\n        if (args.length === 1) {\n            if (isObject(arg1)) {\n                modifier = arg1.modifier || modifier;\n                type = arg1.type || type;\n            }\n            else if (isString(arg1)) {\n                modifier = arg1 || modifier;\n            }\n        }\n        else if (args.length === 2) {\n            if (isString(arg1)) {\n                modifier = arg1 || modifier;\n            }\n            if (isString(arg2)) {\n                type = arg2 || type;\n            }\n        }\n        const ret = message(key)(ctx);\n        const msg = \n        // The message in vnode resolved with linked are returned as an array by processor.nomalize\n        type === 'vnode' && isArray(ret) && modifier\n            ? ret[0]\n            : ret;\n        return modifier ? _modifier(modifier)(msg, type) : msg;\n    };\n    const ctx = {\n        [\"list\" /* HelperNameMap.LIST */]: list,\n        [\"named\" /* HelperNameMap.NAMED */]: named,\n        [\"plural\" /* HelperNameMap.PLURAL */]: plural,\n        [\"linked\" /* HelperNameMap.LINKED */]: linked,\n        [\"message\" /* HelperNameMap.MESSAGE */]: message,\n        [\"type\" /* HelperNameMap.TYPE */]: type,\n        [\"interpolate\" /* HelperNameMap.INTERPOLATE */]: interpolate,\n        [\"normalize\" /* HelperNameMap.NORMALIZE */]: normalize,\n        [\"values\" /* HelperNameMap.VALUES */]: assign(create(), _list, _named)\n    };\n    return ctx;\n}\n\nlet devtools = null;\nfunction setDevToolsHook(hook) {\n    devtools = hook;\n}\nfunction getDevToolsHook() {\n    return devtools;\n}\nfunction initI18nDevTools(i18n, version, meta) {\n    // TODO: queue if devtools is undefined\n    devtools &&\n        devtools.emit(\"i18n:init\" /* IntlifyDevToolsHooks.I18nInit */, {\n            timestamp: Date.now(),\n            i18n,\n            version,\n            meta\n        });\n}\nconst translateDevTools = /* #__PURE__*/ createDevToolsHook(\"function:translate\" /* IntlifyDevToolsHooks.FunctionTranslate */);\nfunction createDevToolsHook(hook) {\n    return (payloads) => devtools && devtools.emit(hook, payloads);\n}\n\nconst code$1 = CompileWarnCodes.__EXTEND_POINT__;\nconst inc$1 = incrementer(code$1);\nconst CoreWarnCodes = {\n    NOT_FOUND_KEY: code$1, // 2\n    FALLBACK_TO_TRANSLATE: inc$1(), // 3\n    CANNOT_FORMAT_NUMBER: inc$1(), // 4\n    FALLBACK_TO_NUMBER_FORMAT: inc$1(), // 5\n    CANNOT_FORMAT_DATE: inc$1(), // 6\n    FALLBACK_TO_DATE_FORMAT: inc$1(), // 7\n    EXPERIMENTAL_CUSTOM_MESSAGE_COMPILER: inc$1(), // 8\n    __EXTEND_POINT__: inc$1() // 9\n};\n/** @internal */\nconst warnMessages = {\n    [CoreWarnCodes.NOT_FOUND_KEY]: `Not found '{key}' key in '{locale}' locale messages.`,\n    [CoreWarnCodes.FALLBACK_TO_TRANSLATE]: `Fall back to translate '{key}' key with '{target}' locale.`,\n    [CoreWarnCodes.CANNOT_FORMAT_NUMBER]: `Cannot format a number value due to not supported Intl.NumberFormat.`,\n    [CoreWarnCodes.FALLBACK_TO_NUMBER_FORMAT]: `Fall back to number format '{key}' key with '{target}' locale.`,\n    [CoreWarnCodes.CANNOT_FORMAT_DATE]: `Cannot format a date value due to not supported Intl.DateTimeFormat.`,\n    [CoreWarnCodes.FALLBACK_TO_DATE_FORMAT]: `Fall back to datetime format '{key}' key with '{target}' locale.`,\n    [CoreWarnCodes.EXPERIMENTAL_CUSTOM_MESSAGE_COMPILER]: `This project is using Custom Message Compiler, which is an experimental feature. It may receive breaking changes or be removed in the future.`\n};\nfunction getWarnMessage(code, ...args) {\n    return format$1(warnMessages[code], ...args);\n}\n\nconst code = CompileErrorCodes.__EXTEND_POINT__;\nconst inc = incrementer(code);\nconst CoreErrorCodes = {\n    INVALID_ARGUMENT: code, // 17\n    INVALID_DATE_ARGUMENT: inc(), // 18\n    INVALID_ISO_DATE_ARGUMENT: inc(), // 19\n    NOT_SUPPORT_NON_STRING_MESSAGE: inc(), // 20\n    NOT_SUPPORT_LOCALE_PROMISE_VALUE: inc(), // 21\n    NOT_SUPPORT_LOCALE_ASYNC_FUNCTION: inc(), // 22\n    NOT_SUPPORT_LOCALE_TYPE: inc(), // 23\n    __EXTEND_POINT__: inc() // 24\n};\nfunction createCoreError(code) {\n    return createCompileError(code, null, (process.env.NODE_ENV !== 'production') ? { messages: errorMessages } : undefined);\n}\n/** @internal */\nconst errorMessages = {\n    [CoreErrorCodes.INVALID_ARGUMENT]: 'Invalid arguments',\n    [CoreErrorCodes.INVALID_DATE_ARGUMENT]: 'The date provided is an invalid Date object.' +\n        'Make sure your Date represents a valid date.',\n    [CoreErrorCodes.INVALID_ISO_DATE_ARGUMENT]: 'The argument provided is not a valid ISO date string',\n    [CoreErrorCodes.NOT_SUPPORT_NON_STRING_MESSAGE]: 'Not support non-string message',\n    [CoreErrorCodes.NOT_SUPPORT_LOCALE_PROMISE_VALUE]: 'cannot support promise value',\n    [CoreErrorCodes.NOT_SUPPORT_LOCALE_ASYNC_FUNCTION]: 'cannot support async function',\n    [CoreErrorCodes.NOT_SUPPORT_LOCALE_TYPE]: 'cannot support locale type'\n};\n\n/** @internal */\nfunction getLocale(context, options) {\n    return options.locale != null\n        ? resolveLocale(options.locale)\n        : resolveLocale(context.locale);\n}\nlet _resolveLocale;\n/** @internal */\nfunction resolveLocale(locale) {\n    if (isString(locale)) {\n        return locale;\n    }\n    else {\n        if (isFunction(locale)) {\n            if (locale.resolvedOnce && _resolveLocale != null) {\n                return _resolveLocale;\n            }\n            else if (locale.constructor.name === 'Function') {\n                const resolve = locale();\n                if (isPromise(resolve)) {\n                    throw createCoreError(CoreErrorCodes.NOT_SUPPORT_LOCALE_PROMISE_VALUE);\n                }\n                return (_resolveLocale = resolve);\n            }\n            else {\n                throw createCoreError(CoreErrorCodes.NOT_SUPPORT_LOCALE_ASYNC_FUNCTION);\n            }\n        }\n        else {\n            throw createCoreError(CoreErrorCodes.NOT_SUPPORT_LOCALE_TYPE);\n        }\n    }\n}\n/**\n * Fallback with simple implemenation\n *\n * @remarks\n * A fallback locale function implemented with a simple fallback algorithm.\n *\n * Basically, it returns the value as specified in the `fallbackLocale` props, and is processed with the fallback inside intlify.\n *\n * @param ctx - A {@link CoreContext | context}\n * @param fallback - A {@link FallbackLocale | fallback locale}\n * @param start - A starting {@link Locale | locale}\n *\n * @returns Fallback locales\n *\n * @VueI18nGeneral\n */\nfunction fallbackWithSimple(ctx, fallback, start // eslint-disable-line @typescript-eslint/no-unused-vars\n) {\n    // prettier-ignore\n    return [...new Set([\n            start,\n            ...(isArray(fallback)\n                ? fallback\n                : isObject(fallback)\n                    ? Object.keys(fallback)\n                    : isString(fallback)\n                        ? [fallback]\n                        : [start])\n        ])];\n}\n/**\n * Fallback with locale chain\n *\n * @remarks\n * A fallback locale function implemented with a fallback chain algorithm. It's used in VueI18n as default.\n *\n * @param ctx - A {@link CoreContext | context}\n * @param fallback - A {@link FallbackLocale | fallback locale}\n * @param start - A starting {@link Locale | locale}\n *\n * @returns Fallback locales\n *\n * @VueI18nSee [Fallbacking](../guide/essentials/fallback)\n *\n * @VueI18nGeneral\n */\nfunction fallbackWithLocaleChain(ctx, fallback, start) {\n    const startLocale = isString(start) ? start : DEFAULT_LOCALE;\n    const context = ctx;\n    if (!context.__localeChainCache) {\n        context.__localeChainCache = new Map();\n    }\n    let chain = context.__localeChainCache.get(startLocale);\n    if (!chain) {\n        chain = [];\n        // first block defined by start\n        let block = [start];\n        // while any intervening block found\n        while (isArray(block)) {\n            block = appendBlockToChain(chain, block, fallback);\n        }\n        // prettier-ignore\n        // last block defined by default\n        const defaults = isArray(fallback) || !isPlainObject(fallback)\n            ? fallback\n            : fallback['default']\n                ? fallback['default']\n                : null;\n        // convert defaults to array\n        block = isString(defaults) ? [defaults] : defaults;\n        if (isArray(block)) {\n            appendBlockToChain(chain, block, false);\n        }\n        context.__localeChainCache.set(startLocale, chain);\n    }\n    return chain;\n}\nfunction appendBlockToChain(chain, block, blocks) {\n    let follow = true;\n    for (let i = 0; i < block.length && isBoolean(follow); i++) {\n        const locale = block[i];\n        if (isString(locale)) {\n            follow = appendLocaleToChain(chain, block[i], blocks);\n        }\n    }\n    return follow;\n}\nfunction appendLocaleToChain(chain, locale, blocks) {\n    let follow;\n    const tokens = locale.split('-');\n    do {\n        const target = tokens.join('-');\n        follow = appendItemToChain(chain, target, blocks);\n        tokens.splice(-1, 1);\n    } while (tokens.length && follow === true);\n    return follow;\n}\nfunction appendItemToChain(chain, target, blocks) {\n    let follow = false;\n    if (!chain.includes(target)) {\n        follow = true;\n        if (target) {\n            follow = target[target.length - 1] !== '!';\n            const locale = target.replace(/!/g, '');\n            chain.push(locale);\n            if ((isArray(blocks) || isPlainObject(blocks)) &&\n                blocks[locale] // eslint-disable-line @typescript-eslint/no-explicit-any\n            ) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                follow = blocks[locale];\n            }\n        }\n    }\n    return follow;\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * Intlify core-base version\n * @internal\n */\nconst VERSION = '9.14.4';\nconst NOT_REOSLVED = -1;\nconst DEFAULT_LOCALE = 'en-US';\nconst MISSING_RESOLVE_VALUE = '';\nconst capitalize = (str) => `${str.charAt(0).toLocaleUpperCase()}${str.substr(1)}`;\nfunction getDefaultLinkedModifiers() {\n    return {\n        upper: (val, type) => {\n            // prettier-ignore\n            return type === 'text' && isString(val)\n                ? val.toUpperCase()\n                : type === 'vnode' && isObject(val) && '__v_isVNode' in val\n                    ? val.children.toUpperCase()\n                    : val;\n        },\n        lower: (val, type) => {\n            // prettier-ignore\n            return type === 'text' && isString(val)\n                ? val.toLowerCase()\n                : type === 'vnode' && isObject(val) && '__v_isVNode' in val\n                    ? val.children.toLowerCase()\n                    : val;\n        },\n        capitalize: (val, type) => {\n            // prettier-ignore\n            return (type === 'text' && isString(val)\n                ? capitalize(val)\n                : type === 'vnode' && isObject(val) && '__v_isVNode' in val\n                    ? capitalize(val.children)\n                    : val);\n        }\n    };\n}\nlet _compiler;\nfunction registerMessageCompiler(compiler) {\n    _compiler = compiler;\n}\nlet _resolver;\n/**\n * Register the message resolver\n *\n * @param resolver - A {@link MessageResolver} function\n *\n * @VueI18nGeneral\n */\nfunction registerMessageResolver(resolver) {\n    _resolver = resolver;\n}\nlet _fallbacker;\n/**\n * Register the locale fallbacker\n *\n * @param fallbacker - A {@link LocaleFallbacker} function\n *\n * @VueI18nGeneral\n */\nfunction registerLocaleFallbacker(fallbacker) {\n    _fallbacker = fallbacker;\n}\n// Additional Meta for Intlify DevTools\nlet _additionalMeta =  null;\n/* #__NO_SIDE_EFFECTS__ */\nconst setAdditionalMeta = (meta) => {\n    _additionalMeta = meta;\n};\n/* #__NO_SIDE_EFFECTS__ */\nconst getAdditionalMeta = () => _additionalMeta;\nlet _fallbackContext = null;\nconst setFallbackContext = (context) => {\n    _fallbackContext = context;\n};\nconst getFallbackContext = () => _fallbackContext;\n// ID for CoreContext\nlet _cid = 0;\nfunction createCoreContext(options = {}) {\n    // setup options\n    const onWarn = isFunction(options.onWarn) ? options.onWarn : warn;\n    const version = isString(options.version) ? options.version : VERSION;\n    const locale = isString(options.locale) || isFunction(options.locale)\n        ? options.locale\n        : DEFAULT_LOCALE;\n    const _locale = isFunction(locale) ? DEFAULT_LOCALE : locale;\n    const fallbackLocale = isArray(options.fallbackLocale) ||\n        isPlainObject(options.fallbackLocale) ||\n        isString(options.fallbackLocale) ||\n        options.fallbackLocale === false\n        ? options.fallbackLocale\n        : _locale;\n    const messages = isPlainObject(options.messages)\n        ? options.messages\n        : createResources(_locale);\n    const datetimeFormats = isPlainObject(options.datetimeFormats)\n            ? options.datetimeFormats\n            : createResources(_locale)\n        ;\n    const numberFormats = isPlainObject(options.numberFormats)\n            ? options.numberFormats\n            : createResources(_locale)\n        ;\n    const modifiers = assign(create(), options.modifiers, getDefaultLinkedModifiers());\n    const pluralRules = options.pluralRules || create();\n    const missing = isFunction(options.missing) ? options.missing : null;\n    const missingWarn = isBoolean(options.missingWarn) || isRegExp(options.missingWarn)\n        ? options.missingWarn\n        : true;\n    const fallbackWarn = isBoolean(options.fallbackWarn) || isRegExp(options.fallbackWarn)\n        ? options.fallbackWarn\n        : true;\n    const fallbackFormat = !!options.fallbackFormat;\n    const unresolving = !!options.unresolving;\n    const postTranslation = isFunction(options.postTranslation)\n        ? options.postTranslation\n        : null;\n    const processor = isPlainObject(options.processor) ? options.processor : null;\n    const warnHtmlMessage = isBoolean(options.warnHtmlMessage)\n        ? options.warnHtmlMessage\n        : true;\n    const escapeParameter = !!options.escapeParameter;\n    const messageCompiler = isFunction(options.messageCompiler)\n        ? options.messageCompiler\n        : _compiler;\n    if ((process.env.NODE_ENV !== 'production') &&\n        !false &&\n        !false &&\n        isFunction(options.messageCompiler)) {\n        warnOnce(getWarnMessage(CoreWarnCodes.EXPERIMENTAL_CUSTOM_MESSAGE_COMPILER));\n    }\n    const messageResolver = isFunction(options.messageResolver)\n        ? options.messageResolver\n        : _resolver || resolveWithKeyValue;\n    const localeFallbacker = isFunction(options.localeFallbacker)\n        ? options.localeFallbacker\n        : _fallbacker || fallbackWithSimple;\n    const fallbackContext = isObject(options.fallbackContext)\n        ? options.fallbackContext\n        : undefined;\n    // setup internal options\n    const internalOptions = options;\n    const __datetimeFormatters = isObject(internalOptions.__datetimeFormatters)\n            ? internalOptions.__datetimeFormatters\n            : new Map()\n        ;\n    const __numberFormatters = isObject(internalOptions.__numberFormatters)\n            ? internalOptions.__numberFormatters\n            : new Map()\n        ;\n    const __meta = isObject(internalOptions.__meta) ? internalOptions.__meta : {};\n    _cid++;\n    const context = {\n        version,\n        cid: _cid,\n        locale,\n        fallbackLocale,\n        messages,\n        modifiers,\n        pluralRules,\n        missing,\n        missingWarn,\n        fallbackWarn,\n        fallbackFormat,\n        unresolving,\n        postTranslation,\n        processor,\n        warnHtmlMessage,\n        escapeParameter,\n        messageCompiler,\n        messageResolver,\n        localeFallbacker,\n        fallbackContext,\n        onWarn,\n        __meta\n    };\n    {\n        context.datetimeFormats = datetimeFormats;\n        context.numberFormats = numberFormats;\n        context.__datetimeFormatters = __datetimeFormatters;\n        context.__numberFormatters = __numberFormatters;\n    }\n    // for vue-devtools timeline event\n    if ((process.env.NODE_ENV !== 'production')) {\n        context.__v_emitter =\n            internalOptions.__v_emitter != null\n                ? internalOptions.__v_emitter\n                : undefined;\n    }\n    // NOTE: experimental !!\n    if ((process.env.NODE_ENV !== 'production') || __INTLIFY_PROD_DEVTOOLS__) {\n        initI18nDevTools(context, version, __meta);\n    }\n    return context;\n}\nconst createResources = (locale) => ({ [locale]: create() });\n/** @internal */\nfunction isTranslateFallbackWarn(fallback, key) {\n    return fallback instanceof RegExp ? fallback.test(key) : fallback;\n}\n/** @internal */\nfunction isTranslateMissingWarn(missing, key) {\n    return missing instanceof RegExp ? missing.test(key) : missing;\n}\n/** @internal */\nfunction handleMissing(context, key, locale, missingWarn, type) {\n    const { missing, onWarn } = context;\n    // for vue-devtools timeline event\n    if ((process.env.NODE_ENV !== 'production')) {\n        const emitter = context.__v_emitter;\n        if (emitter) {\n            emitter.emit(\"missing\" /* VueDevToolsTimelineEvents.MISSING */, {\n                locale,\n                key,\n                type,\n                groupId: `${type}:${key}`\n            });\n        }\n    }\n    if (missing !== null) {\n        const ret = missing(context, locale, key, type);\n        return isString(ret) ? ret : key;\n    }\n    else {\n        if ((process.env.NODE_ENV !== 'production') && isTranslateMissingWarn(missingWarn, key)) {\n            onWarn(getWarnMessage(CoreWarnCodes.NOT_FOUND_KEY, { key, locale }));\n        }\n        return key;\n    }\n}\n/** @internal */\nfunction updateFallbackLocale(ctx, locale, fallback) {\n    const context = ctx;\n    context.__localeChainCache = new Map();\n    ctx.localeFallbacker(ctx, fallback, locale);\n}\n/** @internal */\nfunction isAlmostSameLocale(locale, compareLocale) {\n    if (locale === compareLocale)\n        return false;\n    return locale.split('-')[0] === compareLocale.split('-')[0];\n}\n/** @internal */\nfunction isImplicitFallback(targetLocale, locales) {\n    const index = locales.indexOf(targetLocale);\n    if (index === -1) {\n        return false;\n    }\n    for (let i = index + 1; i < locales.length; i++) {\n        if (isAlmostSameLocale(targetLocale, locales[i])) {\n            return true;\n        }\n    }\n    return false;\n}\n/* eslint-enable @typescript-eslint/no-explicit-any */\n\nfunction format(ast) {\n    const msg = (ctx) => formatParts(ctx, ast);\n    return msg;\n}\nfunction formatParts(ctx, ast) {\n    const body = resolveBody(ast);\n    if (body == null) {\n        throw createUnhandleNodeError(0 /* NodeTypes.Resource */);\n    }\n    const type = resolveType(body);\n    if (type === 1 /* NodeTypes.Plural */) {\n        const plural = body;\n        const cases = resolveCases(plural);\n        return ctx.plural(cases.reduce((messages, c) => [\n            ...messages,\n            formatMessageParts(ctx, c)\n        ], []));\n    }\n    else {\n        return formatMessageParts(ctx, body);\n    }\n}\nfunction formatMessageParts(ctx, node) {\n    const static_ = resolveStatic(node);\n    if (static_ != null) {\n        return ctx.type === 'text'\n            ? static_\n            : ctx.normalize([static_]);\n    }\n    else {\n        const messages = resolveItems(node).reduce((acm, c) => [...acm, formatMessagePart(ctx, c)], []);\n        return ctx.normalize(messages);\n    }\n}\nfunction formatMessagePart(ctx, node) {\n    const type = resolveType(node);\n    switch (type) {\n        case 3 /* NodeTypes.Text */: {\n            return resolveValue$1(node, type);\n        }\n        case 9 /* NodeTypes.Literal */: {\n            return resolveValue$1(node, type);\n        }\n        case 4 /* NodeTypes.Named */: {\n            const named = node;\n            if (hasOwn(named, 'k') && named.k) {\n                return ctx.interpolate(ctx.named(named.k));\n            }\n            if (hasOwn(named, 'key') && named.key) {\n                return ctx.interpolate(ctx.named(named.key));\n            }\n            throw createUnhandleNodeError(type);\n        }\n        case 5 /* NodeTypes.List */: {\n            const list = node;\n            if (hasOwn(list, 'i') && isNumber(list.i)) {\n                return ctx.interpolate(ctx.list(list.i));\n            }\n            if (hasOwn(list, 'index') && isNumber(list.index)) {\n                return ctx.interpolate(ctx.list(list.index));\n            }\n            throw createUnhandleNodeError(type);\n        }\n        case 6 /* NodeTypes.Linked */: {\n            const linked = node;\n            const modifier = resolveLinkedModifier(linked);\n            const key = resolveLinkedKey(linked);\n            return ctx.linked(formatMessagePart(ctx, key), modifier ? formatMessagePart(ctx, modifier) : undefined, ctx.type);\n        }\n        case 7 /* NodeTypes.LinkedKey */: {\n            return resolveValue$1(node, type);\n        }\n        case 8 /* NodeTypes.LinkedModifier */: {\n            return resolveValue$1(node, type);\n        }\n        default:\n            throw new Error(`unhandled node on format message part: ${type}`);\n    }\n}\n\nconst WARN_MESSAGE = `Detected HTML in '{source}' message. Recommend not using HTML messages to avoid XSS.`;\nfunction checkHtmlMessage(source, warnHtmlMessage) {\n    if (warnHtmlMessage && detectHtmlTag(source)) {\n        warn(format$1(WARN_MESSAGE, { source }));\n    }\n}\nconst defaultOnCacheKey = (message) => message;\nlet compileCache = create();\nfunction onCompileWarn(_warn) {\n    if (_warn.code === CompileWarnCodes.USE_MODULO_SYNTAX) {\n        warn(`The use of named interpolation with modulo syntax is deprecated. ` +\n            `It will be removed in v10.\\n` +\n            `reference: https://vue-i18n.intlify.dev/guide/essentials/syntax#rails-i18n-format \\n` +\n            `(message compiler warning message: ${_warn.message})`);\n    }\n}\nfunction clearCompileCache() {\n    compileCache = create();\n}\nfunction baseCompile(message, options = {}) {\n    // error detecting on compile\n    let detectError = false;\n    const onError = options.onError || defaultOnError;\n    options.onError = (err) => {\n        detectError = true;\n        onError(err);\n    };\n    // compile with mesasge-compiler\n    return { ...baseCompile$1(message, options), detectError };\n}\n/* #__NO_SIDE_EFFECTS__ */\nconst compileToFunction = (message, context) => {\n    if (!isString(message)) {\n        throw createCoreError(CoreErrorCodes.NOT_SUPPORT_NON_STRING_MESSAGE);\n    }\n    // set onWarn\n    if ((process.env.NODE_ENV !== 'production')) {\n        context.onWarn = onCompileWarn;\n    }\n    {\n        // check HTML message\n        const warnHtmlMessage = isBoolean(context.warnHtmlMessage)\n            ? context.warnHtmlMessage\n            : true;\n        (process.env.NODE_ENV !== 'production') && checkHtmlMessage(message, warnHtmlMessage);\n        // check caches\n        const onCacheKey = context.onCacheKey || defaultOnCacheKey;\n        const cacheKey = onCacheKey(message);\n        const cached = compileCache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        // compile\n        const { code, detectError } = baseCompile(message, context);\n        // evaluate function\n        const msg = new Function(`return ${code}`)();\n        // if occurred compile error, don't cache\n        return !detectError\n            ? (compileCache[cacheKey] = msg)\n            : msg;\n    }\n};\nfunction compile(message, context) {\n    // set onWarn\n    if ((process.env.NODE_ENV !== 'production')) {\n        context.onWarn = onCompileWarn;\n    }\n    if (((__INTLIFY_JIT_COMPILATION__ && !__INTLIFY_DROP_MESSAGE_COMPILER__)) &&\n        isString(message)) {\n        // check HTML message\n        const warnHtmlMessage = isBoolean(context.warnHtmlMessage)\n            ? context.warnHtmlMessage\n            : true;\n        (process.env.NODE_ENV !== 'production') && checkHtmlMessage(message, warnHtmlMessage);\n        // check caches\n        const onCacheKey = context.onCacheKey || defaultOnCacheKey;\n        const cacheKey = onCacheKey(message);\n        const cached = compileCache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        // compile with JIT mode\n        const { ast, detectError } = baseCompile(message, {\n            ...context,\n            location: (process.env.NODE_ENV !== 'production'),\n            jit: true\n        });\n        // compose message function from AST\n        const msg = format(ast);\n        // if occurred compile error, don't cache\n        return !detectError\n            ? (compileCache[cacheKey] = msg)\n            : msg;\n    }\n    else {\n        if ((process.env.NODE_ENV !== 'production') && !isMessageAST(message)) {\n            warn(`the message that is resolve with key '${context.key}' is not supported for jit compilation`);\n            return (() => message);\n        }\n        // AST case (passed from bundler)\n        const cacheKey = message.cacheKey;\n        if (cacheKey) {\n            const cached = compileCache[cacheKey];\n            if (cached) {\n                return cached;\n            }\n            // compose message function from message (AST)\n            return (compileCache[cacheKey] =\n                format(message));\n        }\n        else {\n            return format(message);\n        }\n    }\n}\n\nconst NOOP_MESSAGE_FUNCTION = () => '';\nconst isMessageFunction = (val) => isFunction(val);\n// implementation of `translate` function\nfunction translate(context, ...args) {\n    const { fallbackFormat, postTranslation, unresolving, messageCompiler, fallbackLocale, messages } = context;\n    const [key, options] = parseTranslateArgs(...args);\n    const missingWarn = isBoolean(options.missingWarn)\n        ? options.missingWarn\n        : context.missingWarn;\n    const fallbackWarn = isBoolean(options.fallbackWarn)\n        ? options.fallbackWarn\n        : context.fallbackWarn;\n    const escapeParameter = isBoolean(options.escapeParameter)\n        ? options.escapeParameter\n        : context.escapeParameter;\n    const resolvedMessage = !!options.resolvedMessage;\n    // prettier-ignore\n    const defaultMsgOrKey = isString(options.default) || isBoolean(options.default) // default by function option\n        ? !isBoolean(options.default)\n            ? options.default\n            : (!messageCompiler ? () => key : key)\n        : fallbackFormat // default by `fallbackFormat` option\n            ? (!messageCompiler ? () => key : key)\n            : '';\n    const enableDefaultMsg = fallbackFormat || defaultMsgOrKey !== '';\n    const locale = getLocale(context, options);\n    // escape params\n    escapeParameter && escapeParams(options);\n    // resolve message format\n    // eslint-disable-next-line prefer-const\n    let [formatScope, targetLocale, message] = !resolvedMessage\n        ? resolveMessageFormat(context, key, locale, fallbackLocale, fallbackWarn, missingWarn)\n        : [\n            key,\n            locale,\n            messages[locale] || create()\n        ];\n    // NOTE:\n    //  Fix to work around `ssrTransfrom` bug in Vite.\n    //  https://github.com/vitejs/vite/issues/4306\n    //  To get around this, use temporary variables.\n    //  https://github.com/nuxt/framework/issues/1461#issuecomment-954606243\n    let format = formatScope;\n    // if you use default message, set it as message format!\n    let cacheBaseKey = key;\n    if (!resolvedMessage &&\n        !(isString(format) ||\n            isMessageAST(format) ||\n            isMessageFunction(format))) {\n        if (enableDefaultMsg) {\n            format = defaultMsgOrKey;\n            cacheBaseKey = format;\n        }\n    }\n    // checking message format and target locale\n    if (!resolvedMessage &&\n        (!(isString(format) ||\n            isMessageAST(format) ||\n            isMessageFunction(format)) ||\n            !isString(targetLocale))) {\n        return unresolving ? NOT_REOSLVED : key;\n    }\n    // TODO: refactor\n    if ((process.env.NODE_ENV !== 'production') && isString(format) && context.messageCompiler == null) {\n        warn(`The message format compilation is not supported in this build. ` +\n            `Because message compiler isn't included. ` +\n            `You need to pre-compilation all message format. ` +\n            `So translate function return '${key}'.`);\n        return key;\n    }\n    // setup compile error detecting\n    let occurred = false;\n    const onError = () => {\n        occurred = true;\n    };\n    // compile message format\n    const msg = !isMessageFunction(format)\n        ? compileMessageFormat(context, key, targetLocale, format, cacheBaseKey, onError)\n        : format;\n    // if occurred compile error, return the message format\n    if (occurred) {\n        return format;\n    }\n    // evaluate message with context\n    const ctxOptions = getMessageContextOptions(context, targetLocale, message, options);\n    const msgContext = createMessageContext(ctxOptions);\n    const messaged = evaluateMessage(context, msg, msgContext);\n    // if use post translation option, proceed it with handler\n    const ret = postTranslation\n        ? postTranslation(messaged, key)\n        : messaged;\n    // NOTE: experimental !!\n    if ((process.env.NODE_ENV !== 'production') || __INTLIFY_PROD_DEVTOOLS__) {\n        // prettier-ignore\n        const payloads = {\n            timestamp: Date.now(),\n            key: isString(key)\n                ? key\n                : isMessageFunction(format)\n                    ? format.key\n                    : '',\n            locale: targetLocale || (isMessageFunction(format)\n                ? format.locale\n                : ''),\n            format: isString(format)\n                ? format\n                : isMessageFunction(format)\n                    ? format.source\n                    : '',\n            message: ret\n        };\n        payloads.meta = assign({}, context.__meta, getAdditionalMeta() || {});\n        translateDevTools(payloads);\n    }\n    return ret;\n}\nfunction escapeParams(options) {\n    if (isArray(options.list)) {\n        options.list = options.list.map(item => isString(item) ? escapeHtml(item) : item);\n    }\n    else if (isObject(options.named)) {\n        Object.keys(options.named).forEach(key => {\n            if (isString(options.named[key])) {\n                options.named[key] = escapeHtml(options.named[key]);\n            }\n        });\n    }\n}\nfunction resolveMessageFormat(context, key, locale, fallbackLocale, fallbackWarn, missingWarn) {\n    const { messages, onWarn, messageResolver: resolveValue, localeFallbacker } = context;\n    const locales = localeFallbacker(context, fallbackLocale, locale); // eslint-disable-line @typescript-eslint/no-explicit-any\n    let message = create();\n    let targetLocale;\n    let format = null;\n    let from = locale;\n    let to = null;\n    const type = 'translate';\n    for (let i = 0; i < locales.length; i++) {\n        targetLocale = to = locales[i];\n        if ((process.env.NODE_ENV !== 'production') &&\n            locale !== targetLocale &&\n            !isAlmostSameLocale(locale, targetLocale) &&\n            isTranslateFallbackWarn(fallbackWarn, key)) {\n            onWarn(getWarnMessage(CoreWarnCodes.FALLBACK_TO_TRANSLATE, {\n                key,\n                target: targetLocale\n            }));\n        }\n        // for vue-devtools timeline event\n        if ((process.env.NODE_ENV !== 'production') && locale !== targetLocale) {\n            const emitter = context.__v_emitter;\n            if (emitter) {\n                emitter.emit(\"fallback\" /* VueDevToolsTimelineEvents.FALBACK */, {\n                    type,\n                    key,\n                    from,\n                    to,\n                    groupId: `${type}:${key}`\n                });\n            }\n        }\n        message =\n            messages[targetLocale] || create();\n        // for vue-devtools timeline event\n        let start = null;\n        let startTag;\n        let endTag;\n        if ((process.env.NODE_ENV !== 'production') && inBrowser) {\n            start = window.performance.now();\n            startTag = 'intlify-message-resolve-start';\n            endTag = 'intlify-message-resolve-end';\n            mark && mark(startTag);\n        }\n        if ((format = resolveValue(message, key)) === null) {\n            // if null, resolve with object key path\n            format = message[key]; // eslint-disable-line @typescript-eslint/no-explicit-any\n        }\n        // for vue-devtools timeline event\n        if ((process.env.NODE_ENV !== 'production') && inBrowser) {\n            const end = window.performance.now();\n            const emitter = context.__v_emitter;\n            if (emitter && start && format) {\n                emitter.emit(\"message-resolve\" /* VueDevToolsTimelineEvents.MESSAGE_RESOLVE */, {\n                    type: \"message-resolve\" /* VueDevToolsTimelineEvents.MESSAGE_RESOLVE */,\n                    key,\n                    message: format,\n                    time: end - start,\n                    groupId: `${type}:${key}`\n                });\n            }\n            if (startTag && endTag && mark && measure) {\n                mark(endTag);\n                measure('intlify message resolve', startTag, endTag);\n            }\n        }\n        if (isString(format) || isMessageAST(format) || isMessageFunction(format)) {\n            break;\n        }\n        if (!isImplicitFallback(targetLocale, locales)) {\n            const missingRet = handleMissing(context, // eslint-disable-line @typescript-eslint/no-explicit-any\n            key, targetLocale, missingWarn, type);\n            if (missingRet !== key) {\n                format = missingRet;\n            }\n        }\n        from = to;\n    }\n    return [format, targetLocale, message];\n}\nfunction compileMessageFormat(context, key, targetLocale, format, cacheBaseKey, onError) {\n    const { messageCompiler, warnHtmlMessage } = context;\n    if (isMessageFunction(format)) {\n        const msg = format;\n        msg.locale = msg.locale || targetLocale;\n        msg.key = msg.key || key;\n        return msg;\n    }\n    if (messageCompiler == null) {\n        const msg = (() => format);\n        msg.locale = targetLocale;\n        msg.key = key;\n        return msg;\n    }\n    // for vue-devtools timeline event\n    let start = null;\n    let startTag;\n    let endTag;\n    if ((process.env.NODE_ENV !== 'production') && inBrowser) {\n        start = window.performance.now();\n        startTag = 'intlify-message-compilation-start';\n        endTag = 'intlify-message-compilation-end';\n        mark && mark(startTag);\n    }\n    const msg = messageCompiler(format, getCompileContext(context, targetLocale, cacheBaseKey, format, warnHtmlMessage, onError));\n    // for vue-devtools timeline event\n    if ((process.env.NODE_ENV !== 'production') && inBrowser) {\n        const end = window.performance.now();\n        const emitter = context.__v_emitter;\n        if (emitter && start) {\n            emitter.emit(\"message-compilation\" /* VueDevToolsTimelineEvents.MESSAGE_COMPILATION */, {\n                type: \"message-compilation\" /* VueDevToolsTimelineEvents.MESSAGE_COMPILATION */,\n                message: format,\n                time: end - start,\n                groupId: `${'translate'}:${key}`\n            });\n        }\n        if (startTag && endTag && mark && measure) {\n            mark(endTag);\n            measure('intlify message compilation', startTag, endTag);\n        }\n    }\n    msg.locale = targetLocale;\n    msg.key = key;\n    msg.source = format;\n    return msg;\n}\nfunction evaluateMessage(context, msg, msgCtx) {\n    // for vue-devtools timeline event\n    let start = null;\n    let startTag;\n    let endTag;\n    if ((process.env.NODE_ENV !== 'production') && inBrowser) {\n        start = window.performance.now();\n        startTag = 'intlify-message-evaluation-start';\n        endTag = 'intlify-message-evaluation-end';\n        mark && mark(startTag);\n    }\n    const messaged = msg(msgCtx);\n    // for vue-devtools timeline event\n    if ((process.env.NODE_ENV !== 'production') && inBrowser) {\n        const end = window.performance.now();\n        const emitter = context.__v_emitter;\n        if (emitter && start) {\n            emitter.emit(\"message-evaluation\" /* VueDevToolsTimelineEvents.MESSAGE_EVALUATION */, {\n                type: \"message-evaluation\" /* VueDevToolsTimelineEvents.MESSAGE_EVALUATION */,\n                value: messaged,\n                time: end - start,\n                groupId: `${'translate'}:${msg.key}`\n            });\n        }\n        if (startTag && endTag && mark && measure) {\n            mark(endTag);\n            measure('intlify message evaluation', startTag, endTag);\n        }\n    }\n    return messaged;\n}\n/** @internal */\nfunction parseTranslateArgs(...args) {\n    const [arg1, arg2, arg3] = args;\n    const options = create();\n    if (!isString(arg1) &&\n        !isNumber(arg1) &&\n        !isMessageFunction(arg1) &&\n        !isMessageAST(arg1)) {\n        throw createCoreError(CoreErrorCodes.INVALID_ARGUMENT);\n    }\n    // prettier-ignore\n    const key = isNumber(arg1)\n        ? String(arg1)\n        : isMessageFunction(arg1)\n            ? arg1\n            : arg1;\n    if (isNumber(arg2)) {\n        options.plural = arg2;\n    }\n    else if (isString(arg2)) {\n        options.default = arg2;\n    }\n    else if (isPlainObject(arg2) && !isEmptyObject(arg2)) {\n        options.named = arg2;\n    }\n    else if (isArray(arg2)) {\n        options.list = arg2;\n    }\n    if (isNumber(arg3)) {\n        options.plural = arg3;\n    }\n    else if (isString(arg3)) {\n        options.default = arg3;\n    }\n    else if (isPlainObject(arg3)) {\n        assign(options, arg3);\n    }\n    return [key, options];\n}\nfunction getCompileContext(context, locale, key, source, warnHtmlMessage, onError) {\n    return {\n        locale,\n        key,\n        warnHtmlMessage,\n        onError: (err) => {\n            onError && onError(err);\n            if ((process.env.NODE_ENV !== 'production')) {\n                const _source = getSourceForCodeFrame(source);\n                const message = `Message compilation error: ${err.message}`;\n                const codeFrame = err.location &&\n                    _source &&\n                    generateCodeFrame(_source, err.location.start.offset, err.location.end.offset);\n                const emitter = context.__v_emitter;\n                if (emitter && _source) {\n                    emitter.emit(\"compile-error\" /* VueDevToolsTimelineEvents.COMPILE_ERROR */, {\n                        message: _source,\n                        error: err.message,\n                        start: err.location && err.location.start.offset,\n                        end: err.location && err.location.end.offset,\n                        groupId: `${'translate'}:${key}`\n                    });\n                }\n                console.error(codeFrame ? `${message}\\n${codeFrame}` : message);\n            }\n            else {\n                throw err;\n            }\n        },\n        onCacheKey: (source) => generateFormatCacheKey(locale, key, source)\n    };\n}\nfunction getSourceForCodeFrame(source) {\n    if (isString(source)) {\n        return source;\n    }\n    else {\n        if (source.loc && source.loc.source) {\n            return source.loc.source;\n        }\n    }\n}\nfunction getMessageContextOptions(context, locale, message, options) {\n    const { modifiers, pluralRules, messageResolver: resolveValue, fallbackLocale, fallbackWarn, missingWarn, fallbackContext } = context;\n    const resolveMessage = (key) => {\n        let val = resolveValue(message, key);\n        // fallback to root context\n        if (val == null && fallbackContext) {\n            const [, , message] = resolveMessageFormat(fallbackContext, key, locale, fallbackLocale, fallbackWarn, missingWarn);\n            val = resolveValue(message, key);\n        }\n        if (isString(val) || isMessageAST(val)) {\n            let occurred = false;\n            const onError = () => {\n                occurred = true;\n            };\n            const msg = compileMessageFormat(context, key, locale, val, key, onError);\n            return !occurred\n                ? msg\n                : NOOP_MESSAGE_FUNCTION;\n        }\n        else if (isMessageFunction(val)) {\n            return val;\n        }\n        else {\n            // TODO: should be implemented warning message\n            return NOOP_MESSAGE_FUNCTION;\n        }\n    };\n    const ctxOptions = {\n        locale,\n        modifiers,\n        pluralRules,\n        messages: resolveMessage\n    };\n    if (context.processor) {\n        ctxOptions.processor = context.processor;\n    }\n    if (options.list) {\n        ctxOptions.list = options.list;\n    }\n    if (options.named) {\n        ctxOptions.named = options.named;\n    }\n    if (isNumber(options.plural)) {\n        ctxOptions.pluralIndex = options.plural;\n    }\n    return ctxOptions;\n}\n\nconst intlDefined = typeof Intl !== 'undefined';\nconst Availabilities = {\n    dateTimeFormat: intlDefined && typeof Intl.DateTimeFormat !== 'undefined',\n    numberFormat: intlDefined && typeof Intl.NumberFormat !== 'undefined'\n};\n\n// implementation of `datetime` function\nfunction datetime(context, ...args) {\n    const { datetimeFormats, unresolving, fallbackLocale, onWarn, localeFallbacker } = context;\n    const { __datetimeFormatters } = context;\n    if ((process.env.NODE_ENV !== 'production') && !Availabilities.dateTimeFormat) {\n        onWarn(getWarnMessage(CoreWarnCodes.CANNOT_FORMAT_DATE));\n        return MISSING_RESOLVE_VALUE;\n    }\n    const [key, value, options, overrides] = parseDateTimeArgs(...args);\n    const missingWarn = isBoolean(options.missingWarn)\n        ? options.missingWarn\n        : context.missingWarn;\n    const fallbackWarn = isBoolean(options.fallbackWarn)\n        ? options.fallbackWarn\n        : context.fallbackWarn;\n    const part = !!options.part;\n    const locale = getLocale(context, options);\n    const locales = localeFallbacker(context, // eslint-disable-line @typescript-eslint/no-explicit-any\n    fallbackLocale, locale);\n    if (!isString(key) || key === '') {\n        return new Intl.DateTimeFormat(locale, overrides).format(value);\n    }\n    // resolve format\n    let datetimeFormat = {};\n    let targetLocale;\n    let format = null;\n    let from = locale;\n    let to = null;\n    const type = 'datetime format';\n    for (let i = 0; i < locales.length; i++) {\n        targetLocale = to = locales[i];\n        if ((process.env.NODE_ENV !== 'production') &&\n            locale !== targetLocale &&\n            isTranslateFallbackWarn(fallbackWarn, key)) {\n            onWarn(getWarnMessage(CoreWarnCodes.FALLBACK_TO_DATE_FORMAT, {\n                key,\n                target: targetLocale\n            }));\n        }\n        // for vue-devtools timeline event\n        if ((process.env.NODE_ENV !== 'production') && locale !== targetLocale) {\n            const emitter = context.__v_emitter;\n            if (emitter) {\n                emitter.emit(\"fallback\" /* VueDevToolsTimelineEvents.FALBACK */, {\n                    type,\n                    key,\n                    from,\n                    to,\n                    groupId: `${type}:${key}`\n                });\n            }\n        }\n        datetimeFormat =\n            datetimeFormats[targetLocale] || {};\n        format = datetimeFormat[key];\n        if (isPlainObject(format))\n            break;\n        handleMissing(context, key, targetLocale, missingWarn, type); // eslint-disable-line @typescript-eslint/no-explicit-any\n        from = to;\n    }\n    // checking format and target locale\n    if (!isPlainObject(format) || !isString(targetLocale)) {\n        return unresolving ? NOT_REOSLVED : key;\n    }\n    let id = `${targetLocale}__${key}`;\n    if (!isEmptyObject(overrides)) {\n        id = `${id}__${JSON.stringify(overrides)}`;\n    }\n    let formatter = __datetimeFormatters.get(id);\n    if (!formatter) {\n        formatter = new Intl.DateTimeFormat(targetLocale, assign({}, format, overrides));\n        __datetimeFormatters.set(id, formatter);\n    }\n    return !part ? formatter.format(value) : formatter.formatToParts(value);\n}\n/** @internal */\nconst DATETIME_FORMAT_OPTIONS_KEYS = [\n    'localeMatcher',\n    'weekday',\n    'era',\n    'year',\n    'month',\n    'day',\n    'hour',\n    'minute',\n    'second',\n    'timeZoneName',\n    'formatMatcher',\n    'hour12',\n    'timeZone',\n    'dateStyle',\n    'timeStyle',\n    'calendar',\n    'dayPeriod',\n    'numberingSystem',\n    'hourCycle',\n    'fractionalSecondDigits'\n];\n/** @internal */\nfunction parseDateTimeArgs(...args) {\n    const [arg1, arg2, arg3, arg4] = args;\n    const options = create();\n    let overrides = create();\n    let value;\n    if (isString(arg1)) {\n        // Only allow ISO strings - other date formats are often supported,\n        // but may cause different results in different browsers.\n        const matches = arg1.match(/(\\d{4}-\\d{2}-\\d{2})(T|\\s)?(.*)/);\n        if (!matches) {\n            throw createCoreError(CoreErrorCodes.INVALID_ISO_DATE_ARGUMENT);\n        }\n        // Some browsers can not parse the iso datetime separated by space,\n        // this is a compromise solution by replace the 'T'/' ' with 'T'\n        const dateTime = matches[3]\n            ? matches[3].trim().startsWith('T')\n                ? `${matches[1].trim()}${matches[3].trim()}`\n                : `${matches[1].trim()}T${matches[3].trim()}`\n            : matches[1].trim();\n        value = new Date(dateTime);\n        try {\n            // This will fail if the date is not valid\n            value.toISOString();\n        }\n        catch (e) {\n            throw createCoreError(CoreErrorCodes.INVALID_ISO_DATE_ARGUMENT);\n        }\n    }\n    else if (isDate(arg1)) {\n        if (isNaN(arg1.getTime())) {\n            throw createCoreError(CoreErrorCodes.INVALID_DATE_ARGUMENT);\n        }\n        value = arg1;\n    }\n    else if (isNumber(arg1)) {\n        value = arg1;\n    }\n    else {\n        throw createCoreError(CoreErrorCodes.INVALID_ARGUMENT);\n    }\n    if (isString(arg2)) {\n        options.key = arg2;\n    }\n    else if (isPlainObject(arg2)) {\n        Object.keys(arg2).forEach(key => {\n            if (DATETIME_FORMAT_OPTIONS_KEYS.includes(key)) {\n                overrides[key] = arg2[key];\n            }\n            else {\n                options[key] = arg2[key];\n            }\n        });\n    }\n    if (isString(arg3)) {\n        options.locale = arg3;\n    }\n    else if (isPlainObject(arg3)) {\n        overrides = arg3;\n    }\n    if (isPlainObject(arg4)) {\n        overrides = arg4;\n    }\n    return [options.key || '', value, options, overrides];\n}\n/** @internal */\nfunction clearDateTimeFormat(ctx, locale, format) {\n    const context = ctx;\n    for (const key in format) {\n        const id = `${locale}__${key}`;\n        if (!context.__datetimeFormatters.has(id)) {\n            continue;\n        }\n        context.__datetimeFormatters.delete(id);\n    }\n}\n\n// implementation of `number` function\nfunction number(context, ...args) {\n    const { numberFormats, unresolving, fallbackLocale, onWarn, localeFallbacker } = context;\n    const { __numberFormatters } = context;\n    if ((process.env.NODE_ENV !== 'production') && !Availabilities.numberFormat) {\n        onWarn(getWarnMessage(CoreWarnCodes.CANNOT_FORMAT_NUMBER));\n        return MISSING_RESOLVE_VALUE;\n    }\n    const [key, value, options, overrides] = parseNumberArgs(...args);\n    const missingWarn = isBoolean(options.missingWarn)\n        ? options.missingWarn\n        : context.missingWarn;\n    const fallbackWarn = isBoolean(options.fallbackWarn)\n        ? options.fallbackWarn\n        : context.fallbackWarn;\n    const part = !!options.part;\n    const locale = getLocale(context, options);\n    const locales = localeFallbacker(context, // eslint-disable-line @typescript-eslint/no-explicit-any\n    fallbackLocale, locale);\n    if (!isString(key) || key === '') {\n        return new Intl.NumberFormat(locale, overrides).format(value);\n    }\n    // resolve format\n    let numberFormat = {};\n    let targetLocale;\n    let format = null;\n    let from = locale;\n    let to = null;\n    const type = 'number format';\n    for (let i = 0; i < locales.length; i++) {\n        targetLocale = to = locales[i];\n        if ((process.env.NODE_ENV !== 'production') &&\n            locale !== targetLocale &&\n            isTranslateFallbackWarn(fallbackWarn, key)) {\n            onWarn(getWarnMessage(CoreWarnCodes.FALLBACK_TO_NUMBER_FORMAT, {\n                key,\n                target: targetLocale\n            }));\n        }\n        // for vue-devtools timeline event\n        if ((process.env.NODE_ENV !== 'production') && locale !== targetLocale) {\n            const emitter = context.__v_emitter;\n            if (emitter) {\n                emitter.emit(\"fallback\" /* VueDevToolsTimelineEvents.FALBACK */, {\n                    type,\n                    key,\n                    from,\n                    to,\n                    groupId: `${type}:${key}`\n                });\n            }\n        }\n        numberFormat =\n            numberFormats[targetLocale] || {};\n        format = numberFormat[key];\n        if (isPlainObject(format))\n            break;\n        handleMissing(context, key, targetLocale, missingWarn, type); // eslint-disable-line @typescript-eslint/no-explicit-any\n        from = to;\n    }\n    // checking format and target locale\n    if (!isPlainObject(format) || !isString(targetLocale)) {\n        return unresolving ? NOT_REOSLVED : key;\n    }\n    let id = `${targetLocale}__${key}`;\n    if (!isEmptyObject(overrides)) {\n        id = `${id}__${JSON.stringify(overrides)}`;\n    }\n    let formatter = __numberFormatters.get(id);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(targetLocale, assign({}, format, overrides));\n        __numberFormatters.set(id, formatter);\n    }\n    return !part ? formatter.format(value) : formatter.formatToParts(value);\n}\n/** @internal */\nconst NUMBER_FORMAT_OPTIONS_KEYS = [\n    'localeMatcher',\n    'style',\n    'currency',\n    'currencyDisplay',\n    'currencySign',\n    'useGrouping',\n    'minimumIntegerDigits',\n    'minimumFractionDigits',\n    'maximumFractionDigits',\n    'minimumSignificantDigits',\n    'maximumSignificantDigits',\n    'compactDisplay',\n    'notation',\n    'signDisplay',\n    'unit',\n    'unitDisplay',\n    'roundingMode',\n    'roundingPriority',\n    'roundingIncrement',\n    'trailingZeroDisplay'\n];\n/** @internal */\nfunction parseNumberArgs(...args) {\n    const [arg1, arg2, arg3, arg4] = args;\n    const options = create();\n    let overrides = create();\n    if (!isNumber(arg1)) {\n        throw createCoreError(CoreErrorCodes.INVALID_ARGUMENT);\n    }\n    const value = arg1;\n    if (isString(arg2)) {\n        options.key = arg2;\n    }\n    else if (isPlainObject(arg2)) {\n        Object.keys(arg2).forEach(key => {\n            if (NUMBER_FORMAT_OPTIONS_KEYS.includes(key)) {\n                overrides[key] = arg2[key];\n            }\n            else {\n                options[key] = arg2[key];\n            }\n        });\n    }\n    if (isString(arg3)) {\n        options.locale = arg3;\n    }\n    else if (isPlainObject(arg3)) {\n        overrides = arg3;\n    }\n    if (isPlainObject(arg4)) {\n        overrides = arg4;\n    }\n    return [options.key || '', value, options, overrides];\n}\n/** @internal */\nfunction clearNumberFormat(ctx, locale, format) {\n    const context = ctx;\n    for (const key in format) {\n        const id = `${locale}__${key}`;\n        if (!context.__numberFormatters.has(id)) {\n            continue;\n        }\n        context.__numberFormatters.delete(id);\n    }\n}\n\n{\n    initFeatureFlags();\n}\n\nexport { AST_NODE_PROPS_KEYS, CoreErrorCodes, CoreWarnCodes, DATETIME_FORMAT_OPTIONS_KEYS, DEFAULT_LOCALE, DEFAULT_MESSAGE_DATA_TYPE, MISSING_RESOLVE_VALUE, NOT_REOSLVED, NUMBER_FORMAT_OPTIONS_KEYS, VERSION, clearCompileCache, clearDateTimeFormat, clearNumberFormat, compile, compileToFunction, createCoreContext, createCoreError, createMessageContext, datetime, fallbackWithLocaleChain, fallbackWithSimple, getAdditionalMeta, getDevToolsHook, getFallbackContext, getLocale, getWarnMessage, handleMissing, initI18nDevTools, isAlmostSameLocale, isImplicitFallback, isMessageAST, isMessageFunction, isTranslateFallbackWarn, isTranslateMissingWarn, number, parse, parseDateTimeArgs, parseNumberArgs, parseTranslateArgs, registerLocaleFallbacker, registerMessageCompiler, registerMessageResolver, resolveLocale, resolveValue, resolveWithKeyValue, setAdditionalMeta, setDevToolsHook, setFallbackContext, translate, translateDevTools, updateFallbackLocale };\n"],"version":3}