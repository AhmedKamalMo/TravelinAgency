{"file":"0.siteConfig.mjs","mappings":"+ZAEA,MAAAA,EAAeC,EAAiB,CAC9B,KAAM,wBACN,QAAS,MACT,MAAM,MAAMC,EAAS,OACb,MAAAC,EAAQC,EAAS,aAAa,EACZ,CAChB,MAAAC,GAAUC,EAAAC,MAAA,YAAAD,EAAmB,QAC3BJ,EAAA,MAAM,KAAK,eAAgB,IAAM,CACjCC,EAAA,MAAQE,GAAA,YAAAA,EAAS,WAAW,IAAI,CACpC,MAAOG,EAAA,EAAmB,kBAAkB,EAAE,MAC9C,YAAa,EAAA,EACd,CACF,CAAA,CAKI,MAAA,CACL,QAAS,CACP,eALQ,CAAC,CAKO,CAEpB,CAAA,CAEJ,CAAC","names":["_0_siteConfig_hxpx9TAykM4St_ybsPIAJmhOKQmae5Yd749dL71wvC8","defineNuxtPlugin","nuxtApp","state","useState","context","_a","useRequestEvent","useRuntimeConfig"],"sources":["../../../../../../../../../node_modules/nuxt-site-config/dist/runtime/nuxt/plugins/0.siteConfig.js"],"sourcesContent":["import { defineNuxtPlugin } from \"#app\";\nimport { useRequestEvent, useRuntimeConfig, useState } from \"#imports\";\nexport default defineNuxtPlugin({\n  name: \"nuxt-site-config:init\",\n  enforce: \"pre\",\n  async setup(nuxtApp) {\n    const state = useState(\"site-config\");\n    if (import.meta.server) {\n      const context = useRequestEvent()?.context;\n      nuxtApp.hooks.hook(\"app:rendered\", () => {\n        state.value = context?.siteConfig.get({\n          debug: useRuntimeConfig()[\"nuxt-site-config\"].debug,\n          resolveRefs: true\n        });\n      });\n    }\n    let stack = {};\n    if (import.meta.client)\n      stack = state.value || window.__NUXT_SITE_CONFIG__;\n    return {\n      provide: {\n        nuxtSiteConfig: stack\n      }\n    };\n  }\n});\n"],"version":3}