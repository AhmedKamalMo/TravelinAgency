{"file":"revive-payload.server.mjs","mappings":"8OAKA,MAAMA,EAAW,CACf,CAAC,YAAcC,GAASC,EAAYD,CAAI,GAAKA,EAAK,QAAQ,EAC1D,CAAC,kBAAoBA,GAASE,EAAMF,CAAI,GAAKG,EAAUH,CAAI,GAAK,CAACA,EAAK,QAAU,OAAOA,EAAK,OAAU,SAAW,KAAO,KAAK,UAAUA,EAAK,KAAK,GAAK,IAAI,EAC1J,CAAC,WAAaA,GAASE,EAAMF,CAAI,GAAK,CAACA,EAAK,QAAU,OAAOA,EAAK,OAAU,SAAW,KAAO,KAAK,UAAUA,EAAK,KAAK,GAAK,IAAI,EAChI,CAAC,aAAeA,GAASE,EAAMF,CAAI,GAAKG,EAAUH,CAAI,GAAKA,EAAK,KAAK,EACrE,CAAC,kBAAoBA,GAASI,EAAWJ,CAAI,GAAKG,EAAUH,CAAI,GAAKK,EAAML,CAAI,CAAC,EAChF,CAAC,MAAQA,GAASE,EAAMF,CAAI,GAAKA,EAAK,KAAK,EAC3C,CAAC,WAAaA,GAASI,EAAWJ,CAAI,GAAKK,EAAML,CAAI,CAAC,CACxD,EAIAM,EAAeC,EAAiB,CAC9B,KAAM,6BACN,OAAQ,CACN,SAAW,CAACC,EAASC,CAAE,IAAKV,EAC1BW,EAAqBF,EAASC,CAAE,CAEtC,CACA,CAAC","names":["reducers","data","isNuxtError","isRef","isShallow","isReactive","toRaw","revive_payload_server_MVtmlZaQpj6ApFmshWfUWl5PehCebzaBf2NuRMiIbms","defineNuxtPlugin","reducer","fn","definePayloadReducer"],"sources":["../../../../../../../../node_modules/nuxt/dist/app/plugins/revive-payload.server.js"],"sourcesContent":["import { isReactive, isRef, isShallow, toRaw } from \"vue\";\nimport { definePayloadReducer } from \"../composables/payload.js\";\nimport { isNuxtError } from \"../composables/error.js\";\nimport { defineNuxtPlugin } from \"../nuxt.js\";\nimport { componentIslands } from \"#build/nuxt.config.mjs\";\nconst reducers = [\n  [\"NuxtError\", (data) => isNuxtError(data) && data.toJSON()],\n  [\"EmptyShallowRef\", (data) => isRef(data) && isShallow(data) && !data.value && (typeof data.value === \"bigint\" ? \"0n\" : JSON.stringify(data.value) || \"_\")],\n  [\"EmptyRef\", (data) => isRef(data) && !data.value && (typeof data.value === \"bigint\" ? \"0n\" : JSON.stringify(data.value) || \"_\")],\n  [\"ShallowRef\", (data) => isRef(data) && isShallow(data) && data.value],\n  [\"ShallowReactive\", (data) => isReactive(data) && isShallow(data) && toRaw(data)],\n  [\"Ref\", (data) => isRef(data) && data.value],\n  [\"Reactive\", (data) => isReactive(data) && toRaw(data)]\n];\nif (componentIslands) {\n  reducers.push([\"Island\", (data) => data && data?.__nuxt_island]);\n}\nexport default defineNuxtPlugin({\n  name: \"nuxt:revive-payload:server\",\n  setup() {\n    for (const [reducer, fn] of reducers) {\n      definePayloadReducer(reducer, fn);\n    }\n  }\n});\n"],"version":3}