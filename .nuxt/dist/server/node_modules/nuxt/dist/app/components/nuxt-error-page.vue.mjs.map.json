{"file":"nuxt-error-page.vue.mjs","mappings":"uOAQA,MAAMA,EALQC,EAKO,MAGFD,EAAO,OACtBA,EAAO,MACJ,MAAM;AAAA,CAAI,EACV,OAAO,CAAC,EACR,IAAKE,IAKG,CACL,KALWA,EACV,QAAQ,YAAa,EAAE,EACvB,QAAQ,OAAQ,KAAK,EACrB,KAAI,EAGL,SAAWA,EAAK,SAAS,cAAc,GAAK,CAACA,EAAK,SAAS,QAAQ,GACnEA,EAAK,SAAS,UAAU,GACxBA,EAAK,SAAS,aAAa,CACrC,EACO,EAAE,IAAIC,GAAK,qBAAqBA,EAAE,SAAW,YAAc,EAAE,KAAKA,EAAE,IAAI,SAAS,EAAE,KAAK;AAAA,CAAI,EAInG,MAAMC,EAAa,OAAOJ,EAAO,YAAc,GAAG,EAC5CK,EAAQD,IAAe,IAEvBE,EAAgBN,EAAO,gBAAkBK,EAAQ,iBAAmB,yBACpEE,EAAcP,EAAO,SAAWA,EAAO,SAAQ,EAC/CQ,EAAuF,OAGvFC,EAAYC,EAAqB,IAAM,OAAO,qBAAiB,CAAC,EAChEC,EAEFD,EAAqB,IAAM,OAAO,qBAAiB,CAAC,EAElDE,EAAgBP,EAAQI,EAAYE","names":["_error","__props","line","i","statusCode","is404","statusMessage","description","stack","_Error404","defineAsyncComponent","_Error","ErrorTemplate"],"sources":["../../../../../../../../node_modules/nuxt/dist/app/components/nuxt-error-page.vue"],"sourcesContent":["<script setup>\nimport { defineAsyncComponent } from 'vue'\n\nconst props = defineProps({\n  error: Object,\n})\n\n// Deliberately prevent reactive update when error is cleared\nconst _error = props.error\n\n// TODO: extract to a separate utility\nconst stacktrace = _error.stack\n  ? _error.stack\n      .split('\\n')\n      .splice(1)\n      .map((line) => {\n        const text = line\n          .replace('webpack:/', '')\n          .replace('.vue', '.js') // TODO: Support sourcemap\n          .trim()\n        return {\n          text,\n          internal: (line.includes('node_modules') && !line.includes('.cache')) ||\n          line.includes('internal') ||\n          line.includes('new Promise'),\n        }\n      }).map(i => `<span class=\"stack${i.internal ? ' internal' : ''}\">${i.text}</span>`).join('\\n')\n  : ''\n\n// Error page props\nconst statusCode = Number(_error.statusCode || 500)\nconst is404 = statusCode === 404\n\nconst statusMessage = _error.statusMessage ?? (is404 ? 'Page Not Found' : 'Internal Server Error')\nconst description = _error.message || _error.toString()\nconst stack = import.meta.dev && !is404 ? _error.description || `<pre>${stacktrace}</pre>` : undefined\n\n// TODO: Investigate side-effect issue with imports\nconst _Error404 = defineAsyncComponent(() => import('./error-404.vue'))\nconst _Error = import.meta.dev\n  ? defineAsyncComponent(() => import('./error-dev.vue'))\n  : defineAsyncComponent(() => import('./error-500.vue'))\n\nconst ErrorTemplate = is404 ? _Error404 : _Error\n</script>\n\n<template>\n  <ErrorTemplate v-bind=\"{ statusCode, statusMessage, description, stack }\" />\n</template>\n"],"version":3}