{"version":3,"file":"router.options.mjs","sources":["../../../../../../../../node_modules/nuxt/dist/pages/runtime/router.options.js"],"sourcesContent":["import { useNuxtApp } from \"#app/nuxt\";\nimport { isChangingPage } from \"#app/components/utils\";\nimport { useRouter } from \"#app/composables/router\";\nimport { appPageTransition as defaultPageTransition } from \"#build/nuxt.config.mjs\";\nexport default {\n  scrollBehavior(to, from, savedPosition) {\n    const nuxtApp = useNuxtApp();\n    const behavior = useRouter().options?.scrollBehaviorType ?? \"auto\";\n    let position = savedPosition || void 0;\n    const routeAllowsScrollToTop = typeof to.meta.scrollToTop === \"function\" ? to.meta.scrollToTop(to, from) : to.meta.scrollToTop;\n    if (!position && from && to && routeAllowsScrollToTop !== false && isChangingPage(to, from)) {\n      position = { left: 0, top: 0 };\n    }\n    if (to.path === from.path) {\n      if (from.hash && !to.hash) {\n        return { left: 0, top: 0 };\n      }\n      if (to.hash) {\n        return { el: to.hash, top: _getHashElementScrollMarginTop(to.hash), behavior };\n      }\n      return false;\n    }\n    const hasTransition = (route) => !!(route.meta.pageTransition ?? defaultPageTransition);\n    const hookToWait = hasTransition(from) && hasTransition(to) ? \"page:transition:finish\" : \"page:loading:end\";\n    return new Promise((resolve) => {\n      nuxtApp.hooks.hookOnce(hookToWait, () => {\n        requestAnimationFrame(() => resolve(_calculatePosition(to, \"instant\", position)));\n      });\n    });\n  }\n};\nfunction _getHashElementScrollMarginTop(selector) {\n  try {\n    const elem = document.querySelector(selector);\n    if (elem) {\n      return (Number.parseFloat(getComputedStyle(elem).scrollMarginTop) || 0) + (Number.parseFloat(getComputedStyle(document.documentElement).scrollPaddingTop) || 0);\n    }\n  } catch {\n  }\n  return 0;\n}\nfunction _calculatePosition(to, scrollBehaviorType, position) {\n  if (position) {\n    return position;\n  }\n  if (to.hash) {\n    return {\n      el: to.hash,\n      top: _getHashElementScrollMarginTop(to.hash),\n      behavior: scrollBehaviorType\n    };\n  }\n  return { left: 0, top: 0, behavior: scrollBehaviorType };\n}\n"],"names":["routerOptions0","to","from","savedPosition","nuxtApp","useNuxtApp","behavior","_a","useRouter","position","routeAllowsScrollToTop","isChangingPage","_getHashElementScrollMarginTop","hasTransition","route","defaultPageTransition","hookToWait","resolve","_calculatePosition","selector","elem","scrollBehaviorType"],"mappings":"8RAIA,MAAeA,EAAA,CACb,eAAeC,EAAIC,EAAMC,EAAe,OACtC,MAAMC,EAAUC,EAAW,EACrBC,IAAWC,EAAAC,EAAA,EAAY,UAAZ,YAAAD,EAAqB,qBAAsB,OAC5D,IAAIE,EAAWN,GAAiB,OAChC,MAAMO,EAAyB,OAAOT,EAAG,KAAK,aAAgB,WAAaA,EAAG,KAAK,YAAYA,EAAIC,CAAI,EAAID,EAAG,KAAK,YAI/G,GAHA,CAACQ,GAAYP,GAAQD,GAAMS,IAA2B,IAASC,EAAeV,EAAIC,CAAI,IACxFO,EAAW,CAAE,KAAM,EAAG,IAAK,CAAE,GAE3BR,EAAG,OAASC,EAAK,KACnB,OAAIA,EAAK,MAAQ,CAACD,EAAG,KACZ,CAAE,KAAM,EAAG,IAAK,CAAE,EAEvBA,EAAG,KACE,CAAE,GAAIA,EAAG,KAAM,IAAKW,EAA+BX,EAAG,IAAI,EAAG,SAAAK,CAAS,EAExE,GAET,MAAMO,EAAiBC,GAAU,CAAC,EAAEA,EAAM,KAAK,gBAAkBC,GAC3DC,EAAaH,EAAcX,CAAI,GAAKW,EAAcZ,CAAE,EAAI,yBAA2B,mBAClF,OAAA,IAAI,QAASgB,GAAY,CACtBb,EAAA,MAAM,SAASY,EAAY,IAAM,CACvC,sBAAsB,IAAMC,EAAQC,EAAmBjB,EAAI,UAAWQ,CAAQ,CAAC,CAAC,CAAA,CACjF,CAAA,CACF,CAAA,CAEL,EACA,SAASG,EAA+BO,EAAU,CAC5C,GAAA,CACI,MAAAC,EAAgB,SAAA,cAAcD,CAAQ,EAC5C,GAAIC,EACF,OAAQ,OAAO,WAAW,iBAAiBA,CAAI,EAAE,eAAe,GAAK,IAAM,OAAO,WAAW,iBAAiB,SAAS,eAAe,EAAE,gBAAgB,GAAK,EAC/J,MACM,CAAA,CAED,MAAA,EACT,CACA,SAASF,EAAmBjB,EAAIoB,EAAoBZ,EAAU,CAC5D,OAAIA,IAGAR,EAAG,KACE,CACL,GAAIA,EAAG,KACP,IAAKW,EAA+BX,EAAG,IAAI,EAC3C,SAAUoB,CACZ,EAEK,CAAE,KAAM,EAAG,IAAK,EAAG,SAAUA,CAAmB,EACzD","x_google_ignoreList":[0]}