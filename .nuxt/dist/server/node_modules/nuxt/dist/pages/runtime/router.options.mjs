import{useNuxtApp as c}from"../../app/nuxt.mjs";import{isChangingPage as m}from"../../app/components/utils.mjs";import{useRouter as f}from"../../app/composables/router.mjs";import{appPageTransition as T}from"../../../../../_virtual/virtual_nuxt_F__TravelinAgency_.nuxt_nuxt.config.mjs";const P={scrollBehavior(e,o,t){var i;const l=c(),p=((i=f().options)==null?void 0:i.scrollBehaviorType)??"auto";let r=t||void 0;const h=typeof e.meta.scrollToTop=="function"?e.meta.scrollToTop(e,o):e.meta.scrollToTop;if(!r&&o&&e&&h!==!1&&m(e,o)&&(r={left:0,top:0}),e.path===o.path)return o.hash&&!e.hash?{left:0,top:0}:e.hash?{el:e.hash,top:s(e.hash),behavior:p}:!1;const n=a=>!!(a.meta.pageTransition??T),u=n(o)&&n(e)?"page:transition:finish":"page:loading:end";return new Promise(a=>{l.hooks.hookOnce(u,()=>{requestAnimationFrame(()=>a(g(e,"instant",r)))})})}};function s(e){try{const o=(void 0).querySelector(e);if(o)return(Number.parseFloat(getComputedStyle(o).scrollMarginTop)||0)+(Number.parseFloat(getComputedStyle((void 0).documentElement).scrollPaddingTop)||0)}catch{}return 0}function g(e,o,t){return t||(e.hash?{el:e.hash,top:s(e.hash),behavior:o}:{left:0,top:0,behavior:o})}export{P as default};
//# sourceMappingURL=router.options.mjs.map
