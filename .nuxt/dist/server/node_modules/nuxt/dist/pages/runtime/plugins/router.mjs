import{executeAsync as y}from"F:/TravelinAgency/node_modules/unctx/dist/index.mjs";import{shallowRef as N,shallowReactive as j,reactive as F,isReadonly as I}from"vue";import{createMemoryHistory as S,createRouter as q,START_LOCATION as T}from"vue-router";import{createError as _}from"F:/TravelinAgency/node_modules/h3/dist/index.mjs";import{toArray as z}from"../utils.mjs";import{getRouteRules as D}from"../../../app/composables/manifest.mjs";import{defineNuxtPlugin as G,useRuntimeConfig as J}from"../../../app/nuxt.mjs";import{useError as K,showError as m,isNuxtError as Q}from"../../../app/composables/error.mjs";import{navigateTo as V}from"../../../app/composables/router.mjs";import E,{handleHotUpdate as X}from"../../../../../../_virtual/virtual_nuxt_F__TravelinAgency_.nuxt_routes.mjs";import n from"../../../../../../_virtual/virtual_nuxt_F__TravelinAgency_.nuxt_router.options.mjs";import{globalMiddleware as Y,namedMiddleware as Z}from"../../../../../../_virtual/virtual_nuxt_F__TravelinAgency_.nuxt_middleware.mjs";const ce=G({name:"nuxt:router",enforce:"pre",async setup(e){var B,H,O,L;let s,d,M=J().app.baseURL;const U=((H=(B=n).history)==null?void 0:H.call(B,M))??S(M),$=n.routes?([s,d]=y(()=>n.routes(E)),s=await s,d(),s??E):E;let b;const r=q({...n,scrollBehavior:(t,l,a)=>{if(l===T){b=a;return}if(n.scrollBehavior){if(r.options.scrollBehavior=n.scrollBehavior,"scrollRestoration"in(void 0).history){const f=r.beforeEach(()=>{f(),(void 0).history.scrollRestoration="manual"})}return n.scrollBehavior(t,T,b||a)}},history:U,routes:$});X(r,n.routes?n.routes:t=>t),e.vueApp.use(r);const P=N(r.currentRoute.value);r.afterEach((t,l)=>{P.value=l}),Object.defineProperty(e.vueApp.config.globalProperties,"previousRoute",{get:()=>P.value});const g=e.ssrContext.url,v=N(r.currentRoute.value),R=()=>{v.value=r.currentRoute.value};e.hook("page:finish",R),r.afterEach((t,l)=>{var a,f,h,u;((f=(a=t.matched[0])==null?void 0:a.components)==null?void 0:f.default)===((u=(h=l.matched[0])==null?void 0:h.components)==null?void 0:u.default)&&R()});const k={};for(const t in v.value)Object.defineProperty(k,t,{get:()=>v.value[t],enumerable:!0});e._route=j(k),e._middleware||(e._middleware={global:[],named:{}}),K(),(O=e.ssrContext)!=null&&O.islandContext||r.afterEach(async(t,l,a)=>{delete e._processingMiddleware,a&&await e.callHook("page:loading:end"),(a==null?void 0:a.type)!==4&&t.redirectedFrom&&t.fullPath!==g&&await e.runWithContext(()=>V(t.fullPath||"/"))});try{[s,d]=y(()=>r.push(g)),await s,d(),[s,d]=y(()=>r.isReady()),await s,d()}catch(t){[s,d]=y(()=>e.runWithContext(()=>m(t))),await s,d()}const C=r.currentRoute.value;if(R(),(L=e.ssrContext)!=null&&L.islandContext)return{provide:{router:r}};const W=e.payload.state._layout;return r.beforeEach(async(t,l)=>{var a,f,h;if(await e.callHook("page:loading:start"),t.meta=F(t.meta),e.isHydrating&&W&&!I(t.meta.layout)&&(t.meta.layout=W),e._processingMiddleware=!0,!((a=e.ssrContext)!=null&&a.islandContext)){const u=new Set([...Y,...e._middleware.global]);for(const i of t.matched){const c=i.meta.middleware;if(c)for(const o of z(c))u.add(o)}{const i=await e.runWithContext(()=>D({path:t.path}));if(i.appMiddleware)for(const c in i.appMiddleware)i.appMiddleware[c]?u.add(c):u.delete(c)}for(const i of u){const c=typeof i=="string"?e._middleware.named[i]||await((h=(f=Z)[i])==null?void 0:h.call(f).then(o=>o.default||o)):i;if(!c)throw new Error(`Unknown route middleware: '${i}'.`);try{const o=await e.runWithContext(()=>c(t,l));if(o===!1||o instanceof Error){const w=o||_({statusCode:404,statusMessage:`Page Not Found: ${g}`});return await e.runWithContext(()=>m(w)),!1}if(o===!0)continue;if(o===!1)return o;if(o)return Q(o)&&o.fatal&&await e.runWithContext(()=>m(o)),o}catch(o){const w=_(o);return w.fatal&&await e.runWithContext(()=>m(w)),w}}}}),r.onError(async()=>{delete e._processingMiddleware,await e.callHook("page:loading:end")}),r.afterEach(async(t,l)=>{t.matched.length===0&&await e.runWithContext(()=>m(_({statusCode:404,fatal:!1,statusMessage:`Page not found: ${t.fullPath}`,data:{path:t.fullPath}})))}),e.hooks.hookOnce("app:created",async()=>{try{"name"in C&&(C.name=void 0),await r.replace({...C,force:!0}),r.options.scrollBehavior=n.scrollBehavior}catch(t){await e.runWithContext(()=>m(t))}}),{provide:{router:r}}}});export{ce as default};
//# sourceMappingURL=router.mjs.map
