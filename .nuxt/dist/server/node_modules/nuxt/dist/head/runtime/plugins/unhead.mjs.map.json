{"file":"unhead.mjs","mappings":"yDAGA,MAAAA,EAAeC,EAAiB,CAC9B,KAAM,YACN,QAAS,MACT,MAAMC,EAAS,CACb,MAAMC,EAA4BD,EAAQ,WAAW,KACrDA,EAAQ,OAAO,IAAIC,CAAI,CAqB3B,CACA,CAAC","names":["unhead_k2P3m_ZDyjlr2mMYnoDPwavjsDN8hBlk9cFai0bbopU","defineNuxtPlugin","nuxtApp","head"],"sources":["../../../../../../../../../node_modules/nuxt/dist/head/runtime/plugins/unhead.js"],"sourcesContent":["import { createHead as createClientHead, renderDOMHead } from \"@unhead/vue/client\";\nimport { defineNuxtPlugin } from \"#app/nuxt\";\nimport unheadOptions from \"#build/unhead-options.mjs\";\nexport default defineNuxtPlugin({\n  name: \"nuxt:head\",\n  enforce: \"pre\",\n  setup(nuxtApp) {\n    const head = import.meta.server ? nuxtApp.ssrContext.head : createClientHead(unheadOptions);\n    nuxtApp.vueApp.use(head);\n    if (import.meta.client) {\n      let pauseDOMUpdates = true;\n      const syncHead = async () => {\n        pauseDOMUpdates = false;\n        await renderDOMHead(head);\n      };\n      head.hooks.hook(\"dom:beforeRender\", (context) => {\n        context.shouldRender = !pauseDOMUpdates;\n      });\n      nuxtApp.hooks.hook(\"page:start\", () => {\n        pauseDOMUpdates = true;\n      });\n      nuxtApp.hooks.hook(\"page:finish\", () => {\n        if (!nuxtApp.isHydrating) {\n          syncHead();\n        }\n      });\n      nuxtApp.hooks.hook(\"app:error\", syncHead);\n      nuxtApp.hooks.hook(\"app:suspense:resolve\", syncHead);\n    }\n  }\n});\n"],"version":3}