{"file":"v3.mjs","mappings":"qPAWO,SAASA,EAAWC,EAAS,OAClC,MAAMC,EAAOD,GAAWE,EAAe,EACvC,QAAOC,EAAAF,GAAA,YAAAA,EAAM,aAAN,YAAAE,EAAkB,QAAQF,GAAA,YAAAA,EAAM,eAAe,IAAM,CAC1D,GAAIG,EAAmB,EACrB,OAAOC,EAAOC,CAAU,CAE9B,GACA,CACO,SAASC,EAAQC,EAAOC,EAAU,GAAI,CAC3C,MAAMC,EAAOX,EAAWU,EAAQ,IAAI,EACpC,GAAIC,EACF,OAAOC,EAASH,EAAO,CAAE,KAAAE,EAAM,GAAGD,CAAO,CAAE,CAE/C,CAaO,SAASG,EAAcJ,EAAOC,EAAU,GAAI,CACjD,MAAMC,EAAOX,EAAWU,EAAQ,IAAI,EACpC,GAAIC,EACF,OAAOG,EAAWL,EAAO,CAAE,KAAAE,EAAM,GAAGD,CAAO,CAAE,CAEjD","names":["injectHead","nuxtApp","nuxt","tryUseNuxtApp","_a","hasInjectionContext","inject","headSymbol","useHead","input","options","head","headCore","useServerHead","serverHead"],"sources":["../../../../../../../../../node_modules/nuxt/dist/head/runtime/composables/v3.js"],"sourcesContent":["import { hasInjectionContext, inject } from \"vue\";\nimport {\n  useHead as headCore,\n  useHeadSafe as headSafe,\n  headSymbol,\n  useSeoMeta as seoMeta,\n  useServerHead as serverHead,\n  useServerHeadSafe as serverHeadSafe,\n  useServerSeoMeta as serverSeoMeta\n} from \"@unhead/vue\";\nimport { tryUseNuxtApp } from \"#app/nuxt\";\nexport function injectHead(nuxtApp) {\n  const nuxt = nuxtApp || tryUseNuxtApp();\n  return nuxt?.ssrContext?.head || nuxt?.runWithContext(() => {\n    if (hasInjectionContext()) {\n      return inject(headSymbol);\n    }\n  });\n}\nexport function useHead(input, options = {}) {\n  const head = injectHead(options.nuxt);\n  if (head) {\n    return headCore(input, { head, ...options });\n  }\n}\nexport function useHeadSafe(input, options = {}) {\n  const head = injectHead(options.nuxt);\n  if (head) {\n    return headSafe(input, { head, ...options });\n  }\n}\nexport function useSeoMeta(input, options = {}) {\n  const head = injectHead(options.nuxt);\n  if (head) {\n    return seoMeta(input, { head, ...options });\n  }\n}\nexport function useServerHead(input, options = {}) {\n  const head = injectHead(options.nuxt);\n  if (head) {\n    return serverHead(input, { head, ...options });\n  }\n}\nexport function useServerHeadSafe(input, options = {}) {\n  const head = injectHead(options.nuxt);\n  if (head) {\n    return serverHeadSafe(input, { head, ...options });\n  }\n}\nexport function useServerSeoMeta(input, options = {}) {\n  const head = injectHead(options.nuxt);\n  if (head) {\n    return serverSeoMeta(input, { head, ...options });\n  }\n}\n"],"version":3}