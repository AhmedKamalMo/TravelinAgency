{"file":"shared.mjs","mappings":"g3BAYO,SAASA,EAAWC,EAAS,CAClC,MAAMC,EAAOC,EAAY,EACnBC,EAASC,EAAoB,EAC7BC,EAAQC,EAAU,EAClBC,EAAaC,EAAe,EAC5BC,EAAcC,EAAuB,CACzC,SAAU,GACV,SAAU,EACd,CAAG,EACKC,EAAaD,EAAuB,CACxC,UAAW,GACX,SAAU,GACV,SAAU,EACd,CAAG,EACKE,EAAYC,EAAS,IAAM,OAC/B,MAAO,CACL,KAAGC,EAAAT,EAAM,OAAN,YAAAS,EAAY,YAAa,CAAE,EAC9B,GAAGP,EACH,IAAKI,EAAWN,EAAM,IAAI,EAC1B,KAAMU,EAAqBR,EAAW,GAAG,EACzC,WAAYA,EAAW,eAAiBA,EAAW,cACnD,KAAME,EAAYJ,EAAM,IAAI,CAC7B,CACL,CAAG,EACDJ,EAAK,KAAK,CAAE,eAAgB,CAAE,UAAAW,CAAW,CAAA,CAAE,EAC3CX,EAAK,IACHe,EAAsB,CAAE,EAAE,SAAY,CACpC,MAAMC,EAAO,CAAE,EACf,aAAMjB,EAAQ,MAAM,SAAS,kBAAmBiB,CAAI,EAC7CA,CACb,EAAO,CACD,OAAQd,EAAO,OACf,cAAeI,EAAW,aAC3B,CAAA,CACF,CACH,CACO,SAASW,GAA4B,CAC1C,MAAMf,EAASC,EAAoB,EAC7BG,EAAaC,EAAe,EAClC,GAAIL,EAAO,UAAYI,EAAW,SAAU,CAC1C,MAAMY,EAAWhB,EAAO,UAAYI,EAAW,SAC/C,IAAIa,EAAkB,CACpB,KAAMb,EAAW,KACjB,IAAKA,EAAW,GACjB,EACGc,EAQJ,GAPI,OAAOF,GAAa,UACtBC,EAAkBE,EAAKH,EAAUC,CAAe,EAChDC,EAAeF,EAAS,KACxB,OAAOC,EAAgB,MAEvBC,EAAeF,EAEbZ,EAAW,QAAS,CACtB,MAAMgB,EAAKhB,EAAW,QAAQ,WAAW,GAAG,EAAIA,EAAW,QAAQ,MAAM,CAAC,EAAIA,EAAW,QACzFa,EAAgB,OAAS,CACvB,uBAAuBG,CAAE,EAC1B,CACP,CACIH,EAAgB,UAAYA,EAAgB,WAAaI,EAAUH,CAAY,EAC/EI,EAAa,CAACL,CAAe,CAAC,CAClC,CACA","names":["initPlugin","nuxtApp","head","injectHead","config","useSchemaOrgConfig","route","useRoute","siteConfig","useSiteConfig","resolvePath","createSitePathResolver","resolveUrl","schemaOrg","computed","_a","withoutTrailingSlash","SchemaOrgUnheadPlugin","meta","maybeAddIdentitySchemaOrg","identity","identityPayload","identityType","defu","id","camelCase","useSchemaOrg"],"sources":["../../../../../../../../../node_modules/nuxt-schema-org/dist/runtime/app/utils/shared.js"],"sourcesContent":["import {\n  createSitePathResolver,\n  useSiteConfig\n} from \"#imports\";\nimport { SchemaOrgUnheadPlugin, useSchemaOrg } from \"@unhead/schema-org\";\nimport { injectHead } from \"@unhead/vue\";\nimport { defu } from \"defu\";\nimport { useRoute } from \"nuxt/app\";\nimport { camelCase } from \"scule\";\nimport { withoutTrailingSlash } from \"ufo\";\nimport { computed } from \"vue\";\nimport { useSchemaOrgConfig } from \"./config.js\";\nexport function initPlugin(nuxtApp) {\n  const head = injectHead();\n  const config = useSchemaOrgConfig();\n  const route = useRoute();\n  const siteConfig = useSiteConfig();\n  const resolvePath = createSitePathResolver({\n    absolute: false,\n    withBase: true\n  });\n  const resolveUrl = createSitePathResolver({\n    canonical: true,\n    absolute: true,\n    withBase: true\n  });\n  const schemaOrg = computed(() => {\n    return {\n      ...route.meta?.schemaOrg || {},\n      ...siteConfig,\n      url: resolveUrl(route.path),\n      host: withoutTrailingSlash(siteConfig.url),\n      inLanguage: siteConfig.currentLocale || siteConfig.defaultLocale,\n      path: resolvePath(route.path)\n    };\n  });\n  head.push({ templateParams: { schemaOrg } });\n  head.use(\n    SchemaOrgUnheadPlugin({}, async () => {\n      const meta = {};\n      await nuxtApp.hooks.callHook(\"schema-org:meta\", meta);\n      return meta;\n    }, {\n      minify: config.minify,\n      trailingSlash: siteConfig.trailingSlash\n    })\n  );\n}\nexport function maybeAddIdentitySchemaOrg() {\n  const config = useSchemaOrgConfig();\n  const siteConfig = useSiteConfig();\n  if (config.identity || siteConfig.identity) {\n    const identity = config.identity || siteConfig.identity;\n    let identityPayload = {\n      name: siteConfig.name,\n      url: siteConfig.url\n    };\n    let identityType;\n    if (typeof identity !== \"string\") {\n      identityPayload = defu(identity, identityPayload);\n      identityType = identity.type;\n      delete identityPayload.type;\n    } else {\n      identityType = identity;\n    }\n    if (siteConfig.twitter) {\n      const id = siteConfig.twitter.startsWith(\"@\") ? siteConfig.twitter.slice(1) : siteConfig.twitter;\n      identityPayload.sameAs = [\n        `https://twitter.com/${id}`\n      ];\n    }\n    identityPayload._resolver = identityPayload._resolver || camelCase(identityType);\n    useSchemaOrg([identityPayload]);\n  }\n}\n"],"version":3}