{"version":3,"file":"routing.mjs","sources":["../../../../../../../../../../node_modules/@nuxtjs/i18n/dist/runtime/routing/compatibles/routing.js"],"sourcesContent":["import { isString, assign } from \"@intlify/shared\";\nimport { hasProtocol, parsePath, parseQuery, withTrailingSlash, withoutTrailingSlash } from \"ufo\";\nimport { DEFAULT_DYNAMIC_PARAMS_KEY } from \"#build/i18n.options.mjs\";\nimport { unref } from \"#imports\";\nimport { resolve, routeToObject } from \"./utils.js\";\nimport { getLocale, getLocaleRouteName, getRouteName } from \"../utils.js\";\nimport { extendPrefixable, extendSwitchLocalePathIntercepter } from \"../../utils.js\";\nconst RESOLVED_PREFIXED = /* @__PURE__ */ new Set([\"prefix_and_default\", \"prefix_except_default\"]);\nfunction prefixable(options) {\n  const { currentLocale, defaultLocale, strategy } = options;\n  const isDefaultLocale = currentLocale === defaultLocale;\n  return !(isDefaultLocale && RESOLVED_PREFIXED.has(strategy)) && // no prefix for any language\n  !(strategy === \"no_prefix\");\n}\nexport const DefaultPrefixable = prefixable;\nexport function getRouteBaseName(common, givenRoute) {\n  const { routesNameSeparator } = common.runtimeConfig.public.i18n;\n  const route = unref(givenRoute);\n  if (route == null || !route.name) {\n    return;\n  }\n  const name = getRouteName(route.name);\n  return name.split(routesNameSeparator)[0];\n}\nexport function localePath(common, route, locale) {\n  if (typeof route === \"string\" && hasProtocol(route, { acceptRelative: true })) {\n    return route;\n  }\n  const localizedRoute = resolveRoute(common, route, locale);\n  return localizedRoute == null ? \"\" : localizedRoute.redirectedFrom?.fullPath || localizedRoute.fullPath;\n}\nexport function localeRoute(common, route, locale) {\n  const resolved = resolveRoute(common, route, locale);\n  return resolved ?? void 0;\n}\nexport function localeLocation(common, route, locale) {\n  const resolved = resolveRoute(common, route, locale);\n  return resolved ?? void 0;\n}\nexport function resolveRoute(common, route, locale) {\n  const { router, i18n } = common;\n  const _locale = locale || getLocale(i18n);\n  const { defaultLocale, strategy, trailingSlash } = common.runtimeConfig.public.i18n;\n  const prefixable2 = extendPrefixable(common.runtimeConfig);\n  let _route;\n  if (isString(route)) {\n    if (route[0] === \"/\") {\n      const { pathname: path, search, hash } = parsePath(route);\n      const query = parseQuery(search);\n      _route = { path, query, hash };\n    } else {\n      _route = { name: route };\n    }\n  } else {\n    _route = route;\n  }\n  let localizedRoute = assign({}, _route);\n  const isRouteLocationPathRaw = (val) => \"path\" in val && !!val.path && !(\"name\" in val);\n  if (isRouteLocationPathRaw(localizedRoute)) {\n    const resolvedRoute = resolve(common, localizedRoute, strategy, _locale);\n    const resolvedRouteName = getRouteBaseName(common, resolvedRoute);\n    if (isString(resolvedRouteName)) {\n      localizedRoute = {\n        name: getLocaleRouteName(resolvedRouteName, _locale, common.runtimeConfig.public.i18n),\n        // @ts-ignore\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment -- FIXME\n        params: resolvedRoute.params,\n        query: resolvedRoute.query,\n        hash: resolvedRoute.hash\n      };\n      localizedRoute.state = resolvedRoute.state;\n    } else {\n      if (prefixable2({ currentLocale: _locale, defaultLocale, strategy })) {\n        localizedRoute.path = `/${_locale}${localizedRoute.path}`;\n      }\n      localizedRoute.path = trailingSlash ? withTrailingSlash(localizedRoute.path, true) : withoutTrailingSlash(localizedRoute.path, true);\n    }\n  } else {\n    if (!localizedRoute.name && !(\"path\" in localizedRoute)) {\n      localizedRoute.name = getRouteBaseName(common, router.currentRoute.value);\n    }\n    localizedRoute.name = getLocaleRouteName(localizedRoute.name, _locale, common.runtimeConfig.public.i18n);\n  }\n  try {\n    const resolvedRoute = router.resolve(localizedRoute);\n    if (resolvedRoute.name) {\n      return resolvedRoute;\n    }\n    return router.resolve(route);\n  } catch (e) {\n    if (typeof e === \"object\" && \"type\" in e && e.type === 1) {\n      return null;\n    }\n  }\n}\nexport const DefaultSwitchLocalePathIntercepter = (path) => path;\nfunction getLocalizableMetaFromDynamicParams(common, route) {\n  if (common.runtimeConfig.public.i18n.experimental.switchLocalePathLinkSSR) {\n    return unref(common.metaState.value);\n  }\n  const meta = route.meta || {};\n  return unref(meta)?.[DEFAULT_DYNAMIC_PARAMS_KEY] || {};\n}\nexport function switchLocalePath(common, locale, _route) {\n  const route = _route ?? common.router.currentRoute.value;\n  const name = getRouteBaseName(common, route);\n  if (!name) {\n    return \"\";\n  }\n  const switchLocalePathIntercepter = extendSwitchLocalePathIntercepter(common.runtimeConfig);\n  const routeCopy = routeToObject(route);\n  const resolvedParams = getLocalizableMetaFromDynamicParams(common, route)[locale];\n  const baseRoute = { ...routeCopy, name, params: { ...routeCopy.params, ...resolvedParams } };\n  const path = localePath(common, baseRoute, locale);\n  return switchLocalePathIntercepter(path, locale);\n}\n"],"names":["RESOLVED_PREFIXED","prefixable","options","currentLocale","defaultLocale","strategy","DefaultPrefixable","getRouteBaseName","common","givenRoute","routesNameSeparator","route","unref","getRouteName","localePath","locale","hasProtocol","localizedRoute","resolveRoute","_a","localeRoute","localeLocation","router","i18n","_locale","getLocale","trailingSlash","prefixable2","extendPrefixable","_route","isString","path","search","hash","parsePath","query","parseQuery","assign","val","resolvedRoute","resolve","resolvedRouteName","getLocaleRouteName","withTrailingSlash","withoutTrailingSlash","e","DefaultSwitchLocalePathIntercepter","getLocalizableMetaFromDynamicParams","meta","DEFAULT_DYNAMIC_PARAMS_KEY","switchLocalePath","name","switchLocalePathIntercepter","extendSwitchLocalePathIntercepter","routeCopy","routeToObject","resolvedParams","baseRoute"],"mappings":"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","x_google_ignoreList":[0]}