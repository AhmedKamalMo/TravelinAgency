{"file":"i18n.mjs","mappings":"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","names":["extendI18n","i18n","locales","localeCodes","baseUrl","hooks","context","scope","effectScope","orgInstall","vue","options","pluginOptions","isPluginOptions","assign","orgComposerExtend","localComposer","globalComposer2","getComposer","computed","orgComposerDispose","isFunction","orgVueI18nExtend","vueI18n","extendVueI18n","orgVueI18nDispose","globalComposer","extendComposer","isVueI18n","app","exported","extendExportedGlobal","common","initCommonComposableOptions","wrapComposable","getRouteBaseName","resolveRoute","localePath","localeRoute","localeLocation","switchLocalePath","localeHead","unmountApp","composer","_locales","ref","_localeCodes","_baseUrl","resolveBaseUrl","extendPropertyDescriptors","hook","properties","property","key","descriptor","g","c","isObject"],"sources":["../../../../../../../../../../node_modules/@nuxtjs/i18n/dist/runtime/routing/extends/i18n.js"],"sourcesContent":["import { isObject, isFunction, assign } from \"@intlify/shared\";\nimport { computed, effectScope, ref, watch } from \"#imports\";\nimport { resolveBaseUrl, isVueI18n, getComposer, inBrowser } from \"../utils.js\";\nimport {\n  getRouteBaseName,\n  localeHead,\n  localeLocation,\n  localePath,\n  localeRoute,\n  resolveRoute,\n  switchLocalePath\n} from \"../compatibles/index.js\";\nimport { wrapComposable } from \"../../internal.js\";\nimport { initCommonComposableOptions } from \"../../utils.js\";\nexport function extendI18n(i18n, {\n  locales = [],\n  localeCodes = [],\n  baseUrl = \"\",\n  hooks = {},\n  context = {}\n} = {}) {\n  const scope = effectScope();\n  const orgInstall = i18n.install;\n  i18n.install = (vue, ...options) => {\n    const pluginOptions = isPluginOptions(options[0]) ? assign({}, options[0]) : { inject: true };\n    if (pluginOptions.inject == null) {\n      pluginOptions.inject = true;\n    }\n    const orgComposerExtend = pluginOptions.__composerExtend;\n    pluginOptions.__composerExtend = (localComposer) => {\n      const globalComposer2 = getComposer(i18n);\n      localComposer.locales = computed(() => globalComposer2.locales.value);\n      localComposer.localeCodes = computed(() => globalComposer2.localeCodes.value);\n      localComposer.baseUrl = computed(() => globalComposer2.baseUrl.value);\n      let orgComposerDispose;\n      if (isFunction(orgComposerExtend)) {\n        orgComposerDispose = Reflect.apply(orgComposerExtend, pluginOptions, [localComposer]);\n      }\n      return () => {\n        orgComposerDispose && orgComposerDispose();\n      };\n    };\n    if (i18n.mode === \"legacy\") {\n      const orgVueI18nExtend = pluginOptions.__vueI18nExtend;\n      pluginOptions.__vueI18nExtend = (vueI18n) => {\n        extendVueI18n(vueI18n, hooks.onExtendVueI18n);\n        let orgVueI18nDispose;\n        if (isFunction(orgVueI18nExtend)) {\n          orgVueI18nDispose = Reflect.apply(orgVueI18nExtend, pluginOptions, [vueI18n]);\n        }\n        return () => {\n          orgVueI18nDispose && orgVueI18nDispose();\n        };\n      };\n    }\n    options[0] = pluginOptions;\n    Reflect.apply(orgInstall, i18n, [vue, ...options]);\n    const globalComposer = getComposer(i18n);\n    scope.run(() => {\n      extendComposer(globalComposer, { locales, localeCodes, baseUrl, hooks, context });\n      if (i18n.mode === \"legacy\" && isVueI18n(i18n.global)) {\n        extendVueI18n(i18n.global, hooks.onExtendVueI18n);\n      }\n    });\n    const app = vue;\n    const exported = i18n.mode === \"composition\" ? app.config.globalProperties.$i18n : null;\n    if (exported) {\n      extendExportedGlobal(exported, globalComposer, hooks.onExtendExportedGlobal);\n    }\n    if (pluginOptions.inject) {\n      const common = initCommonComposableOptions(i18n);\n      vue.mixin({\n        methods: {\n          getRouteBaseName: wrapComposable(getRouteBaseName, common),\n          resolveRoute: wrapComposable(resolveRoute, common),\n          localePath: wrapComposable(localePath, common),\n          localeRoute: wrapComposable(localeRoute, common),\n          localeLocation: wrapComposable(localeLocation, common),\n          switchLocalePath: wrapComposable(switchLocalePath, common),\n          localeHead: wrapComposable(localeHead, common)\n        }\n      });\n    }\n    if (app.unmount) {\n      const unmountApp = app.unmount;\n      app.unmount = () => {\n        scope.stop();\n        unmountApp();\n      };\n    }\n  };\n  return scope;\n}\nfunction extendComposer(composer, options) {\n  const { locales, localeCodes, baseUrl, context } = options;\n  const _locales = ref(locales);\n  const _localeCodes = ref(localeCodes);\n  const _baseUrl = ref(\"\");\n  composer.locales = computed(() => _locales.value);\n  composer.localeCodes = computed(() => _localeCodes.value);\n  composer.baseUrl = computed(() => _baseUrl.value);\n  if (inBrowser) {\n    watch(\n      composer.locale,\n      () => {\n        _baseUrl.value = resolveBaseUrl(baseUrl, context);\n      },\n      { immediate: true }\n    );\n  } else {\n    _baseUrl.value = resolveBaseUrl(baseUrl, context);\n  }\n  if (options.hooks && options.hooks.onExtendComposer) {\n    options.hooks.onExtendComposer(composer);\n  }\n}\nfunction extendPropertyDescriptors(composer, exported, hook) {\n  const properties = [\n    {\n      locales: {\n        get() {\n          return composer.locales.value;\n        }\n      },\n      localeCodes: {\n        get() {\n          return composer.localeCodes.value;\n        }\n      },\n      baseUrl: {\n        get() {\n          return composer.baseUrl.value;\n        }\n      }\n    }\n  ];\n  hook && properties.push(hook(composer));\n  for (const property of properties) {\n    for (const [key, descriptor] of Object.entries(property)) {\n      Object.defineProperty(exported, key, descriptor);\n    }\n  }\n}\nfunction extendExportedGlobal(exported, g, hook) {\n  extendPropertyDescriptors(g, exported, hook);\n}\nfunction extendVueI18n(vueI18n, hook) {\n  const c = getComposer(vueI18n);\n  extendPropertyDescriptors(c, vueI18n, hook);\n}\nfunction isPluginOptions(options) {\n  return isObject(options) && (\"inject\" in options || \"__composerExtend\" in options || \"__vueI18nExtend\" in options);\n}\n"],"version":3}