#!/usr/bin/env node

import fs from 'fs';
import { execSync } from 'child_process';

console.log('🚀 DEPLOYING NUXT.JS FRONTEND TO DOMAIN');
console.log('========================================\n');

// Create a deployment script for the complete Nuxt.js frontend
const deployFrontend = `#!/bin/bash
echo "🚀 DEPLOYING NUXT.JS FRONTEND TO DOMAIN"
echo "========================================"

echo ""
echo "1. 🔍 Checking current build status..."
echo "--------------------------------------"
echo "Checking if output directory exists:"
ls -la output/ 2>/dev/null || echo "output/ directory not found"

echo ""
echo "2. 🔧 Building Nuxt.js application..."
echo "------------------------------------"
echo "Running npm run build..."
npm run build

echo ""
echo "3. 📁 Checking build output..."
echo "------------------------------"
echo "Checking output directory contents:"
ls -la output/ 2>/dev/null || echo "Build failed - no output directory"

echo ""
echo "4. 🚀 Deploying to GoDaddy server..."
echo "-----------------------------------"
echo "Copying build files to server..."

# Create a deployment package
echo "Creating deployment package..."
tar -czf nuxt-build.tar.gz output/

echo ""
echo "5. 📋 DEPLOYMENT COMMANDS FOR GODADDY SERVER:"
echo "============================================="
echo ""
echo "Run these commands on your GoDaddy server:"
echo ""
echo "# 1. Upload the build files (you'll need to upload nuxt-build.tar.gz)"
echo "# 2. Extract the build files"
echo "tar -xzf nuxt-build.tar.gz"
echo ""
echo "# 3. Copy the build files to the correct location"
echo "cp -r output/* ."
echo ""
echo "# 4. Set proper permissions"
echo "chmod -R 755 output/"
echo "chmod 644 output/*.html"
echo "chmod 644 output/*.css"
echo "chmod 644 output/*.js"
echo ""
echo "# 5. Update index.php to serve the Nuxt.js app"
echo "cat > index.php << 'EOF'"
echo "<?php"
echo "// Production index.php for Nuxt.js deployment"
echo "header('Content-Type: text/html; charset=utf-8');"
echo ""
echo "// Get the request URI"
echo "\$requestUri = \$_SERVER['REQUEST_URI'];"
echo "\$cleanUri = parse_url(\$requestUri, PHP_URL_PATH);"
echo ""
echo "// Remove query parameters for routing"
echo "\$cleanUri = strtok(\$cleanUri, '?');"
echo ""
echo "// Handle API routes first"
echo "if (strpos(\$cleanUri, '/api/') === 0) {"
echo "    if (file_exists(__DIR__ . '/api-handler.php')) {"
echo "        include __DIR__ . '/api-handler.php';"
echo "        exit;"
echo "    }"
echo "}"
echo ""
echo "// Handle IPX image optimization requests"
echo "if (strpos(\$cleanUri, '/_ipx/') === 0) {"
echo "    \$ipxPath = substr(\$cleanUri, 6);"
echo "    \$ipxPath = preg_replace('/[?&].*$/', '', \$ipxPath);"
echo "    "
echo "    if (strpos(\$ipxPath, 'http') === 0) {"
echo "        header('Location: ' . \$ipxPath, true, 302);"
echo "        exit;"
echo "    }"
echo "    "
echo "    \$imagePath = __DIR__ . \$ipxPath;"
echo "    if (file_exists(\$imagePath)) {"
echo "        \$mimeType = mime_content_type(\$imagePath);"
echo "        header('Content-Type: ' . \$mimeType);"
echo "        header('Cache-Control: public, max-age=31536000');"
echo "        readfile(\$imagePath);"
echo "        exit;"
echo "    }"
echo "    "
echo "    http_response_code(404);"
echo "    echo 'Image not found';"
echo "    exit;"
echo "}"
echo ""
echo "// Handle static files"
echo "\$staticExtensions = ['css', 'js', 'jpg', 'jpeg', 'png', 'gif', 'webp', 'svg', 'ico', 'woff', 'woff2', 'ttf', 'eot', 'mp4', 'webm', 'ogg', 'pdf', 'zip'];"
echo "\$fileExtension = strtolower(pathinfo(\$cleanUri, PATHINFO_EXTENSION));"
echo ""
echo "if (in_array(\$fileExtension, \$staticExtensions)) {"
echo "    \$possiblePaths = ["
echo "        __DIR__ . \$cleanUri,"
echo "        __DIR__ . '/public' . \$cleanUri,"
echo "        __DIR__ . '/output/public' . \$cleanUri,"
echo "        __DIR__ . '/dist' . \$cleanUri,"
echo "        __DIR__ . '/output' . \$cleanUri"
echo "    ];"
echo "    "
echo "    foreach (\$possiblePaths as \$filePath) {"
echo "        if (file_exists(\$filePath)) {"
echo "            if (in_array(\$fileExtension, ['css', 'js'])) {"
echo "                header('Content-Type: ' . (\$fileExtension === 'css' ? 'text/css' : 'application/javascript'));"
echo "                header('Cache-Control: public, max-age=31536000');"
echo "            } elseif (in_array(\$fileExtension, ['jpg', 'jpeg', 'png', 'gif', 'webp', 'svg', 'ico'])) {"
echo "                \$mimeType = mime_content_type(\$filePath);"
echo "                header('Content-Type: ' . \$mimeType);"
echo "                header('Cache-Control: public, max-age=31536000');"
echo "            } elseif (in_array(\$fileExtension, ['mp4', 'webm', 'ogg'])) {"
echo "                \$mimeType = mime_content_type(\$filePath);"
echo "                header('Content-Type: ' . \$mimeType);"
echo "                header('Cache-Control: public, max-age=31536000');"
echo "                header('Accept-Ranges: bytes');"
echo "            }"
echo "            "
echo "            readfile(\$filePath);"
echo "            exit;"
echo "        }"
echo "    }"
echo "    "
echo "    http_response_code(404);"
echo "    echo 'File not found: ' . \$cleanUri;"
echo "    exit;"
echo "}"
echo ""
echo "// Handle Nuxt.js static assets"
echo "if (strpos(\$cleanUri, '/_nuxt/') === 0) {"
echo "    \$nuxtPath = __DIR__ . '/output' . \$cleanUri;"
echo "    if (file_exists(\$nuxtPath)) {"
echo "        \$fileExtension = strtolower(pathinfo(\$nuxtPath, PATHINFO_EXTENSION));"
echo "        if (\$fileExtension === 'css') {"
echo "            header('Content-Type: text/css');"
echo "        } elseif (\$fileExtension === 'js') {"
echo "            header('Content-Type: application/javascript');"
echo "        }"
echo "        header('Cache-Control: public, max-age=31536000');"
echo "        readfile(\$nuxtPath);"
echo "        exit;"
echo "    }"
echo "}"
echo ""
echo "// Serve the main Nuxt.js application"
echo "\$nuxtFiles = ["
echo "    __DIR__ . '/output/index.html',"
echo "    __DIR__ . '/output/200.html',"
echo "    __DIR__ . '/dist/index.html'"
echo "];"
echo ""
echo "foreach (\$nuxtFiles as \$nuxtFile) {"
echo "    if (file_exists(\$nuxtFile)) {"
echo "        \$content = file_get_contents(\$nuxtFile);"
echo "        echo \$content;"
echo "        exit;"
echo "    }"
echo "}"
echo ""
echo "// Fallback"
echo "http_response_code(404);"
echo "echo 'Nuxt.js application not found. Please check your build files.';"
echo "?>"
echo "EOF"
echo ""
echo "# 6. Test the deployment"
echo "curl -k https://worldtripagency.com/"
echo ""
echo "✅ After running these commands, your domain will show the complete Nuxt.js website!"
`;

fs.writeFileSync('deploy-nuxt-frontend.sh', deployFrontend);
console.log('✅ Created: deploy-nuxt-frontend.sh');

console.log('\n📋 DEPLOYMENT STEPS:');
console.log('====================');
console.log('1. First, build the Nuxt.js application locally:');
console.log('');
console.log('   npm run build');
console.log('');
console.log('2. Then run the deployment script:');
console.log('');
console.log('   node deploy-nuxt-frontend.js');
console.log('');
console.log('3. Upload the generated nuxt-build.tar.gz to your GoDaddy server');
console.log('');
console.log('4. Run the deployment commands on your GoDaddy server');
console.log('');
console.log('🎯 This will deploy your complete Nuxt.js website to your domain!');
