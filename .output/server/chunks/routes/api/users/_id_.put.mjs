import{c as e,g as t,r as n,e as o}from"../../../_/nitro.mjs";import{executeQuery as s}from"../../../_/database.mjs";import"node:http";import"node:https";import"node:events";import"node:buffer";import"vue";import"node:fs";import"node:url";import"@iconify/utils";import"node:crypto";import"consola";import"ipx";import"node:path";import"mysql2/promise";import"bcryptjs";import"jsonwebtoken";const a=e((async e=>{try{const a=t(e,"id"),i=await n(e);if(!a)throw o({statusCode:400,statusMessage:"User ID is required"});const r=await s("\n      SELECT id FROM users WHERE id = ?\n    ",[a]);if(!r||0===r.length)throw o({statusCode:404,statusMessage:"User not found"});if(0===(await s("\n      UPDATE users SET\n        email = ?,\n        full_name = ?,\n        phone = ?,\n        role = ?,\n        status = ?,\n        email_verified = ?,\n        phone_verified = ?,\n        bio = ?,\n        date_of_birth = ?,\n        gender = ?,\n        nationality = ?,\n        address = ?,\n        city = ?,\n        country = ?,\n        postal_code = ?,\n        preferences = ?,\n        updated_at = CURRENT_TIMESTAMP\n      WHERE id = ?\n    ",[i.email,i.full_name,i.phone||null,i.role||"user",i.status||"active",i.email_verified||0,i.phone_verified||0,i.bio||null,i.date_of_birth||null,i.gender||null,i.nationality||null,i.address||null,i.city||null,i.country||null,i.postal_code||null,JSON.stringify(i.preferences||{}),a])).affectedRows)throw o({statusCode:404,statusMessage:"User not found"});const d=await s("\n      SELECT \n        id,\n        email,\n        full_name,\n        phone,\n        role,\n        status,\n        email_verified,\n        phone_verified,\n        bio,\n        date_of_birth,\n        gender,\n        nationality,\n        address,\n        city,\n        country,\n        postal_code,\n        preferences,\n        created_at,\n        updated_at,\n        last_login,\n        login_count\n      FROM users \n      WHERE id = ?\n    ",[a]);if(!d||0===d.length)throw o({statusCode:500,statusMessage:"Failed to retrieve updated user"});const l=d[0];return{success:!0,message:"User updated successfully",data:{id:l.id,email:l.email,full_name:l.full_name,phone:l.phone,role:l.role,status:l.status,email_verified:l.email_verified,phone_verified:l.phone_verified,bio:l.bio,date_of_birth:l.date_of_birth,gender:l.gender,nationality:l.nationality,address:l.address,city:l.city,country:l.country,postal_code:l.postal_code,preferences:JSON.parse(l.preferences||"{}"),created_at:l.created_at,updated_at:l.updated_at,last_login:l.last_login,login_count:l.login_count}}}catch(e){if(console.error("Error updating user:",e),e.statusCode)throw e;throw o({statusCode:500,statusMessage:"Failed to update user"})}}));export{a as default};
//# sourceMappingURL=_id_.put.mjs.map
