import{c as e,g as t,e as o}from"../../../_/nitro.mjs";import{executeQuery as n}from"../../../_/database.mjs";import"node:http";import"node:https";import"node:events";import"node:buffer";import"vue";import"node:fs";import"node:url";import"@iconify/utils";import"node:crypto";import"consola";import"ipx";import"node:path";import"mysql2/promise";import"bcryptjs";import"jsonwebtoken";const r=e((async e=>{try{const r=t(e,"id");if(!r)throw o({statusCode:400,statusMessage:"User ID is required"});const i=await n("\n      SELECT \n        id,\n        email,\n        full_name,\n        phone,\n        role,\n        status,\n        email_verified,\n        phone_verified,\n        bio,\n        date_of_birth,\n        gender,\n        nationality,\n        address,\n        city,\n        country,\n        postal_code,\n        preferences,\n        created_at,\n        updated_at,\n        last_login,\n        login_count\n      FROM users \n      WHERE id = ?\n    ",[r]);if(!i||0===i.length)throw o({statusCode:404,statusMessage:"User not found"});const s=i[0];return{success:!0,data:{id:s.id,email:s.email,full_name:s.full_name,phone:s.phone,role:s.role,status:s.status,email_verified:s.email_verified,phone_verified:s.phone_verified,bio:s.bio,date_of_birth:s.date_of_birth,gender:s.gender,nationality:s.nationality,address:s.address,city:s.city,country:s.country,postal_code:s.postal_code,preferences:JSON.parse(s.preferences||"{}"),created_at:s.created_at,updated_at:s.updated_at,last_login:s.last_login,login_count:s.login_count}}}catch(e){if(console.error("Error fetching user:",e),e.statusCode)throw e;throw o({statusCode:500,statusMessage:"Failed to fetch user"})}}));export{r as default};
//# sourceMappingURL=_id_.mjs.map
