import{c as t,g as e,r as o,e as s}from"../../../../_/nitro.mjs";import{executeQuery as i}from"../../../../_/database.mjs";import"node:http";import"node:https";import"node:events";import"node:buffer";import"vue";import"node:fs";import"node:url";import"@iconify/utils";import"node:crypto";import"consola";import"ipx";import"node:path";import"mysql2/promise";import"bcryptjs";import"jsonwebtoken";const r=t((async t=>{var r,n,a,p,d,l;const m=e(t,"id"),c=await o(t);if(!m)throw s({statusCode:400,statusMessage:"Page ID is required"});try{if(await i("\n      UPDATE cms_pages SET\n        title = ?,\n        meta_title = ?,\n        meta_description = ?,\n        status = ?,\n        template = ?,\n        updated_at = CURRENT_TIMESTAMP\n      WHERE id = ?\n    ",[c.title_ar||c.title||"",c.title_en||c.meta_title||"",c.meta_description_ar||c.meta_description||"",c.status||"draft",c.template||"default",m]),await i("DELETE FROM cms_sections WHERE page_id = ?",[m]),c.components&&Array.isArray(c.components))for(let t=0;t<c.components.length;t++){const e=c.components[t];await i("\n          INSERT INTO cms_sections (\n            page_id, section_type, title, subtitle, content,\n            background_color, background_image, text_color, order_index, is_active, settings\n          ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\n        ",[m,e.type||"generic",(null==(r=e.props)?void 0:r.title)||"",(null==(n=e.props)?void 0:n.subtitle)||"",(null==(a=e.props)?void 0:a.content)||"",(null==(p=e.props)?void 0:p.backgroundColor)||"",(null==(d=e.props)?void 0:d.backgroundImage)||"",(null==(l=e.props)?void 0:l.textColor)||"",t,!0,JSON.stringify(e.props||{})])}return{success:!0,message:"Page updated successfully"}}catch(t){throw console.error("Error updating page:",t),s({statusCode:500,statusMessage:"Failed to update page"})}}));export{r as default};
//# sourceMappingURL=_id_.put.mjs.map
