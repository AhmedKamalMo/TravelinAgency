import{c as t,f as o,e}from"../../../_/nitro.mjs";import{executeQuery as r}from"../../../_/database.mjs";import"node:http";import"node:https";import"node:events";import"node:buffer";import"vue";import"node:fs";import"node:url";import"@iconify/utils";import"node:crypto";import"consola";import"node:module";import"ipx";import"node:path";import"mysql2/promise";import"bcryptjs";import"jsonwebtoken";const s=t((async t=>{try{const e=o(t),{category:s,public_only:i=!1}=e;let n="SELECT * FROM cms_site_settings WHERE 1=1";const p=[];s&&(n+=" AND category = ?",p.push(s)),"true"===i&&(n+=" AND is_public = 1"),n+=" ORDER BY category, setting_key";const c=await r(n,p),a=c.reduce(((t,o)=>(t[o.category]||(t[o.category]=[]),t[o.category].push(o),t)),{}),m=c.reduce(((t,o)=>(t[o.setting_key]=o.setting_value,t)),{});return{success:!0,data:{settings:a,flat:c,flatObject:m}}}catch(t){throw console.error("Error fetching site settings:",t),e({statusCode:500,statusMessage:"Error fetching site settings"})}}));export{s as default};
//# sourceMappingURL=site-settings.get.mjs.map
