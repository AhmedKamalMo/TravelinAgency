import{c as t,f as e,e as n}from"../../../_/nitro.mjs";import{e as o}from"../../../_/database.mjs";import"node:http";import"node:https";import"node:events";import"node:buffer";import"vue";import"node:fs";import"node:url";import"@iconify/utils";import"node:crypto";import"consola";import"ipx";import"node:path";import"mysql2/promise";import"bcryptjs";import"jsonwebtoken";const s=t((async t=>{try{const n=e(t),{menu_name:s,active_only:r=!0}=n;let i="\n      SELECT \n        n.*,\n        p.slug as page_slug,\n        p.title as page_title\n      FROM cms_navigation n\n      LEFT JOIN cms_pages p ON n.page_id = p.id\n      WHERE 1=1\n    ";const a=[];s&&(i+=" AND n.menu_name = ?",a.push(s)),"true"===r&&(i+=" AND n.is_active = 1"),i+=" ORDER BY n.menu_name, n.order_index ASC";const p=await o(i,a),m=new Map,c=[];for(const t of p)m.set(t.id,{...t,children:[]});for(const t of p)if(t.parent_id){const e=m.get(t.parent_id);e&&e.children.push(m.get(t.id))}else c.push(m.get(t.id));return{success:!0,data:{menus:c.reduce(((t,e)=>(t[e.menu_name]||(t[e.menu_name]=[]),t[e.menu_name].push(e),t)),{}),flat:p}}}catch(t){throw console.error("Error fetching navigation:",t),n({statusCode:500,statusMessage:"Error fetching navigation"})}}));export{s as default};
//# sourceMappingURL=navigation.get.mjs.map
