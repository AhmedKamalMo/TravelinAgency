import{c as t,g as o,e as s}from"../../../_/nitro.mjs";import{executeQuery as e}from"../../../_/database.mjs";import"node:http";import"node:https";import"node:events";import"node:buffer";import"vue";import"node:fs";import"node:url";import"@iconify/utils";import"node:crypto";import"consola";import"ipx";import"node:path";import"mysql2/promise";import"bcryptjs";import"jsonwebtoken";const i=t((async t=>{try{const i=o(t,"id");if(!i)throw s({statusCode:400,statusMessage:"Destination ID is required"});const n=await e("\n      SELECT id FROM destinations WHERE id = ?\n    ",[i]);if(!n||0===n.length)throw s({statusCode:404,statusMessage:"Destination not found"});if(0===(await e("\n      DELETE FROM destinations WHERE id = ?\n    ",[i])).affectedRows)throw s({statusCode:404,statusMessage:"Destination not found"});return{success:!0,message:"Destination deleted successfully"}}catch(t){if(console.error("Error deleting destination:",t),t.statusCode)throw t;throw s({statusCode:500,statusMessage:"Failed to delete destination"})}}));export{i as default};
//# sourceMappingURL=_id_.delete.mjs.map
