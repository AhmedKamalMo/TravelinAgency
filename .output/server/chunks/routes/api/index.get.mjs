import{c as t,f as e,e as a}from"../../_/nitro.mjs";import{executeQuery as n}from"../../_/database.mjs";import"node:http";import"node:https";import"node:events";import"node:buffer";import"vue";import"node:fs";import"node:url";import"@iconify/utils";import"node:crypto";import"consola";import"ipx";import"node:path";import"mysql2/promise";import"bcryptjs";import"jsonwebtoken";const i=t((async t=>{var i;try{const a=e(t),{page:r="1",limit:o="50",type:s="",status:p="",featured:d="",search:c=""}=a,m=parseInt(r),u=parseInt(o),_=(m-1)*u;let l=[],h=[];if(s&&(l.push("category = ?"),h.push(s)),p&&(l.push("active = ?"),h.push("active"===p?1:0)),d&&(l.push("featured = ?"),h.push("true"===d?1:0)),c){l.push("(name_ar LIKE ? OR name_en LIKE ? OR description_ar LIKE ? OR description_en LIKE ?)");const t=`%${c}%`;h.push(t,t,t,t)}const f=l.length>0?`WHERE ${l.join(" AND ")}`:"",g=`SELECT COUNT(*) as total FROM destinations ${f}`,E=(null==(i=(await n(g,h))[0])?void 0:i.total)||0,v=`\n      SELECT \n        id,\n        name_ar,\n        name_en,\n        description_ar,\n        description_en,\n        image_url,\n        featured,\n        category,\n        active,\n        created_at,\n        updated_at\n      FROM destinations \n      ${f}\n      ORDER BY featured DESC, created_at DESC\n      LIMIT ? OFFSET ?\n    `,y=await n(v,[...h,u,_]);return{success:!0,data:y.map((t=>({id:t.id,name:t.name_ar||t.name_en,name_ar:t.name_ar,name_en:t.name_en,description:t.description_ar||t.description_en,description_ar:t.description_ar,description_en:t.description_en,image:t.image_url,image_url:t.image_url,featured:1===t.featured,category:t.category,active:1===t.active,status:1===t.active?"active":"inactive",created_at:t.created_at,updated_at:t.updated_at}))),pagination:{page:m,limit:u,total:E,totalPages:Math.ceil(E/u)}}}catch(t){throw console.error("Error fetching destinations:",t),a({statusCode:500,statusMessage:"Failed to fetch destinations"})}}));export{i as default};
//# sourceMappingURL=index.get.mjs.map
