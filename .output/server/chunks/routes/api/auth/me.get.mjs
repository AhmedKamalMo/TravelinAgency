import{c as t,i as o,e}from"../../../_/nitro.mjs";import{verifyJWT as s,getUserById as r}from"../../../_/database.mjs";import"node:http";import"node:https";import"node:events";import"node:buffer";import"vue";import"node:fs";import"node:url";import"@iconify/utils";import"node:crypto";import"consola";import"node:module";import"ipx";import"node:path";import"mysql2/promise";import"bcryptjs";import"jsonwebtoken";const i=t((async t=>{try{const i=o(t,"auth-token");if(!i)throw e({statusCode:401,statusMessage:"No authentication token found"});let a;try{a=s(i)}catch(t){throw e({statusCode:401,statusMessage:"Invalid or expired token"})}const n=await r(a.userId.toString());if(!n)throw e({statusCode:401,statusMessage:"User not found or inactive"});return{success:!0,data:{user:{id:n.id,email:n.email,full_name:n.full_name,phone:n.phone,role:n.role,permissions:n.permissions,status:n.status}}}}catch(t){if(console.error("Auth me API error:",t),t.statusCode)throw t;throw e({statusCode:500,statusMessage:"Internal server error"})}}));export{i as default};
//# sourceMappingURL=me.get.mjs.map
