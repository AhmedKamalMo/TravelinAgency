import{c as e,g as t,r as a,e as i}from"../../../_/nitro.mjs";import{executeQuery as r}from"../../../_/database.mjs";import"node:http";import"node:https";import"node:events";import"node:buffer";import"vue";import"node:fs";import"node:url";import"@iconify/utils";import"node:crypto";import"consola";import"ipx";import"node:path";import"mysql2/promise";import"bcryptjs";import"jsonwebtoken";const n=e((async e=>{try{const n=t(e,"id"),s=await a(e);if(!n)throw i({statusCode:400,statusMessage:"Package ID is required"});if(!(s.title_ar&&s.title_en&&s.description_ar&&s.description_en))throw i({statusCode:400,statusMessage:"Title and description in both languages are required"});if(0===(await r("\n      UPDATE packages SET\n        title_ar = ?,\n        title_en = ?,\n        description_ar = ?,\n        description_en = ?,\n        price = ?,\n        duration_days = ?,\n        travel_period = ?,\n        max_persons = ?,\n        image_url = ?,\n        featured = ?,\n        active = ?,\n        features = ?,\n        itinerary = ?,\n        included = ?,\n        excluded = ?,\n        updated_at = CURRENT_TIMESTAMP\n      WHERE id = ?\n    ",[s.title_ar,s.title_en,s.description_ar,s.description_en,s.price||0,s.duration_days||1,s.travel_period||"",s.max_persons||10,s.image_url||"",s.featured?1:0,"active"===s.status?1:0,JSON.stringify(s.features||[]),JSON.stringify(s.itinerary||[]),JSON.stringify(s.included||[]),JSON.stringify(s.excluded||[]),n])).affectedRows)throw i({statusCode:404,statusMessage:"Package not found"});const o=await r("\n      SELECT \n        id, \n        title_ar,\n        title_en,\n        description_ar,\n        description_en,\n        price,\n        duration_days as duration,\n        image_url as image,\n        travel_period as location,\n        max_persons,\n        category,\n        featured,\n        active as status,\n        features,\n        itinerary,\n        included,\n        excluded,\n        created_at,\n        updated_at\n      FROM packages \n      WHERE id = ?\n    ",[n]);if(!o||0===o.length)throw i({statusCode:500,statusMessage:"Failed to retrieve updated package"});const d=o[0];return{success:!0,message:"Package updated successfully",package:{id:d.id,image_url:d.image,image:d.image,title_ar:d.title_ar,title_en:d.title_en,title:d.title_ar||d.title_en,description_ar:d.description_ar,description_en:d.description_en,description:d.description_ar||d.description_en,travel_period:d.location||`${d.duration} أيام`,duration_days:d.duration,price:d.price,max_persons:d.max_persons||10,featured:d.featured,location:d.location,category:d.category||"international",status:1===d.status?"active":"inactive",features:JSON.parse(d.features||"[]"),itinerary:JSON.parse(d.itinerary||"[]"),included:JSON.parse(d.included||"[]"),excluded:JSON.parse(d.excluded||"[]"),created_at:d.created_at,updated_at:d.updated_at}}}catch(e){if(console.error("Error updating package:",e),e.statusCode)throw e;throw i({statusCode:500,statusMessage:"Failed to update package"})}}));export{n as default};
//# sourceMappingURL=_id_.put.mjs.map
