import{c as e,g as t,r as a,e as n}from"../../../_/nitro.mjs";import{executeQuery as o}from"../../../_/database.mjs";import"node:http";import"node:https";import"node:events";import"node:buffer";import"vue";import"node:fs";import"node:url";import"@iconify/utils";import"node:crypto";import"consola";import"node:module";import"ipx";import"node:path";import"mysql2/promise";import"bcryptjs";import"jsonwebtoken";const s=e((async e=>{try{const s=t(e,"id"),r=await a(e);if(!s)throw n({statusCode:400,statusMessage:"Booking ID is required"});if(!(r.customer_name&&r.customer_email&&r.customer_phone&&r.package_id&&r.departure_date&&r.total_amount))throw n({statusCode:400,statusMessage:"Customer name, email, phone, package, departure date, and total amount are required"});if(0===(await o("\n      UPDATE bookings SET\n        package_id = ?,\n        customer_name = ?,\n        customer_email = ?,\n        customer_phone = ?,\n        customer_details = ?,\n        guests_count = ?,\n        guests_details = ?,\n        departure_date = ?,\n        return_date = ?,\n        total_amount = ?,\n        paid_amount = ?,\n        currency = ?,\n        payment_status = ?,\n        booking_status = ?,\n        payment_method = ?,\n        payment_reference = ?,\n        special_requests = ?,\n        notes = ?,\n        cancellation_reason = ?,\n        cancellation_date = ?,\n        confirmed_at = ?,\n        updated_at = CURRENT_TIMESTAMP\n      WHERE id = ?\n    ",[r.package_id,r.customer_name,r.customer_email,r.customer_phone,JSON.stringify(r.customer_details||{}),r.guests_count||1,JSON.stringify(r.guests_details||[]),r.departure_date,r.return_date||null,r.total_amount,r.paid_amount||0,r.currency||"SAR",r.payment_status||"pending",r.booking_status||"pending",r.payment_method||null,r.payment_reference||null,r.special_requests||null,r.notes||null,r.cancellation_reason||null,r.cancellation_date||null,r.confirmed_at||null,s])).affectedRows)throw n({statusCode:404,statusMessage:"Booking not found"});const i=await o("\n      SELECT \n        b.id, \n        b.booking_number,\n        b.customer_name,\n        b.customer_email,\n        b.customer_phone,\n        b.customer_details,\n        b.guests_count,\n        b.guests_details,\n        b.departure_date,\n        b.return_date,\n        b.total_amount,\n        b.paid_amount,\n        b.currency,\n        b.payment_status,\n        b.booking_status,\n        b.payment_method,\n        b.payment_reference,\n        b.special_requests,\n        b.notes,\n        b.cancellation_reason,\n        b.cancellation_date,\n        b.confirmed_at,\n        b.created_at,\n        b.updated_at,\n        p.id as package_id,\n        p.title_ar as package_title_ar,\n        p.title_en as package_title_en,\n        p.title as package_title,\n        p.price as package_price,\n        p.duration_days as package_duration,\n        p.travel_period as package_location,\n        p.image_url as package_image\n      FROM bookings b\n      LEFT JOIN packages p ON b.package_id = p.id\n      WHERE b.id = ?\n    ",[s]);if(!i||0===i.length)throw n({statusCode:500,statusMessage:"Failed to retrieve updated booking"});const _=i[0];return{success:!0,message:"Booking updated successfully",data:{id:_.id,booking_number:_.booking_number,customer_name:_.customer_name,customer_email:_.customer_email,customer_phone:_.customer_phone,customer_details:JSON.parse(_.customer_details||"{}"),guests_count:_.guests_count,guests_details:JSON.parse(_.guests_details||"[]"),departure_date:_.departure_date,return_date:_.return_date,total_amount:_.total_amount,paid_amount:_.paid_amount,currency:_.currency,payment_status:_.payment_status,booking_status:_.booking_status,payment_method:_.payment_method,payment_reference:_.payment_reference,special_requests:_.special_requests,notes:_.notes,cancellation_reason:_.cancellation_reason,cancellation_date:_.cancellation_date,confirmed_at:_.confirmed_at,created_at:_.created_at,updated_at:_.updated_at,package:{id:_.package_id,title_ar:_.package_title_ar,title_en:_.package_title_en,title:_.package_title_ar||_.package_title_en||_.package_title,price:_.package_price,duration_days:_.package_duration,location:_.package_location,travel_period:_.package_location,image_url:_.package_image}}}}catch(e){if(console.error("Error updating booking:",e),e.statusCode)throw e;throw n({statusCode:500,statusMessage:"Failed to update booking"})}}));export{s as default};
//# sourceMappingURL=_id_.put.mjs.map
