import{c as o,g as t,e as s}from"../../../_/nitro.mjs";import{executeQuery as e}from"../../../_/database.mjs";import"node:http";import"node:https";import"node:events";import"node:buffer";import"vue";import"node:fs";import"node:url";import"@iconify/utils";import"node:crypto";import"consola";import"ipx";import"node:path";import"mysql2/promise";import"bcryptjs";import"jsonwebtoken";const i=o((async o=>{try{const i=t(o,"id");if(!i)throw s({statusCode:400,statusMessage:"Booking ID is required"});const r=await e("\n      SELECT id FROM bookings WHERE id = ?\n    ",[i]);if(!r||0===r.length)throw s({statusCode:404,statusMessage:"Booking not found"});if(0===(await e("\n      DELETE FROM bookings WHERE id = ?\n    ",[i])).affectedRows)throw s({statusCode:404,statusMessage:"Booking not found"});return{success:!0,message:"Booking deleted successfully"}}catch(o){if(console.error("Error deleting booking:",o),o.statusCode)throw o;throw s({statusCode:500,statusMessage:"Failed to delete booking"})}}));export{i as default};
//# sourceMappingURL=_id_.delete.mjs.map
