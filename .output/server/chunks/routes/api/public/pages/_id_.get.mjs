import{c as t,g as e,e as o}from"../../../../_/nitro.mjs";import{executeQuery as n}from"../../../../_/database.mjs";import"node:http";import"node:https";import"node:events";import"node:buffer";import"vue";import"node:fs";import"node:url";import"@iconify/utils";import"node:crypto";import"consola";import"node:module";import"ipx";import"node:path";import"mysql2/promise";import"bcryptjs";import"jsonwebtoken";const i=t((async t=>{const i=e(t,"id");if(!i)throw o({statusCode:400,statusMessage:"Page ID is required"});try{const t=await n("\n      SELECT \n        id, \n        title,\n        meta_title,\n        meta_description,\n        'page' as type,\n        status,\n        template,\n        created_at,\n        updated_at\n      FROM cms_pages \n      WHERE id = ? AND status = 'published'\n    ",[i]);if(!t||0===t.length)throw o({statusCode:404,statusMessage:"Page not found or not published"});const e=t[0],s=(await n("\n      SELECT \n        id,\n        section_type,\n        title,\n        subtitle,\n        content,\n        background_color,\n        background_image,\n        text_color,\n        order_index,\n        is_active,\n        settings\n      FROM cms_sections \n      WHERE page_id = ? AND is_active = TRUE\n      ORDER BY order_index ASC\n    ",[i])).map((t=>({id:t.id,type:t.section_type,props:{title:t.title||"",subtitle:t.subtitle||"",content:t.content||"",backgroundImage:t.background_image||"",backgroundColor:t.background_color||"",textColor:t.text_color||""},classes:"mb-6"})));return{success:!0,page:{id:e.id,title:e.title,title_ar:e.title,title_en:e.meta_title||e.title,content:e.meta_description||"",content_ar:e.meta_description||"",content_en:e.meta_description||"",components:s,type:e.type,status:e.status,template:e.template,created_at:e.created_at,updated_at:e.updated_at}}}catch(t){if(console.error("Error fetching public page:",t),t.statusCode)throw t;throw o({statusCode:500,statusMessage:"Failed to fetch page data"})}}));export{i as default};
//# sourceMappingURL=_id_.get.mjs.map
