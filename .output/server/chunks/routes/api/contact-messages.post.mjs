import{c as e,r as t,e as s}from"../../_/nitro.mjs";import{executeQuery as a}from"../../_/database.mjs";import"node:http";import"node:https";import"node:events";import"node:buffer";import"vue";import"node:fs";import"node:url";import"@iconify/utils";import"node:crypto";import"consola";import"ipx";import"node:path";import"mysql2/promise";import"bcryptjs";import"jsonwebtoken";const o=e((async e=>{try{const o=await t(e),{name:r,email:n,phone:i,subject:c,message:d,type:m="general",source:l="website",related_package_id:p=null,related_destination_id:u=null}=o;if(!r||!d)throw s({statusCode:400,statusMessage:"Name and message are required"});console.log("Inserting contact message with data:",{name:r,email:n||null,phone:i||null,subject:c||"استفسار عام",message:d,type:m,source:l,related_package_id:p,related_destination_id:u});const g=await a("\n      INSERT INTO contact_messages (\n        name, email, phone, subject, message, type, status, source,\n        related_package_id, related_destination_id, ip_address, user_agent, created_at, updated_at\n      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, NOW(), NOW())\n    ",[r,n||null,i||null,c||"استفسار عام",d,m,"new",l,p,u,"127.0.0.1","Test User Agent"]);if(console.log("Database result:",g),!g||0===g.affectedRows)throw console.error("Database insert failed:",g),s({statusCode:500,statusMessage:"Failed to save contact message"});return{success:!0,message:"Contact message submitted successfully",id:g.affectedRows>0?"success":null}}catch(e){if(console.error("Error creating contact message:",e),e.statusCode)throw e;throw s({statusCode:500,statusMessage:"Failed to process contact message"})}}));export{o as default};
//# sourceMappingURL=contact-messages.post.mjs.map
